/*! For license information please see roboflow.js.LICENSE.txt */
var roboflow;roboflow=(()=>{var e={4618:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Pe,deregisterOp:()=>E,loadGraphModel:()=>Ve,loadGraphModelSync:()=>We,registerOp:()=>C,version_converter:()=>Ue});var r={};n.r(r),n.d(r,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>L});var a={};n.r(a),n.d(a,{json:()=>B});var i={};n.r(i),n.d(i,{json:()=>P});var o={};n.r(o),n.d(o,{json:()=>V});var u={};n.r(u),n.d(u,{json:()=>W});var l={};n.r(l),n.d(l,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>G});var h={};n.r(h),n.d(h,{json:()=>j});var p={};n.r(p),n.d(p,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>q});var f={};n.r(f),n.d(f,{json:()=>X});var m={};n.r(m),n.d(m,{json:()=>K});var g={};n.r(g),n.d(g,{json:()=>Y});var y={};n.r(y),n.d(y,{json:()=>Z});var b={};n.r(b),n.d(b,{json:()=>Q});var x={};n.r(x),n.d(x,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var w={};n.r(w),n.d(w,{json:()=>te});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>be.zvA,abs:()=>be.WnP,acos:()=>be.Khb,acosh:()=>be.__u,add:()=>be.IHx,addN:()=>be.QBD,all:()=>be.$6P,any:()=>be.YjB,argMax:()=>be.NqF,argMin:()=>be.vHJ,asin:()=>be.ZRM,asinh:()=>be.VfV,atan:()=>be.z4N,atan2:()=>be.fvJ,atanh:()=>be.C80,avgPool:()=>be.wS1,avgPool3d:()=>be.uR5,basicLSTMCell:()=>be.zEQ,batchNorm:()=>be.tgs,batchNorm2d:()=>be.Dxk,batchNorm3d:()=>be.JY5,batchNorm4d:()=>be.p3b,batchToSpaceND:()=>be.E4h,bincount:()=>be.yE8,booleanMaskAsync:()=>be.anm,broadcastArgs:()=>be.XsQ,broadcastTo:()=>be.UFq,buffer:()=>be.f3b,cast:()=>be.pju,ceil:()=>be.mDi,clipByValue:()=>be.iUl,clone:()=>be.d9v,complex:()=>be.PYB,concat:()=>be.zoF,concat1d:()=>be.gME,concat2d:()=>be.Izb,concat3d:()=>be.MNy,concat4d:()=>be.ZaL,conv1d:()=>be.PAt,conv2d:()=>be.Tek,conv2dTranspose:()=>be.bc,conv3d:()=>be.pdZ,conv3dTranspose:()=>be.$QV,cos:()=>be.mCk,cosh:()=>be.f9Y,cosineWindow:()=>be.mew,cumprod:()=>be.$Gn,cumsum:()=>be.zbp,denseBincount:()=>be.ppE,depthToSpace:()=>be.nTT,depthwiseConv2d:()=>be.B10,diag:()=>be.Ka3,dilation2d:()=>be.WmZ,div:()=>be.hiC,divNoNan:()=>be.NTj,dot:()=>be.AKD,dropout:()=>be.rvX,einsum:()=>be.WYO,elu:()=>be.pyx,enclosingPowerOfTwo:()=>be.GRh,equal:()=>be.DgJ,erf:()=>be.qNN,euclideanNorm:()=>be.d2q,exp:()=>be.Qqt,expandDims:()=>be.dt4,expm1:()=>be.t$B,eye:()=>be.iyy,fft:()=>be.kp_,fill:()=>be.hlL,floor:()=>be.GWj,floorDiv:()=>be.qPi,fused:()=>be.imm,gather:()=>be.Iqj,gatherND:()=>be.dbB,greater:()=>be.pjt,greaterEqual:()=>be.brS,ifft:()=>be.Sxn,imag:()=>be.asL,image:()=>be.BHj,inTopKAsync:()=>be.V3u,irfft:()=>be.wx0,isFinite:()=>be.xVT,isInf:()=>be.UWc,isNaN:()=>be.i2d,leakyRelu:()=>be.hi7,less:()=>be.d9m,lessEqual:()=>be.zN1,linalg:()=>be.$r2,linspace:()=>be.SX3,localResponseNormalization:()=>be.G9k,log:()=>be.cM7,log1p:()=>be.Krr,logSigmoid:()=>be.e_t,logSoftmax:()=>be.CmS,logSumExp:()=>be.l_t,logicalAnd:()=>be.HvI,logicalNot:()=>be.hJK,logicalOr:()=>be.K5V,logicalXor:()=>be.egP,losses:()=>be.MB5,lowerBound:()=>be.eab,matMul:()=>be.OI3,max:()=>be.Fp7,maxPool:()=>be._sB,maxPool3d:()=>be.YQQ,maxPoolWithArgmax:()=>be.Ip$,maximum:()=>be.gWQ,mean:()=>be.J69,meshgrid:()=>be.ry_,min:()=>be.VV$,minimum:()=>be.LTh,mirrorPad:()=>be.VdP,mod:()=>be.wQq,moments:()=>be.Gi7,movingAverage:()=>be.p_,mul:()=>be.dC7,multiRNNCell:()=>be.rq4,multinomial:()=>be.SJ_,neg:()=>be.W76,norm:()=>be.KOy,notEqual:()=>be.Quu,oneHot:()=>be.lfX,ones:()=>be.iUs,onesLike:()=>be.JpU,op:()=>be.op,outerProduct:()=>be.N2O,pad:()=>be.vku,pad1d:()=>be.pNR,pad2d:()=>be.koy,pad3d:()=>be.t1L,pad4d:()=>be.lGY,pool:()=>be.d_R,pow:()=>be.sQ3,prelu:()=>be.AL3,print:()=>be.S0v,prod:()=>be.WVs,rand:()=>be.TN_,randomGamma:()=>be.wzB,randomNormal:()=>be.nGf,randomStandardNormal:()=>be.ruB,randomUniform:()=>be.LGj,range:()=>be.w6H,real:()=>be.kwC,reciprocal:()=>be.M25,relu:()=>be.UYe,relu6:()=>be.btT,reshape:()=>be.XLQ,reverse:()=>be.GYS,reverse1d:()=>be.SDf,reverse2d:()=>be.diP,reverse3d:()=>be.sx7,reverse4d:()=>be.mG2,rfft:()=>be.QEs,round:()=>be.NMM,rsqrt:()=>be.bp0,scalar:()=>Ce.i,scatterND:()=>be.snQ,searchSorted:()=>be.zcT,selu:()=>be.U8D,separableConv2d:()=>be.U_I,setdiff1dAsync:()=>be.ODp,sigmoid:()=>be.XD2,sign:()=>be.Xxe,signal:()=>be.tdS,sin:()=>be.O$l,sinh:()=>be.R_K,slice:()=>be.tPi,slice1d:()=>be.jZU,slice2d:()=>be.SmN,slice3d:()=>be.CnO,slice4d:()=>be.p0P,softmax:()=>be.XAC,softplus:()=>be.Wvh,spaceToBatchND:()=>be.fBT,sparse:()=>be.rVs,sparseToDense:()=>be.ers,spectral:()=>be.uN7,split:()=>be.Vl2,sqrt:()=>be._b3,square:()=>be.h62,squaredDifference:()=>be.$i,squeeze:()=>be.L9e,stack:()=>be.knu,step:()=>be.Nbs,stridedSlice:()=>be.NXj,string:()=>be.Z_8,sub:()=>be.luU,sum:()=>be.Smz,tan:()=>be.ORZ,tanh:()=>be.AEp,tensor:()=>be.XeE,tensor1d:()=>be.RRF,tensor2d:()=>be.odF,tensor3d:()=>be.wOQ,tensor4d:()=>be.yXz,tensor5d:()=>be.Bfx,tensor6d:()=>be.xZs,tile:()=>be.Gg6,topk:()=>be.hg7,transpose:()=>be.p4s,truncatedNormal:()=>be.Xu6,unique:()=>be.Two,unsortedSegmentSum:()=>be.pUJ,unstack:()=>be.HHK,upperBound:()=>be.GaM,variable:()=>be.VD$,where:()=>be.arb,whereAsync:()=>be.itS,zeros:()=>be.lls,zerosLike:()=>be.P84});var S,I,N=n(1740);(0,N.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(S||(S={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const T={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};T[e]=n}function _(e){return T[e]}function E(e){delete T[e]}function $(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return A(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>A(e,n,r,s)));const o=A(t.inputNames.slice(e)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:N.util.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function A(e,t,n,r){const[s,a]=F(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[D(s,e)]));return void 0!==i?t[D(s,i)][a]:void 0}function R(e,t){const[n,r,s]=F(e);return[D(n,t&&t.currentContextId),r,s]}function D(e,t){return t?`${e}-${t}`:e}function F(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function O(e,t,n){let r=$("pad",e,t,n);if("explicit"===r){r=$("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function M(e){return e.kept?e:(0,N.clone)(e)}const z=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],P=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],V=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],W=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],G=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],j=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],H=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],q=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],X=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],K=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Y=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Z=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Q=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ee=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],te=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ne{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=R(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=R(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=R(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=_(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=se(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=fe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=ie(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=de(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=ae(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ge(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=pe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=me(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=le(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=ce(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=ue(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=R(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:oe(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=R(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=R(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,N.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n,r=!1){const s=e[t];return null!=s?re(s.s,r):n}function ae(e,t,n){const r=e[t];return r?r.b:n}function ie(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function oe(e){switch("string"==typeof e&&(e=S[e]),e){case S.DT_FLOAT:case S.DT_HALF:return"float32";case S.DT_INT32:case S.DT_INT64:case S.DT_INT8:case S.DT_UINT8:return"int32";case S.DT_BOOL:return"bool";case S.DT_DOUBLE:return"float32";case S.DT_STRING:return"string";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function le(e,t,n){const r=e[t];return r&&r.type?oe(r.type):n}function ce(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>oe(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const r=e[t];return r&&r.shape?he(r.shape):n}function de(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function fe(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>re(e,r))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>he(e))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ye{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return A(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return A(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return ae(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return le(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return de(this.node.rawAttrs,e,t);if(null!=n.list.s)return fe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return me(this.node.rawAttrs,e,t);if(null!=n.list.b)return ge(this.node.rawAttrs,e,t);if(null!=n.list.type)return ce(this.node.rawAttrs,e,t)}return t}}var be=n(31);function xe(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){N.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];N.util.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function ve(e){return"number"!=typeof e&&!e.some((e=>e<0))}function we(e,t,n){let r=ke(e,n);const s=!ve(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=ke(e.shape,r)})),!ve(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function ke(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class Se{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,N.scalar)(0),(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,N.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,N.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,N.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,N.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,N.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,N.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,N.tidy)((()=>{t=(0,N.reshape)(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=(0,N.reshape)((0,N.slice)(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class Ie{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xe(t,e.shape,"TensorList shape mismatch: "),(0,N.keep)(e)})),this.idTensor=(0,N.scalar)(0),this.maxNumElements=r,(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ie([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xe(e,this.elementShape,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,e);return(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,r)));return(0,N.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=we(this.elementShape,this.tensors,e),r=this.tensors.pop();return xe(r.shape,e,"TensorList shape mismatch: "),(0,N.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,N.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ie([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,t);return(0,N.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,N.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=we(this.elementShape,this.tensors,n);return 0===e.length?(0,N.tensor)([],[0].concat(r)):(0,N.tidy)((()=>{const t=e.map((e=>(0,N.reshape)(this.tensors[e],r)));return(0,N.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xe(this.elementShape,t,"TensorList shape mismatch: ");const n=we(this.elementShape,this.tensors,t);return 0===this.size()?(0,N.tensor)([],[0].concat(n)):(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,n)));return(0,N.concat)(e,0)}))}}function Ne(e,t,n){const[r,s]=$("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=$("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$("strides",e,t,n),h=O(e,t,n),p=$("dataFormat",e,t,n).toUpperCase(),d=$("dilations",e,t,n);let[f,m]=$("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:$("leakyreluAlpha",e,t,n)}}function Te(e,t,n){return{boxes:$("boxes",e,t,n),scores:$("scores",e,t,n),maxOutputSize:$("maxOutputSize",e,t,n),iouThreshold:$("iouThreshold",e,t,n),scoreThreshold:$("scoreThreshold",e,t,n),softNmsSigma:$("softNmsSigma",e,t,n)}}var Ce=n(9494);class _e{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,N.scalar)(0),this.tensorMap=new Map,(0,N.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,N.tidy)((()=>{const e=(0,N.unstack)(t),r=n.length,s=e.length;N.util.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,N.keep)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,N.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,N.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Ee(e,t,n,r,s=N.tidy){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add($("a",e,t,n),$("b",e,t,n))];case"AddN":return[r.addN($("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod($("a",e,t,n),$("b",e,t,n))];case"Mul":return[r.mul($("a",e,t,n),$("b",e,t,n))];case"RealDiv":case"Div":return[r.div($("a",e,t,n),$("b",e,t,n))];case"DivNoNan":return[r.divNoNan($("a",e,t,n),$("b",e,t,n))];case"FloorDiv":return[r.floorDiv($("a",e,t,n),$("b",e,t,n))];case"Sub":return[r.sub($("a",e,t,n),$("b",e,t,n))];case"Minimum":return[r.minimum($("a",e,t,n),$("b",e,t,n))];case"Maximum":return[r.maximum($("a",e,t,n),$("b",e,t,n))];case"Pow":return[r.pow($("a",e,t,n),$("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs($("x",e,t,n))];case"Acos":return[r.acos($("x",e,t,n))];case"Acosh":return[r.acosh($("x",e,t,n))];case"Asin":return[r.asin($("x",e,t,n))];case"Asinh":return[r.asinh($("x",e,t,n))];case"Atan":return[r.atan($("x",e,t,n))];case"Atan2":return[r.atan2($("x",e,t,n),$("y",e,t,n))];case"Atanh":return[r.atanh($("x",e,t,n))];case"Ceil":return[r.ceil($("x",e,t,n))];case"Complex":return[r.complex($("real",e,t,n),$("imag",e,t,n))];case"Cos":return[r.cos($("x",e,t,n))];case"Cosh":return[r.cosh($("x",e,t,n))];case"Elu":return[r.elu($("x",e,t,n))];case"Erf":return[r.erf($("x",e,t,n))];case"Exp":return[r.exp($("x",e,t,n))];case"Expm1":return[r.expm1($("x",e,t,n))];case"Floor":return[r.floor($("x",e,t,n))];case"Log":return[r.log($("x",e,t,n))];case"Log1p":return[r.log1p($("x",e,t,n))];case"Imag":return[r.imag($("x",e,t,n))];case"Neg":return[r.neg($("x",e,t,n))];case"Reciprocal":return[r.reciprocal($("x",e,t,n))];case"Real":return[r.real($("x",e,t,n))];case"Relu":return[r.relu($("x",e,t,n))];case"Round":return[r.round($("x",e,t,n))];case"Selu":return[r.selu($("x",e,t,n))];case"Sigmoid":return[r.sigmoid($("x",e,t,n))];case"Sin":return[r.sin($("x",e,t,n))];case"Sign":return[r.sign($("x",e,t,n))];case"Sinh":return[r.sinh($("x",e,t,n))];case"Softplus":return[r.softplus($("x",e,t,n))];case"Sqrt":return[r.sqrt($("x",e,t,n))];case"Square":return[r.square($("x",e,t,n))];case"Tanh":return[r.tanh($("x",e,t,n))];case"Tan":return[r.tan($("x",e,t,n))];case"ClipByValue":return[r.clipByValue($("x",e,t,n),$("clipValueMin",e,t,n),$("clipValueMax",e,t,n))];case"Relu6":return[r.relu6($("x",e,t,n))];case"Rsqrt":return[r.rsqrt(A(e.inputNames[0],t,n))];case"Prod":return[r.prod($("x",e,t,n),$("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu($("x",e,t,n),$("alpha",e,t,n))];case"Prelu":return[r.prelu($("x",e,t,n),$("alpha",e,t,n))];case"IsNan":return[r.isNaN(A(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$("thenBranch",e,t,n),s=$("elseBranch",e,t,n),a=$("cond",e,t,n),i=$("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",e,t,n),s=$("cond",e,t,n),a=$("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[M($("pred",e,t,n))];case"Switch":{const r=$("pred",e,t,n);let s=$("data",e,t,n);return s.kept||(s=M(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==A(e,t,n)));return r?[M(A(r,t,n))]:void 0}case"Enter":{const r=$("frameName",e,t,n),s=$("tensor",e,t,n);return n.enterFrame(r),[M(s)]}case"Exit":{const r=$("tensor",e,t,n);return n.exitFrame(),[M(r)]}case"NextIteration":{const r=$("tensor",e,t,n);return n.nextIteration(),[M(r)]}case"TensorArrayV3":{const r=$("size",e,t,n),s=$("dtype",e,t,n),a=$("elementShape",e,t,n),i=$("dynamicSize",e,t,n),o=$("clearAfterRead",e,t,n),u=$("identicalElementShapes",e,t,n),l=$("name",e,t,n),c=new Se(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,N.scalar)(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",e,t,n),s=$("index",e,t,n),a=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",e,t,n),s=$("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",e,t,n),s=$("indices",e,t,n),a=$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",e,t,n),s=$("indices",e,t,n),a=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=$("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",e,t,n),s=$("tensor",e,t,n),a=$("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,N.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",e,t,n),s=$("index",e,t,n),a=$("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",e,t,n),s=$("index",e,t,n),a=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Ie([],n,e.dtype,r),i=(0,N.unstack)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}($("tensor",e,t,n),r,$("elementShape",e,t,n),$("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",e,t,n),s=$("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=$(a,e,t,n),o=function(e,t,n,r){return new Ie([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=$("tensorListId",e,t,n),s=$("indices",e,t,n),a=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=$("tensorListId",e,t,n),s=$("elementShape",e,t,n),a=$("elementDType",e,t,n),i=$("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,N.unstack)(e);return new Ie(s,t,r)}($("tensor",e,t,n),$("elementShape",e,t,n),$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=$("tensorListId",e,t,n),s=n.getTensorList(r.id),a=$("dtype",e,t,n),i=$("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=$("tensorListId",e,t,n),s=$("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",e,t,n),s=$("elementShape",e,t,n),a=$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=$("tensor",e,t,n),s=$("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=ke(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,N.tidy)((()=>{const n=[];e=(0,N.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=(0,N.reshape)((0,N.slice)(e,o,u),a)}return e.dispose(),n})),u=new Ie([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,$("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=$("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,N.scalar)(s.size(),"int32")]}case"TensorListResize":{const r=$("tensorListId",e,t,n),s=$("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Conv1D":{const s=$("stride",e,t,n),a=$("pad",e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilation",e,t,n);return[r.conv1d($("x",e,t,n),$("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=$("strides",e,t,n),a=O(e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[r.conv2d($("x",e,t,n),$("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Ne(e,t,n);return[r.fused.conv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Ne(e,t,n);return[r.fused.depthwiseConv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=$("outputShape",e,t,n),a=$("strides",e,t,n),i=O(e,t,n);return[r.conv2dTranspose($("x",e,t,n),$("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=$("strides",e,t,n),a=O(e,t,n),i=$("dilations",e,t,n),o=$("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d($("input",e,t,n),$("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[r.conv3d($("x",e,t,n),$("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.avgPool($("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.maxPool($("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("kernelSize",e,t,n),o=$("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax($("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[u,l]}case"AvgPool3D":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.avgPool3d($("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("kernelSize",e,t,n);return[r.maxPool3d($("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=$("strides",e,t,n),a=$("pad",e,t,n),i=$("dilations",e,t,n),o=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d($("x",e,t,n),$("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Fill":{const s=$("shape",e,t,n),a=$("dtype",e,t,n),i=$("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=$("start",e,t,n),a=$("stop",e,t,n),i=$("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=$("logits",e,t,n),a=$("numSamples",e,t,n),i=$("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=$("indices",e,t,n),a=$("depth",e,t,n),i=$("onValue",e,t,n),o=$("offValue",e,t,n);return[r.oneHot(s,a,i,o)]}case"Ones":return[r.ones($("shape",e,t,n),$("dtype",e,t,n))];case"OnesLike":return[r.onesLike($("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal($("shape",e,t,n),$("dtype",e,t,n),$("seed",e,t,n))];case"RandomUniform":return[r.randomUniform($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("dtype",e,t,n))];case"Range":{const s=$("start",e,t,n),a=$("stop",e,t,n),i=$("step",e,t,n);return[r.range(s,a,i,$("dtype",e,t,n))]}case"TruncatedNormal":{const s=$("shape",e,t,n),a=$("mean",e,t,n),i=$("stdDev",e,t,n),o=$("seed",e,t,n);return[r.truncatedNormal(s,a,i,$("dtype",e,t,n),o)]}case"Zeros":return[r.zeros($("shape",e,t,n),$("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=k)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=Te(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Te(e,t,n),l=$("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Te(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,u)]}case"Where":{const r=s.cast($("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync($("x",e,t,n),$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"LowerBound":{const s=$("sortedSequence",e,t,n),a=$("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=$("x",e,t,n),a=$("k",e,t,n),i=$("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=$("sortedSequence",e,t,n),a=$("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=$("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=$("x",e,t,n),a=$("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ResizeBilinear":{const s=$("images",e,t,n),a=$("size",e,t,n),i=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=$("images",e,t,n),a=$("size",e,t,n),i=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=$("image",e,t,n),a=$("boxes",e,t,n),i=$("boxInd",e,t,n),o=$("cropSize",e,t,n),u=$("method",e,t,n),l=$("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const s=$("images",e,t,n),a=$("transforms",e,t,n),i=$("outputShape",e,t,n),o=$("fillValue",e,t,n),u=$("interpolation",e,t,n),l=$("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=$("default",e,t,n);return[A(e.name,t,n)||s];case"Placeholder":return[A(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[M($("x",e,t,n))];case"IdentityN":return $("x",e,t,n).map((e=>M(e)));case"Shape":return[r.tensor1d($("x",e,t,n).shape,"int32")];case"ShapeN":return $("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar($("x",e,t,n).size,"int32")];case"Rank":return[r.scalar($("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=$("x",e,t,n),i=$("data",e,t,n),o=$("message",e,t,n),u=$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Equal":return[r.equal($("a",e,t,n),$("b",e,t,n))];case"NotEqual":return[r.notEqual($("a",e,t,n),$("b",e,t,n))];case"Greater":return[r.greater($("a",e,t,n),$("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual($("a",e,t,n),$("b",e,t,n))];case"Less":return[r.less($("a",e,t,n),$("b",e,t,n))];case"LessEqual":return[r.lessEqual($("a",e,t,n),$("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd($("a",e,t,n),$("b",e,t,n))];case"LogicalNot":return[r.logicalNot($("a",e,t,n))];case"LogicalOr":return[r.logicalOr($("a",e,t,n),$("b",e,t,n))];case"Select":case"SelectV2":return[r.where($("condition",e,t,n),$("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul($("a",e,t,n),$("b",e,t,n),$("transposeA",e,t,n),$("transposeB",e,t,n))];case"Einsum":return[r.einsum($("equation",e,t,n),...$("tensors",e,t,n))];case"Transpose":return[r.transpose($("x",e,t,n),$("perm",e,t,n))];case"_FusedMatMul":const[s,a]=$("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,u=$("numArgs",e,t,n),l=$("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=$("args",e,t,n);return[r.fused.matMul({a:$("a",e,t,n),b:$("b",e,t,n),transposeA:$("transposeA",e,t,n),transposeB:$("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm($("x",e,t,n),$("axis",e,t,n),$("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm($("x",e,t,n),$("mean",e,t,n),$("variance",e,t,n),$("offset",e,t,n),$("scale",e,t,n),$("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization($("x",e,t,n),$("radius",e,t,n),$("bias",e,t,n),$("alpha",e,t,n),$("beta",e,t,n))];case"Softmax":return[r.softmax($("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax($("x",e,t,n))];case"SparseToDense":return[r.sparseToDense($("sparseIndices",e,t,n),$("outputShape",e,t,n),$("sparseValues",e,t,n),$("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Max":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.max($("x",e,t,n),s,a)]}case"Mean":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.mean($("x",e,t,n),s,a)]}case"Min":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.min($("x",e,t,n),s,a)]}case"Sum":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.sum($("x",e,t,n),s,a)]}case"All":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.all($("x",e,t,n),s,a)]}case"Any":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.any($("x",e,t,n),s,a)]}case"ArgMax":{const s=$("axis",e,t,n);return[r.argMax($("x",e,t,n),s)]}case"ArgMin":{const s=$("axis",e,t,n);return[r.argMin($("x",e,t,n),s)]}case"Prod":{const s=$("axis",e,t,n),a=$("keepDims",e,t,n);return[r.prod($("x",e,t,n),s,a)]}case"Cumprod":{const s=$("axis",e,t,n),a=$("exclusive",e,t,n),i=$("reverse",e,t,n);return[r.cumprod($("x",e,t,n),s,a,i)]}case"Cumsum":{const s=$("axis",e,t,n),a=$("exclusive",e,t,n),i=$("reverse",e,t,n);return[r.cumsum($("x",e,t,n),s,a,i)]}case"Bincount":const s=$("x",e,t,n),a=$("weights",e,t,n),i=$("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=$("x",e,t,n),a=$("weights",e,t,n),i=$("size",e,t,n),o=$("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=$("n",e,t,n),a=$("axis",e,t,n);let i=$("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=$("x",e,t,n),a=$("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=$("axis",e,t,n),a=$("batchDims",e,t,n),i=$("x",e,t,n),o=$("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=$("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=$("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=$("axis",e,t,n),a=$("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=$("begin",e,t,n),a=$("size",e,t,n);return[r.slice($("x",e,t,n),s,a)]}case"StridedSlice":{const s=$("begin",e,t,n),a=$("end",e,t,n),i=$("strides",e,t,n),o=$("beginMask",e,t,n),u=$("endMask",e,t,n),l=$("ellipsisMask",e,t,n),c=$("newAxisMask",e,t,n),h=$("shrinkAxisMask",e,t,n),p=$("x",e,t,n);return[r.stridedSlice(p,s,a,i,o,u,l,c,h)]}case"Pack":return(0,N.tidy)((()=>{const s=$("axis",e,t,n),a=$("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,u=a.map((e=>{const t=N.util.arraysEqual(e.shape,i);if(!t&&!N.util.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(u,s)]}));case"Unpack":{const s=$("axis",e,t,n),a=$("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=$("reps",e,t,n);return[r.tile($("x",e,t,n),s)]}case"Split":case"SplitV":{const s=$("axis",e,t,n),a=$("numOrSizeSplits",e,t,n),i=$("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=$("indices",e,t,n),a=$("values",e,t,n),i=$("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=$("x",e,t,n),a=$("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=$("sparseIndices",e,t,n),a=$("outputShape",e,t,n),i=$("sparseValues",e,t,n),o=$("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows($("indices",e,t,n),$("values",e,t,n),$("denseShape",e,t,n),$("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape($("inputIndices",e,t,n),$("inputShape",e,t,n),$("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"FFT":return[r.fft($("x",e,t,n))];case"IFFT":return[r.ifft($("x",e,t,n))];case"RFFT":return[r.rfft($("x",e,t,n))];case"IRFFT":return[r.irfft($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams($("data",e,t,n),$("dataSplits",e,t,n),$("separator",e,t,n),$("nGramWidths",e,t,n),$("leftPad",e,t,n),$("rightPad",e,t,n),$("padWidth",e,t,n),$("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit($("input",e,t,n),$("delimiter",e,t,n),$("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast($("input",e,t,n),$("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Cast":return[r.cast($("x",e,t,n),$("dtype",e,t,n))];case"ExpandDims":{const s=$("axis",e,t,n);return[r.expandDims($("x",e,t,n),s)]}case"Squeeze":{const s=$("axis",e,t,n);return[r.squeeze($("x",e,t,n),s)]}case"Reshape":return[r.reshape($("x",e,t,n),$("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad($("x",e,t,n),$("padding",e,t,n),$("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad($("x",e,t,n),$("padding",e,t,n),$("constantValue",e,t,n))];case"SpaceToBatchND":{const s=$("blockShape",e,t,n),a=$("paddings",e,t,n);return[r.spaceToBatchND($("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=$("blockShape",e,t,n),a=$("crops",e,t,n);return[r.batchToSpaceND($("x",e,t,n),s,a)]}case"DepthToSpace":{const s=$("blockSize",e,t,n),a=$("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace($("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo($("x",e,t,n),$("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs($("s0",e,t,n),$("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=$("keyDType",e,t,n),a=$("valueDType",e,t,n),i=new _e(s,a);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=$("tableHandle",e,t,n,r),a=$("keys",e,t,n),i=$("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=$("tableHandle",e,t,n,r),a=$("keys",e,t,n),i=$("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=$("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=_(e.op);if(a&&a.customExecutor)return a.customExecutor(new ye(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return N.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class $e{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ae(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>F(e)[0]));let c=[];null!=r&&(c=r.map((e=>F(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(Oe(e)||Me(e)||ze(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const Re=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],De=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Fe=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Oe(e){return Re.indexOf(e.op)>=0}function Me(e){return De.indexOf(e.op)>=0}function ze(e){return Fe.indexOf(e.op)>=0}class Le{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Le(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Ae(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((e=>F(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[F(e)[0]])),s=t.map((e=>F(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return(0,N.tidy)((()=>{const n=new $e(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=F(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=Ee(t,r,n,this._resourceManager);if(N.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),t.map((e=>A(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[D(e,n.currentContextId)]}(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=R(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,N.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new $e(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const i=t.map((e=>A(e,this.tensorsMap,a))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[F(e)[0]])),i=n.map((e=>F(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Ae(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=F(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Oe(e)&&!A(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$("isConstant",e.node,r,n)&&([c]=R(e.node.name,n)),null==r[e.node.name]){const h=Ee(e.node,r,n,this._resourceManager);c||([c]=R(e.node.name,n));const p=n.currentContext;N.util.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=R(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!A(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!A(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=F(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));N.util.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&N.util.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=F(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=F(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Be{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Pe{constructor(e,t={},n=N.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Be}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return N.util.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Le(ne.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ne.Instance.transformGraph(e.modelInitializer);this.initializer=new Le(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){const n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const e=n instanceof N.Tensor?[n]:n,t={};return e.forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return n}normalizeInputs(e){if(!(e instanceof N.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Ve(e,t={},n=N.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(e));const r=new Pe(e,t,n);return await r.load(),r}function We(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);const t=new Pe(e);return t.load(),t}const Ue="3.19.0"},2073:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>s});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return u(e,t,n,r,s,0)}function i(e,t,n,r,s,a){return u(e,t,n,r,s,0,!1,a,!0)}function o(e,t,n,r,s,a){return u(e,t,n,r,s,a,!0)}function u(e,t,n,s,a,i,o=!1,u=!1,p=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>a&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,i,m[n]);if(r>=s){u=!0;break}if(t.score=t.score*c(s,f,r),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&r(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(2657);function s(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=(0,r.f)(e,"int32"),a=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=s.indexToLoc(n[t]),i=t*e.length;a.values.set(r,i)}return a.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>x});var r=n(2073),s=n(2885),a=n(5938),i=n(9121),o=n(6151),u=n(4706),l=n(9122),c=n(569);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{p(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?c.oj(`${r}ms`,9):r.error,o=c.oj(e,25),u=t.rank,l=t.size,h=c.oj(t.shape.toString(),14);let p="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;p+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${l}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4077),m=n(747);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.Z(`Initialization of backend ${e} failed`),u.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,o.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:h,attrs:p}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(l,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.HD(e[0])&&(s=e.map((e=>l.encodeString(e))));const a=r.write(s,t,n),i=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new f.es(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(s instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!c.cO(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new b(t)}return(0,s.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function w(e,t){const n={a:e,b:t};return v.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>s,OB:()=>i,Vi:()=>o,iG:()=>u});var r=n(569);class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=a,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function a(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return o}let o=null;function u(e){o=e}},5938:(e,t,n)=>{"use strict";let r;function s(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>s,R:()=>a})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>u,cF:()=>l,MX:()=>c,N8:()=>h,SR:()=>p,sq:()=>d,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>v,N_:()=>w,cj:()=>k,x3:()=>S,ze:()=>I,jq:()=>N,y3:()=>T,VY:()=>C});var r=n(7097),s=n(2885),a=n(4077),i=n(747);function o(){(0,s.OB)().set("PROD",!0)}function u(){(0,s.OB)().set("DEBUG",!0)}function l(){(0,s.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){r.BV.disposeVariables()}function p(){return r.BV}function d(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function w(){return r.BV.backendName}function k(e){r.BV.removeBackend(e)}function S(e){return r.BV.findBackend(e)}function I(e){return r.BV.findBackendFactory(e)}function N(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function C(e,t){(0,s.OB)().setPlatform(e,t)}(0,a.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>p,pn:()=>h,h7:()=>l,fN:()=>c,UQ:()=>o,ti:()=>u});var r=n(7097),s=n(4077),a=n(3740),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=(0,a._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(s)),[s],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=(0,a.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...s)),s,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof s.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof s.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=r.BV.gradients((()=>e(t)),[t],n);return d(a),{grad:a[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof s.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof s.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(a.grads),a}}function h(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function p(e){return r.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},1740:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ye.SY,Acos:()=>Ye.VG,Acosh:()=>Ye.Sp,AdadeltaOptimizer:()=>Ft,AdagradOptimizer:()=>Mt,AdamOptimizer:()=>Bt,AdamaxOptimizer:()=>Wt,Add:()=>Ye.mm,AddN:()=>Ye.Xz,All:()=>Ye.oT,Any:()=>Ye.IK,ArgMax:()=>Ye.sJ,ArgMin:()=>Ye.aJ,Asin:()=>Ye.M2,Asinh:()=>Ye.qw,Atan:()=>Ye.jM,Atan2:()=>Ye.QC,Atanh:()=>Ye.Oy,AvgPool:()=>Ye.Jh,AvgPool3D:()=>Ye._k,AvgPool3DGrad:()=>Ye.IM,AvgPoolGrad:()=>Ye.RO,BatchMatMul:()=>Ye.XL,BatchToSpaceND:()=>Ye.zw,Bincount:()=>Ye.zv,BroadcastArgs:()=>Ye.eE,BroadcastTo:()=>Ye.Ly,Cast:()=>Ye.RF,Ceil:()=>Ye.gJ,ClipByValue:()=>Ye.xn,Complex:()=>Ye.Zz,ComplexAbs:()=>Ye.yj,Concat:()=>Ye.Eh,Conv2D:()=>Ye.mh,Conv2DBackpropFilter:()=>Ye.wU,Conv2DBackpropInput:()=>Ye.wm,Conv3D:()=>Ye.x1,Conv3DBackpropFilterV2:()=>Ye.o2,Conv3DBackpropInputV2:()=>Ye.ik,Cos:()=>Ye.mc,Cosh:()=>Ye.TR,CropAndResize:()=>Ye.Vc,Cumprod:()=>Ye.By,Cumsum:()=>Ye.iH,DataStorage:()=>nr.JL,DenseBincount:()=>Ye.QR,DepthToSpace:()=>Ye.T0,DepthwiseConv2dNative:()=>Ye.ci,DepthwiseConv2dNativeBackpropFilter:()=>Ye.sL,DepthwiseConv2dNativeBackpropInput:()=>Ye.y7,Diag:()=>Ye.$w,Dilation2D:()=>Ye.p4,Dilation2DBackpropFilter:()=>Ye.Vn,Dilation2DBackpropInput:()=>Ye.ek,ENV:()=>b.Vi,Einsum:()=>Ye.$g,Elu:()=>Ye.SX,EluGrad:()=>Ye.HE,Environment:()=>b.qA,Equal:()=>Ye.hd,Erf:()=>Ye.Om,Exp:()=>Ye.NE,ExpandDims:()=>Ye.YF,Expm1:()=>Ye.Y0,FFT:()=>Ye.vw,Fill:()=>Ye.de,FlipLeftRight:()=>Ye.Uy,Floor:()=>Ye.OR,FloorDiv:()=>Ye.je,FromPixels:()=>Ye.eB,FusedBatchNorm:()=>Ye.sH,FusedConv2D:()=>Ye._V,FusedDepthwiseConv2D:()=>Ye.lu,GatherNd:()=>Ye.q1,GatherV2:()=>Ye.qi,Greater:()=>Ye.iZ,GreaterEqual:()=>Ye.Ac,IFFT:()=>Ye.Qg,Identity:()=>Ye.iJ,Imag:()=>Ye.J_,IsFinite:()=>Ye.av,IsInf:()=>Ye.iW,IsNan:()=>Ye.r7,KernelBackend:()=>nr.Zu,LRN:()=>Ye.eZ,LRNGrad:()=>Ye.Hh,LeakyRelu:()=>Ye.J$,Less:()=>Ye.vt,LessEqual:()=>Ye.CA,LinSpace:()=>Ye.e7,Log:()=>Ye.Zb,Log1p:()=>Ye.kU,LogSoftmax:()=>Ye.qC,LogicalAnd:()=>Ye.PY,LogicalNot:()=>Ye.Vf,LogicalOr:()=>Ye.MZ,LogicalXor:()=>Ye.w6,LowerBound:()=>Ye.qI,Max:()=>Ye.Yo,MaxPool:()=>Ye.mT,MaxPool3D:()=>Ye.OA,MaxPool3DGrad:()=>Ye.OU,MaxPoolGrad:()=>Ye.OV,MaxPoolWithArgmax:()=>Ye.vF,Maximum:()=>Ye.BM,Mean:()=>Ye.q2,Min:()=>Ye.c1,Minimum:()=>Ye.q8,MirrorPad:()=>Ye.jQ,Mod:()=>Ye.Vb,MomentumOptimizer:()=>Gt,Multinomial:()=>Ye.NZ,Multiply:()=>Ye.wY,Neg:()=>Ye.ku,NonMaxSuppressionV3:()=>Ye.uv,NonMaxSuppressionV4:()=>Ye.cy,NonMaxSuppressionV5:()=>Ye.W0,NotEqual:()=>Ye.yQ,OP_SCOPE_SUFFIX:()=>Xt.zvA,OneHot:()=>Ye.we,OnesLike:()=>Ye.qW,Optimizer:()=>Dt,OptimizerConstructors:()=>Ht,Pack:()=>Ye.Qi,PadV2:()=>Ye.ly,Pool:()=>Ye.Kg,Pow:()=>Ye.pe,Prelu:()=>Ye.o0,Prod:()=>Ye.Dl,RMSPropOptimizer:()=>jt,Range:()=>Ye.e6,Rank:()=>qt.yw,Real:()=>Ye.xJ,RealDiv:()=>Ye.oH,Reciprocal:()=>Ye.$H,Reduction:()=>Kt.I,Relu:()=>Ye.qk,Relu6:()=>Ye.Sb,Reshape:()=>Ye.HZ,ResizeBilinear:()=>Ye._Y,ResizeBilinearGrad:()=>Ye.zb,ResizeNearestNeighbor:()=>Ye.dp,ResizeNearestNeighborGrad:()=>Ye.Hm,Reverse:()=>Ye.mK,RotateWithOffset:()=>Ye.b9,Round:()=>Ye.e0,Rsqrt:()=>Ye.bV,SGDOptimizer:()=>Ut,ScatterNd:()=>Ye.xQ,SearchSorted:()=>Ye.nr,Select:()=>Ye.Ph,Selu:()=>Ye.oF,Sigmoid:()=>Ye.a5,Sign:()=>Ye.i5,Sin:()=>Ye.RQ,Sinh:()=>Ye.w3,Slice:()=>Ye.p2,Softmax:()=>Ye.Gc,Softplus:()=>Ye.MR,SpaceToBatchND:()=>Ye.TQ,SparseFillEmptyRows:()=>Ye.O3,SparseReshape:()=>Ye.nh,SparseSegmentMean:()=>Ye.YW,SparseSegmentSum:()=>Ye.Zj,SparseToDense:()=>Ye.D2,SplitV:()=>Ye.L8,Sqrt:()=>Ye.FK,Square:()=>Ye.bK,SquaredDifference:()=>Ye._t,Step:()=>Ye.h8,StridedSlice:()=>Ye.m2,StringNGrams:()=>Ye._J,StringSplit:()=>Ye.s1,StringToHashBucketFast:()=>Ye.Xk,Sub:()=>Ye.Tr,Sum:()=>Ye.GB,Tan:()=>Ye.sE,Tanh:()=>Ye.MI,Tensor:()=>we.es,TensorBuffer:()=>we.YD,Tile:()=>Ye.n9,TopK:()=>Ye.cW,Transform:()=>Ye.wx,Transpose:()=>Ye.G3,Unique:()=>Ye.kp,Unpack:()=>Ye.To,UnsortedSegmentSum:()=>Ye.Qv,UpperBound:()=>Ye.XD,Variable:()=>we._w,ZerosLike:()=>Ye.Ru,_FusedMatMul:()=>Ye.us,abs:()=>Xt.WnP,acos:()=>Xt.Khb,acosh:()=>Xt.__u,add:()=>Xt.IHx,addN:()=>Xt.QBD,all:()=>Xt.$6P,any:()=>Xt.YjB,argMax:()=>Xt.NqF,argMin:()=>Xt.vHJ,asin:()=>Xt.ZRM,asinh:()=>Xt.VfV,atan:()=>Xt.z4N,atan2:()=>Xt.fvJ,atanh:()=>Xt.C80,avgPool:()=>Xt.wS1,avgPool3d:()=>Xt.uR5,backend:()=>It.y3,backend_util:()=>h,basicLSTMCell:()=>Xt.zEQ,batchNorm:()=>Xt.tgs,batchNorm2d:()=>Xt.Dxk,batchNorm3d:()=>Xt.JY5,batchNorm4d:()=>Xt.p3b,batchToSpaceND:()=>Xt.E4h,bincount:()=>Xt.yE8,booleanMaskAsync:()=>Xt.anm,broadcastArgs:()=>Xt.XsQ,broadcastTo:()=>Xt.UFq,broadcast_util:()=>Ke,browser:()=>i,buffer:()=>Xt.f3b,cast:()=>Xt.pju,ceil:()=>Xt.mDi,clipByValue:()=>Xt.iUl,clone:()=>Xt.d9v,complex:()=>Xt.PYB,concat:()=>Xt.zoF,concat1d:()=>Xt.gME,concat2d:()=>Xt.Izb,concat3d:()=>Xt.MNy,concat4d:()=>Xt.ZaL,conv1d:()=>Xt.PAt,conv2d:()=>Xt.Tek,conv2dTranspose:()=>Xt.bc,conv3d:()=>Xt.pdZ,conv3dTranspose:()=>Xt.$QV,copyRegisteredKernels:()=>Ze.T3,cos:()=>Xt.mCk,cosh:()=>Xt.f9Y,cosineWindow:()=>Xt.mew,cumprod:()=>Xt.$Gn,cumsum:()=>Xt.zbp,customGrad:()=>At.cb,denseBincount:()=>Xt.ppE,deprecationWarn:()=>It.MX,depthToSpace:()=>Xt.nTT,depthwiseConv2d:()=>Xt.B10,device_util:()=>r,diag:()=>Xt.Ka3,dilation2d:()=>Xt.WmZ,disableDeprecationWarnings:()=>It.cF,dispose:()=>It.B9,disposeVariables:()=>It.N8,div:()=>Xt.hiC,divNoNan:()=>Xt.NTj,dot:()=>Xt.AKD,dropout:()=>Xt.rvX,einsum:()=>Xt.WYO,elu:()=>Xt.pyx,enableDebugMode:()=>It.R,enableProdMode:()=>It.G4,enclosingPowerOfTwo:()=>Xt.GRh,engine:()=>It.SR,env:()=>b.OB,equal:()=>Xt.DgJ,erf:()=>Xt.qNN,euclideanNorm:()=>Xt.d2q,exp:()=>Xt.Qqt,expandDims:()=>Xt.dt4,expm1:()=>Xt.t$B,eye:()=>Xt.iyy,fft:()=>Xt.kp_,fill:()=>Xt.hlL,findBackend:()=>It.x3,findBackendFactory:()=>It.ze,floor:()=>Xt.GWj,floorDiv:()=>Xt.qPi,fused:()=>Xt.imm,gather:()=>Xt.Iqj,gatherND:()=>Xt.dbB,gather_util:()=>o,getBackend:()=>It.N_,getGradient:()=>Ze.uk,getKernel:()=>Ze.pI,getKernelsForBackend:()=>Ze.tr,grad:()=>At.UQ,grads:()=>At.ti,greater:()=>Xt.pjt,greaterEqual:()=>Xt.brS,ifft:()=>Xt.Sxn,imag:()=>Xt.asL,image:()=>Xt.BHj,inTopKAsync:()=>Xt.V3u,io:()=>s,irfft:()=>Xt.wx0,isFinite:()=>Xt.xVT,isInf:()=>Xt.UWc,isNaN:()=>Xt.i2d,keep:()=>It.Cn,kernel_impls:()=>p,leakyRelu:()=>Xt.hi7,less:()=>Xt.d9m,lessEqual:()=>Xt.zN1,linalg:()=>Xt.$r2,linspace:()=>Xt.SX3,localResponseNormalization:()=>Xt.G9k,log:()=>Xt.cM7,log1p:()=>Xt.Krr,logSigmoid:()=>Xt.e_t,logSoftmax:()=>Xt.CmS,logSumExp:()=>Xt.l_t,logicalAnd:()=>Xt.HvI,logicalNot:()=>Xt.hJK,logicalOr:()=>Xt.K5V,logicalXor:()=>Xt.egP,losses:()=>Xt.MB5,lowerBound:()=>Xt.eab,matMul:()=>Xt.OI3,math:()=>a,max:()=>Xt.Fp7,maxPool:()=>Xt._sB,maxPool3d:()=>Xt.YQQ,maxPoolWithArgmax:()=>Xt.Ip$,maximum:()=>Xt.gWQ,mean:()=>Xt.J69,memory:()=>It.sq,meshgrid:()=>Xt.ry_,min:()=>Xt.VV$,minimum:()=>Xt.LTh,mirrorPad:()=>Xt.VdP,mod:()=>Xt.wQq,moments:()=>Xt.Gi7,movingAverage:()=>Xt.p_,mul:()=>Xt.dC7,multiRNNCell:()=>Xt.rq4,multinomial:()=>Xt.SJ_,neg:()=>Xt.W76,nextFrame:()=>Qt,norm:()=>Xt.KOy,notEqual:()=>Xt.Quu,oneHot:()=>Xt.lfX,ones:()=>Xt.iUs,onesLike:()=>Xt.JpU,op:()=>Xt.op,outerProduct:()=>Xt.N2O,pad:()=>Xt.vku,pad1d:()=>Xt.pNR,pad2d:()=>Xt.koy,pad3d:()=>Xt.t1L,pad4d:()=>Xt.lGY,pool:()=>Xt.d_R,pow:()=>Xt.sQ3,prelu:()=>Xt.AL3,print:()=>Xt.S0v,prod:()=>Xt.WVs,profile:()=>It.N5,rand:()=>Xt.TN_,randomGamma:()=>Xt.wzB,randomNormal:()=>Xt.nGf,randomStandardNormal:()=>Xt.ruB,randomUniform:()=>Xt.LGj,range:()=>Xt.w6H,ready:()=>It.Cd,real:()=>Xt.kwC,reciprocal:()=>Xt.M25,registerBackend:()=>It.jq,registerGradient:()=>Ze.Li,registerKernel:()=>Ze.wC,relu:()=>Xt.UYe,relu6:()=>Xt.btT,removeBackend:()=>It.cj,reshape:()=>Xt.XLQ,reverse:()=>Xt.GYS,reverse1d:()=>Xt.SDf,reverse2d:()=>Xt.diP,reverse3d:()=>Xt.sx7,reverse4d:()=>Xt.mG2,rfft:()=>Xt.QEs,round:()=>Xt.NMM,rsqrt:()=>Xt.bp0,scalar:()=>Xt.iD$,scatterND:()=>Xt.snQ,scatter_util:()=>at,searchSorted:()=>Xt.zcT,selu:()=>Xt.U8D,separableConv2d:()=>Xt.U_I,serialization:()=>u,setBackend:()=>It.CQ,setPlatform:()=>It.VY,setdiff1dAsync:()=>Xt.ODp,sigmoid:()=>Xt.XD2,sign:()=>Xt.Xxe,signal:()=>Xt.tdS,sin:()=>Xt.O$l,sinh:()=>Xt.R_K,slice:()=>Xt.tPi,slice1d:()=>Xt.jZU,slice2d:()=>Xt.SmN,slice3d:()=>Xt.CnO,slice4d:()=>Xt.p0P,slice_util:()=>it,softmax:()=>Xt.XAC,softplus:()=>Xt.Wvh,spaceToBatchND:()=>Xt.fBT,sparse:()=>Xt.rVs,sparseToDense:()=>Xt.ers,spectral:()=>Xt.uN7,split:()=>Xt.Vl2,sqrt:()=>Xt._b3,square:()=>Xt.h62,squaredDifference:()=>Xt.$i,squeeze:()=>Xt.L9e,stack:()=>Xt.knu,step:()=>Xt.Nbs,stridedSlice:()=>Xt.NXj,string:()=>Xt.Z_8,sub:()=>Xt.luU,sum:()=>Xt.Smz,sumOutType:()=>qt.z4,tan:()=>Xt.ORZ,tanh:()=>Xt.AEp,tensor:()=>Xt.XeE,tensor1d:()=>Xt.RRF,tensor2d:()=>Xt.odF,tensor3d:()=>Xt.wOQ,tensor4d:()=>Xt.yXz,tensor5d:()=>Xt.Bfx,tensor6d:()=>Xt.xZs,tensor_util:()=>ct,test_util:()=>l,tidy:()=>It.lu,tile:()=>Xt.Gg6,time:()=>It.XV,topk:()=>Xt.hg7,train:()=>Yt,transpose:()=>Xt.p4s,truncatedNormal:()=>Xt.Xu6,unique:()=>Xt.Two,unregisterGradient:()=>Ze.bt,unregisterKernel:()=>Ze.nE,unsortedSegmentSum:()=>Xt.pUJ,unstack:()=>Xt.HHK,upcastType:()=>qt.x8,upperBound:()=>Xt.GaM,util:()=>ht,valueAndGrad:()=>At.h7,valueAndGrads:()=>At.fN,variable:()=>Xt.VD$,variableGrads:()=>At.pn,version_core:()=>St,where:()=>Xt.arb,whereAsync:()=>Xt.itS,zeros:()=>Xt.lls,zerosLike:()=>Xt.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var s={};n.r(s),n.d(s,{browserFiles:()=>Te,browserHTTPRequest:()=>Oe,concatenateArrayBuffers:()=>E,copyModel:()=>de,decodeWeights:()=>N,encodeWeights:()=>I,fromMemory:()=>Be,fromMemorySync:()=>Pe,getLoadHandlers:()=>B,getModelArtifactsForJSON:()=>R,getModelArtifactsInfoForJSON:()=>D,getSaveHandlers:()=>L,http:()=>Fe,isHTTPScheme:()=>Re,listModels:()=>he,loadWeights:()=>Ee,moveModel:()=>fe,registerLoadRouter:()=>z,registerSaveRouter:()=>M,removeModel:()=>pe,weightsLoaderFactory:()=>$e,withSaveHandler:()=>Ve,withSaveHandlerSync:()=>We});var a={};n.r(a),n.d(a,{confusionMatrix:()=>Xe});var i={};n.r(i),n.d(i,{fromPixels:()=>rt,fromPixelsAsync:()=>tt,toPixels:()=>nt});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>st});var u={};n.r(u),n.d(u,{Serializable:()=>ot,SerializationMap:()=>ut,registerClass:()=>lt});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>pt,encodeStrings:()=>kt,expectArrayBuffersEqual:()=>wt,expectArraysClose:()=>dt,expectArraysEqual:()=>yt,expectNumbersClose:()=>bt,expectPromiseToFail:()=>gt,expectValuesInRange:()=>vt,testEpsilon:()=>ft});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>Zn,computeOutShape:()=>Yn,segOpComputeOptimalWindowSize:()=>Kn});var h={};n.r(h),n.d(h,{ERF_A1:()=>mn,ERF_A2:()=>gn,ERF_A3:()=>yn,ERF_A4:()=>bn,ERF_A5:()=>xn,ERF_P:()=>fn,PARALLELIZE_THRESHOLD:()=>sn,SELU_SCALE:()=>dn.$,SELU_SCALEALPHA:()=>dn.y,applyActivation:()=>rn.QH,assertAndGetBroadcastShape:()=>Ke.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Jt.lB,assertParamsConsistent:()=>en,assignToTypedArray:()=>Tn,axesAreInnerMostDims:()=>Jt.YB,calculateShapes:()=>at.calculateShapes,checkEinsumDimSizes:()=>Rn,checkPadOnDimRoundingMode:()=>nn.m,combineLocations:()=>Jt.Vh,complexWithEvenIndex:()=>Sn,complexWithOddIndex:()=>In,computeConv2DInfo:()=>nn.Ix,computeConv3DInfo:()=>nn.jw,computeDefaultPad:()=>nn.aO,computeDilation2DInfo:()=>nn.Rf,computeOptimalWindowSize:()=>an,computeOutAndReduceShapes:()=>Jt.kz,computeOutShape:()=>tn,computePool2DInfo:()=>nn.Xw,computePool3DInfo:()=>nn.pl,convertConv2DDataFormat:()=>nn.sl,decodeEinsumEquation:()=>$n,eitherStridesOrDilationsAreOne:()=>nn.jT,expandShapeToKeepDim:()=>Jt.rv,exponent:()=>_n,exponents:()=>Cn,fromStringArrayToUint8:()=>Jn,fromUint8ToStringArray:()=>Qn,getAxesPermutation:()=>Jt.Q3,getBroadcastDims:()=>Ke.getBroadcastDims,getComplexWithIndex:()=>Nn,getEinsumComputePath:()=>Dn,getEinsumPermutation:()=>An,getFusedBiasGradient:()=>rn.pf,getFusedDyActivation:()=>rn.Fr,getImageCenter:()=>on,getInnerMostAxes:()=>Jt.sY,getPermuted:()=>ln,getReductionAxes:()=>Ke.getReductionAxes,getReshaped:()=>un,getReshapedPermuted:()=>cn,getSliceBeginCoords:()=>hn,getSliceSize:()=>pn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>zn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ln,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Bn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Wn,getSparseReshapeInputOutputMismatchErrorMessage:()=>Gn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Un,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Pn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Vn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Xn,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>jn,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Hn,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>qn,getUndoAxesPermutation:()=>Jt.LJ,isIdentityPermutation:()=>Fn,log:()=>vn.c,mergeRealAndImagArrays:()=>wn,prepareAndValidate:()=>st,prepareSplitSize:()=>Mn,segment_util:()=>c,shouldFuse:()=>rn.uy,slice_util:()=>it,splitRealAndImagArrays:()=>kn,tupleValuesAreOne:()=>nn.I0,upcastType:()=>qt.x8,validateInput:()=>at.validateInput,validateUpdateShape:()=>at.validateUpdateShape,warn:()=>vn.Z});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>er.GP,nonMaxSuppressionV4Impl:()=>er.qP,nonMaxSuppressionV5Impl:()=>er.pA,whereImpl:()=>tr.Z});var d=n(7097);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var b=n(2885);const x=(0,b.OB)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>y())),x.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var v=n(1661),w=n(701),k=n(569);const S={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function I(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:T(await Promise.all(r)),specs:n}}function N(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=(0,k.NA)(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=S[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=F()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=(0,k.NA)(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=S[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=(0,w.X)(e,o,"float32"),i=(0,w.X)(r,o,"float32");n[t]=(0,v.P)(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=(0,w.X)(l,o,i))}return n}function T(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const C="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function _(e){return C?Buffer.byteLength(e):new Blob([e]).size}function E(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function $(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function A(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function R(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function D(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:_(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:_(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function F(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class O{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==O.instance&&(O.instance=new O),O.instance}static registerSaveRouter(e){O.getInstance().saveRouters.push(e)}static registerLoadRouter(e){O.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return O.getHandlers(e,"save")}static getLoadHandlers(e,t){return O.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?O.getInstance().loadRouters:O.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const M=e=>O.registerSaveRouter(e),z=e=>O.registerLoadRouter(e),L=e=>O.getSaveHandlers(e),B=(e,t)=>O.getLoadHandlers(e,t),P="tensorflowjs",V="models_store",W="model_info_store";function U(){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function G(e){const t=e.result;t.createObjectStore(V,{keyPath:"modelPath"}),t.createObjectStore(W,{keyPath:"modelPath"})}class j{constructor(e){if(this.indexedDB=U(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(P,1);r.onupgradeneeded=()=>G(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(V,"readonly"),r=t.objectStore(V).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=D(t),a=s.transaction(W,"readwrite");let i=a.objectStore(W);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(V,"readwrite");const o=u.objectStore(V).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(W);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}j.URL_SCHEME="indexeddb://";const H=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(j.URL_SCHEME)?(t=e.slice(j.URL_SCHEME.length),new j(t)):null;var t};O.registerSaveRouter(H),O.registerLoadRouter(H);class q{constructor(){this.indexedDB=U()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(P,1);n.onupgradeneeded=()=>G(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(W,"readonly"),a=s.objectStore(W).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(j.URL_SCHEME)?t.slice(j.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(P,1);r.onupgradeneeded=()=>G(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(W,"readwrite"),i=a.objectStore(W),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(V,"readwrite");const r=u.objectStore(V).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const X="/",K="tensorflowjs_models",Y="info",Z="model_topology",Q="weight_specs",J="weight_data",ee="model_metadata";function te(e){return{info:[K,e,Y].join(X),topology:[K,e,Z].join(X),weightSpecs:[K,e,Q].join(X),weightData:[K,e,J].join(X),modelMetadata:[K,e,ee].join(X)}}function ne(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function re(e){const t=e.split(X);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(X)}class se{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=te(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=D(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(C)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw ne(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(C){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}se.URL_SCHEME="localstorage://";const ae=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(se.URL_SCHEME)?(t=e.slice(se.URL_SCHEME.length),new se(t)):null;var t};O.registerSaveRouter(ae),O.registerLoadRouter(ae);class ie{constructor(){(0,k.hu)((0,b.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,k.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=K+X,n=X+Y;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[re(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=te(e=(t=e).startsWith(se.URL_SCHEME)?t.slice(se.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ne(n),r}}const oe="://";class ue{constructor(){this.managers={}}static getInstance(){return null==ue.instance&&(ue.instance=new ue),ue.instance}static registerManager(e,t){(0,k.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(oe)&&(e=e.slice(0,e.indexOf(oe))),(0,k.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ue.getInstance();(0,k.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ue.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ue.getInstance().managers)}}function le(e){if(-1===e.indexOf(oe))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ue.getSchemes().join(",")}`);return{scheme:e.split(oe)[0],path:e.split(oe)[1]}}async function ce(e,t,n=!1){(0,k.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=O.getLoadHandlers(e);(0,k.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,k.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=O.getSaveHandlers(t);(0,k.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,k.hu)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=le(e).scheme,u=le(e).path,l=o===le(e).scheme,c=await s.load();n&&l&&await ue.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await ue.getManager(o).removeModel(u),h.modelArtifactsInfo}async function he(){const e=ue.getSchemes(),t={};for(const n of e){const e=await ue.getManager(n).listModels();for(const r in e)t[n+oe+r]=e[r]}return t}async function pe(e){const t=le(e);return ue.getManager(t.scheme).removeModel(t.path)}async function de(e,t){return ce(e,t,!1)}async function fe(e,t){return ce(e,t,!0)}class me{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,b.OB)().get("IS_BROWSER")){(0,b.OB)().setPlatform("browser",new me);try{ue.registerManager(se.URL_SCHEME,new ie)}catch(e){}try{ue.registerManager(j.URL_SCHEME,new q)}catch(e){}}let ge;(0,b.OB)().get("IS_NODE")&&!(0,b.OB)().get("IS_BROWSER")&&(0,b.OB)().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b.OB)().global.fetch?(0,b.OB)().global.fetch(e,t):(null==ge&&(ge=n(6786)),ge(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var ye=n(2657),be=n(2271),xe=n(8723),ve=n(9798),we=n(4077);(0,d.wv)();const ke={buffer:ye.f,cast:be.p,clone:xe.d,print:ve.S};function Se(e){return new Promise((e=>setTimeout(e))).then(e)}(0,we.Vp)(ke);class Ie{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ie.URL_SCHEME)&&(e=e.slice(Ie.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=A(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Se((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Se((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:D(e)}}}}Ie.URL_SCHEME="downloads://";class Ne{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=R(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,E(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>$(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=$(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Te(e){return new Ne(e)}function Ce(e,t,n,r){!function(e){(0,k.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,k.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,k.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,k.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function _e(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ce(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ce(s,t.onProgress,.5,1)}async function Ee(e,t="",n,r){return $e((e=>_e(e,{requestInit:r})))(e,t,n)}function $e(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=S[u]*k.NA(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=N(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}O.registerSaveRouter((e=>(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ie.URL_SCHEME)?function(e="model"){return new Ie(e)}(e.slice(Ie.URL_SCHEME.length)):null));class Ae{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,k.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b.OB)().platform.fetch,(0,k.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,k.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=A(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:D(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return R(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,E(await _e(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Re(e){return null!=e.match(Ae.URL_SCHEME_REGEX)}Ae.URL_SCHEME_REGEX=/^https?:\/\//;const De=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Re(e))):Re(e),n)return Fe(e,t)}return null};function Fe(e,t){return new Ae(e,t)}function Oe(e,t){return Fe(e,t)}O.registerSaveRouter(De),O.registerLoadRouter(De);class Me{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ze{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Le{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Be(e,t,n,r){const s=arguments;return new Le(Pe(...s))}function Pe(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Me(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Me({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Me({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Ve(e){return new ze(e)}function We(e){return new ze(e)}var Ue=n(3740),Ge=n(8687),je=n(6708),He=n(2668),qe=n(9065);const Xe=(0,He.op)({confusionMatrix_:function(e,t,n){const r=(0,Ue._1)(e,"labels","confusionMatrix"),s=(0,Ue._1)(t,"predictions","confusionMatrix");k.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),k.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),k.hu(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),k.hu(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),k.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,je.l)((0,be.p)(r,"int32"),n),i=(0,je.l)((0,be.p)(s,"int32"),n),o=(0,qe.p)(a),u=(0,Ge.O)(o,i);return(0,be.p)(u,"int32")}});var Ke=n(2200),Ye=n(9121),Ze=n(6151),Qe=n(9906);let Je;function et(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ze.pI)(Ye.eB,d.BV.backendName)){const n={pixels:e},r={numChannels:t};return d.BV.runKernel(Ye.eB,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Je)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Je=new OffscreenCanvas(1,1).getContext("2d")}else Je=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Je.canvas.width=u,Je.canvas.height=l,Je.drawImage(e,0,0,u,l),c=Je.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const p=[l,u,t];return(0,Qe.w)(h,p,"int32")}async function tt(e,t=3){let n=null;if((0,b.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return et(n,t)}async function nt(e,t){let n=(0,Ue._1)(e,"img","toPixels");if(!(e instanceof we.es)){const e=n;n=(0,be.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const rt=(0,He.op)({fromPixels_:et});function st(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,k.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,k.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}var at=n(3028),it=n(7650);class ot{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ut{constructor(){this.classNameMap={}}static getMap(){return null==ut.instance&&(ut.instance=new ut),ut.instance}static register(e){ut.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function lt(e){(0,k.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,k.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,k.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ut.register(e)}var ct=n(747),ht=n(9122);const pt=.1;function dt(e,t,n){return null==n&&(n=ft()),mt(e,t,((e,t)=>xt(e,t,n)))}function ft(){return 32===d.BV.backend.floatPrecision()?.001:pt}function mt(e,t,n){let r=!0;if(((0,k.fU)(e)||(0,k.fU)(t))&&(r=!1),(0,k.fU)(e)&&(0,k.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Ue.C)(e),r=(0,Ue.C)(t);if(!(0,k.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=(0,k.fU)(e)?e:(0,k.xH)(e),a=(0,k.fU)(t)?t:(0,k.xH)(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function gt(e,t){e().then((()=>t.fail()),(()=>t()))}function yt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,k.HD)(e)||(0,k.HD)(e[0])||(0,k.HD)(t)||(0,k.HD)(t[0])?mt(e,n,((e,t)=>e==t)):mt(e,t,((e,t)=>xt(e,t,0)))}function bt(e,t,n){if(null==n&&(n=ft()),!xt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function xt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function vt(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function wt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function kt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?kt(n):e[t]=(0,ht.encodeString)(n)}return e}const St="3.19.0";var It=n(4368),Nt=n(6407),Tt=n(1274),Ct=n(4841),_t=n(3261),Et=n(248),$t=n(6577),At=n(633),Rt=n(9494);class Dt extends ot{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,It.B9)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,At.pn)(e,t)}dispose(){null!=this.iterations_&&(0,It.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Rt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Dt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ft extends Dt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,It.lu)((()=>{const e=(0,Nt.I)((0,Ct.d)(a,this.rho),(0,Ct.d)((0,Et.h)(s),1-this.rho)),t=(0,Ct.d)((0,Tt.h)((0,_t._)((0,Nt.I)(i,this.epsilon)),(0,_t._)((0,Nt.I)(a,this.epsilon))),s),n=(0,Nt.I)((0,Ct.d)(i,this.rho),(0,Ct.d)((0,Et.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,Nt.I)((0,Ct.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,It.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,It.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ft.className="Adadelta",lt(Ft);var Ot=n(4006);class Mt extends Dt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,It.lu)((()=>(0,Ot.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,It.lu)((()=>{const e=(0,Nt.I)(a,(0,Et.h)(s));a.assign(e);const t=(0,Nt.I)((0,Ct.d)((0,Tt.h)(s,(0,_t._)((0,Nt.I)(e,d.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,It.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Mt.className="Adagrad",lt(Mt);var zt=n(3453),Lt=n(827);class Bt extends Dt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,It.lu)((()=>{this.accBeta1=(0,Rt.i)(t).variable(),this.accBeta2=(0,Rt.i)(n).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,It.lu)((()=>{const n=(0,Lt.l)(1,this.accBeta1),r=(0,Lt.l)(1,this.accBeta2);t.forEach(((t,s)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,It.lu)((()=>(0,$t.P)(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,It.lu)((()=>(0,$t.P)(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=(0,Nt.I)((0,Ct.d)(o,this.beta1),(0,Ct.d)(i,1-this.beta1)),c=(0,Nt.I)((0,Ct.d)(u,this.beta2),(0,Ct.d)((0,Et.h)(i),1-this.beta2)),h=(0,Tt.h)(l,n),p=(0,Tt.h)(c,r);o.assign(l),u.assign(c);const f=(0,Nt.I)((0,Ct.d)((0,Tt.h)(h,(0,Nt.I)((0,_t._)(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,Ct.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,Ct.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,It.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,It.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,It.lu)((()=>{this.accBeta1.assign((0,zt.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,zt.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Bt.className="Adam",lt(Bt);var Pt=n(6235),Vt=n(632);class Wt extends Dt{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,It.lu)((()=>{this.iteration=(0,Rt.i)(0).variable(),this.accBeta1=(0,Rt.i)(t).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,It.lu)((()=>{const n=(0,Lt.l)(1,this.accBeta1),r=(0,Tt.h)(-this.learningRate,(0,Nt.I)((0,Ct.d)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,$t.P)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,$t.P)(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=(0,Nt.I)((0,Ct.d)(o,this.beta1),(0,Ct.d)(i,1-this.beta1)),c=(0,Ct.d)(u,this.beta2),h=(0,Pt.W)(i),p=(0,Vt.g)(c,h);o.assign(l),u.assign(p);const f=(0,Nt.I)((0,Ct.d)((0,Tt.h)(r,n),(0,Tt.h)(l,(0,Nt.I)(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,Nt.I)(this.iteration,1)),this.accBeta1.assign((0,Ct.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,It.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,It.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Wt.className="Adamax",lt(Wt);class Ut extends Dt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=d.BV.registeredVariables[t];(0,It.lu)((()=>{const e=(0,Nt.I)((0,Ct.d)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,It.Cn)((0,Rt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ut.className="SGD",lt(Ut);class Gt extends Ut{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Rt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,It.lu)((()=>{let e;const t=(0,Nt.I)((0,Ct.d)(this.m,s),a);e=this.useNesterov?(0,Nt.I)((0,Ct.d)(this.c,(0,Nt.I)(a,(0,Ct.d)(t,this.m))),r):(0,Nt.I)((0,Ct.d)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,It.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Gt.className="Momentum",lt(Gt);class jt extends Dt{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=d.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,It.lu)((()=>(0,$t.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,It.lu)((()=>{const e=(0,Nt.I)((0,Ct.d)(i,this.decay),(0,Ct.d)((0,Et.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,Nt.I)((0,Ct.d)(t,this.decay),(0,Ct.d)(a,1-this.decay)),u=(0,Tt.h)((0,Ct.d)(a,this.learningRate),(0,_t._)((0,Lt.l)(e,(0,Nt.I)((0,Et.h)(s),this.epsilon)))),l=(0,Nt.I)((0,Ct.d)(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=(0,Lt.l)(r,l);r.assign(c)}else{const e=(0,Nt.I)((0,Ct.d)(i,this.decay),(0,Ct.d)((0,Et.h)(a),1-this.decay)),t=(0,Nt.I)((0,Ct.d)(o,this.momentum),(0,Tt.h)((0,Ct.d)(a,this.learningRate),(0,_t._)((0,Nt.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Lt.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,It.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,It.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,It.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}jt.className="RMSProp",lt(jt);class Ht{static sgd(e){return new Ut(e)}static momentum(e,t,n=!1){return new Gt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new jt(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Bt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ft(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Wt(e,t,n,r,s)}static adagrad(e,t=.1){return new Mt(e,t)}}var qt=n(1221),Xt=n(31),Kt=n(9876);const Yt={sgd:Ht.sgd,momentum:Ht.momentum,adadelta:Ht.adadelta,adagrad:Ht.adagrad,rmsprop:Ht.rmsprop,adamax:Ht.adamax,adam:Ht.adam},Zt="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Qt(){return new Promise((e=>Zt((()=>e()))))}var Jt=n(3591);function en(e,t){const n=e[0].length;e.forEach(((e,t)=>{k.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),k.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)k.hu(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function tn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var nn=n(2582),rn=n(9323);const sn=30;function an(e){return e<=sn?e:(0,k.jP)(e,Math.floor(Math.sqrt(e)))}function on(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function un(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function ln(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function cn(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function hn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pn(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var dn=n(3179);const fn=.3275911,mn=.254829592,gn=-.284496736,yn=1.421413741,bn=-1.453152027,xn=1.061405429;var vn=n(4706);function wn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function kn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Sn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function In(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Nn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Tn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Cn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function _n(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const En=/->/g;function $n(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(En,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");(0,k.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function An(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Rn(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:(0,k.hu)(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Dn(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=On(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Fn(e){return e.every(((e,t)=>e===t))}function On(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Mn(e,t,n=0){let r=[];if("number"==typeof t)(0,k.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,k.hu)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,k.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function zn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ln(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Bn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Pn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Vn(e,t){return`size ${e} must be non-negative, not ${t}`}function Wn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Un(e,t){return`Input to reshape is a SparseTensor with ${(0,k.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,k.NA)(t)}. inputShape=${e} outputShape= ${t}`}function Gn(e,t){return`Input to reshape is a tensor with ${(0,k.NA)(e)} dense values, but the requested shape has ${(0,k.NA)(t)}. inputShape=${e} outputShape=${t}`}function jn(){return"segment ids must be >= 0"}function Hn(){return"segment ids are not increasing"}function qn(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Xn(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Kn(e,t){let n,r=!1;for(e<=sn?(n=e,r=!0):n=(0,k.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,k.jP)(e,n+1);return n}function Yn(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Zn(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Qn(e){try{return e.map((e=>(0,ht.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Jn(e){return e.map((e=>(0,ht.encodeString)(e)))}var er=n(3337),tr=n(8333),nr=n(2073)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>s,Sp:()=>a,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>h,M2:()=>p,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>S,Ly:()=>I,eE:()=>N,RF:()=>T,gJ:()=>C,xn:()=>_,Zz:()=>E,yj:()=>$,Eh:()=>A,mh:()=>R,wU:()=>D,wm:()=>F,x1:()=>O,o2:()=>M,ik:()=>z,mc:()=>L,TR:()=>B,By:()=>P,iH:()=>V,Vc:()=>W,QR:()=>U,T0:()=>G,ci:()=>j,sL:()=>H,y7:()=>q,$w:()=>X,p4:()=>K,ek:()=>Y,Vn:()=>Z,oH:()=>Q,$g:()=>J,SX:()=>ee,HE:()=>te,Om:()=>ne,hd:()=>re,NE:()=>se,YF:()=>ae,Y0:()=>ie,vw:()=>oe,de:()=>ue,Uy:()=>le,OR:()=>ce,je:()=>he,sH:()=>pe,qi:()=>de,q1:()=>fe,iZ:()=>me,Ac:()=>ge,iJ:()=>ye,Qg:()=>be,J_:()=>xe,av:()=>ve,iW:()=>we,r7:()=>ke,J$:()=>Se,vt:()=>Ie,CA:()=>Ne,e7:()=>Te,Zb:()=>Ce,kU:()=>_e,PY:()=>Ee,Vf:()=>$e,MZ:()=>Ae,w6:()=>Re,qC:()=>De,qI:()=>Fe,eZ:()=>Oe,Hh:()=>Me,Yo:()=>ze,BM:()=>Le,mT:()=>Be,OV:()=>Pe,OA:()=>Ve,OU:()=>We,vF:()=>Ue,q2:()=>Ge,c1:()=>je,q8:()=>He,jQ:()=>qe,Vb:()=>Xe,NZ:()=>Ke,wY:()=>Ye,ku:()=>Ze,yQ:()=>Qe,uv:()=>Je,cy:()=>et,W0:()=>tt,qW:()=>nt,we:()=>rt,Qi:()=>st,ly:()=>at,Kg:()=>it,pe:()=>ot,o0:()=>ut,Dl:()=>lt,e6:()=>ct,xJ:()=>ht,$H:()=>pt,qk:()=>dt,HZ:()=>ft,dp:()=>mt,Hm:()=>gt,_Y:()=>yt,zb:()=>bt,Sb:()=>xt,mK:()=>vt,e0:()=>wt,bV:()=>kt,xQ:()=>St,nr:()=>It,Ph:()=>Nt,oF:()=>Tt,p2:()=>Ct,RQ:()=>_t,w3:()=>Et,i5:()=>$t,a5:()=>At,MR:()=>Rt,FK:()=>Dt,GB:()=>Ft,TQ:()=>Ot,L8:()=>Mt,Gc:()=>zt,O3:()=>Lt,nh:()=>Bt,YW:()=>Pt,Zj:()=>Vt,D2:()=>Wt,_t:()=>Ut,bK:()=>Gt,m2:()=>jt,_J:()=>Ht,s1:()=>qt,Xk:()=>Xt,Tr:()=>Kt,sE:()=>Yt,MI:()=>Zt,n9:()=>Qt,cW:()=>Jt,wx:()=>en,G3:()=>tn,kp:()=>nn,To:()=>rn,Qv:()=>sn,XD:()=>an,Ru:()=>on,h8:()=>un,eB:()=>ln,b9:()=>cn,us:()=>hn,_V:()=>pn,lu:()=>dn});const r="Abs",s="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",I="BroadcastTo",N="BroadcastArgs",T="Cast",C="Ceil",_="ClipByValue",E="Complex",$="ComplexAbs",A="Concat",R="Conv2D",D="Conv2DBackpropFilter",F="Conv2DBackpropInput",O="Conv3D",M="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",L="Cos",B="Cosh",P="Cumprod",V="Cumsum",W="CropAndResize",U="DenseBincount",G="DepthToSpace",j="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",X="Diag",K="Dilation2D",Y="Dilation2DBackpropInput",Z="Dilation2DBackpropFilter",Q="RealDiv",J="Einsum",ee="Elu",te="EluGrad",ne="Erf",re="Equal",se="Exp",ae="ExpandDims",ie="Expm1",oe="FFT",ue="Fill",le="FlipLeftRight",ce="Floor",he="FloorDiv",pe="FusedBatchNorm",de="GatherV2",fe="GatherNd",me="Greater",ge="GreaterEqual",ye="Identity",be="IFFT",xe="Imag",ve="IsFinite",we="IsInf",ke="IsNan",Se="LeakyRelu",Ie="Less",Ne="LessEqual",Te="LinSpace",Ce="Log",_e="Log1p",Ee="LogicalAnd",$e="LogicalNot",Ae="LogicalOr",Re="LogicalXor",De="LogSoftmax",Fe="LowerBound",Oe="LRN",Me="LRNGrad",ze="Max",Le="Maximum",Be="MaxPool",Pe="MaxPoolGrad",Ve="MaxPool3D",We="MaxPool3DGrad",Ue="MaxPoolWithArgmax",Ge="Mean",je="Min",He="Minimum",qe="MirrorPad",Xe="Mod",Ke="Multinomial",Ye="Multiply",Ze="Neg",Qe="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",st="Pack",at="PadV2",it="Pool",ot="Pow",ut="Prelu",lt="Prod",ct="Range",ht="Real",pt="Reciprocal",dt="Relu",ft="Reshape",mt="ResizeNearestNeighbor",gt="ResizeNearestNeighborGrad",yt="ResizeBilinear",bt="ResizeBilinearGrad",xt="Relu6",vt="Reverse",wt="Round",kt="Rsqrt",St="ScatterNd",It="SearchSorted",Nt="Select",Tt="Selu",Ct="Slice",_t="Sin",Et="Sinh",$t="Sign",At="Sigmoid",Rt="Softplus",Dt="Sqrt",Ft="Sum",Ot="SpaceToBatchND",Mt="SplitV",zt="Softmax",Lt="SparseFillEmptyRows",Bt="SparseReshape",Pt="SparseSegmentMean",Vt="SparseSegmentSum",Wt="SparseToDense",Ut="SquaredDifference",Gt="Square",jt="StridedSlice",Ht="StringNGrams",qt="StringSplit",Xt="StringToHashBucketFast",Kt="Sub",Yt="Tan",Zt="Tanh",Qt="Tile",Jt="TopK",en="Transform",tn="Transpose",nn="Unique",rn="Unpack",sn="UnsortedSegmentSum",an="UpperBound",on="ZerosLike",un="Step",ln="FromPixels",cn="RotateWithOffset",hn="_FusedMatMul",pn="FusedConv2D",dn="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>u,uk:()=>l,tr:()=>c,wC:()=>h,Li:()=>p,nE:()=>d,bt:()=>f,T3:()=>m});var r=n(2885),s=n(5938),a=n(4706);const i=(0,s.R)("kernelRegistry",(()=>new Map)),o=(0,s.R)("gradRegistry",(()=>new Map));function u(e,t){const n=g(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,r=g(t,n);i.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,r.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{h(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s,c:()=>a});var r=n(2885);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(s.yj,e)}{const e={x:t};return r.BV.runKernel(s.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return r.BV.runKernel(s.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return r.BV.runKernel(s.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.mm,u)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(s.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(s.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},i={axis:t};return r.BV.runKernel(s.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return r.BV.runKernel(s.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return r.BV.runKernel(s.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return r.BV.runKernel(s.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return r.BV.runKernel(s.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),u.m("avgPool",l,h);const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let y=r.BV.runKernel(s.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>s,Vh:()=>a,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>h});var r=n(569);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function i(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(s.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),y={x:g,scale:f,offset:m,mean:p,variance:d},b={varianceEpsilon:c},x=r.BV.runKernel(s.sH,y,b);return(0,o.X)(x,h.shape)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),s=n(9121),a=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:c};return r.BV.runKernel(s.n9,h,p)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.r(t),n.d(t,{getBroadcastDims:()=>r,getReductionAxes:()=>s,assertAndGetBroadcastShape:()=>a})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var r=n(4077),s=n(569);function a(e,t="float32",n){return t=t||"float32",s.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.BV.runKernel(s.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil","float32")};return r.BV.runKernel(s.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,a._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(s.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.BV.runKernel(s.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(s.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(3740),s=n(569),a=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,r._1)(e,"x","conv1d"),d=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),s.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),i.m("conv1d",o,h),s.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),s.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],v=(0,a.T)(y,g,b,o,"NHWC",x,h);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",u,p);const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},v=r.BV.runKernel(s.mh,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(7097),s=n(9121),a=n(569),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,l,c="NHWC",h){let p=e;3===e.rank&&(p=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?d.shape[3]:d.shape[1];a.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.m("conv2dDerFilter",l,h);const g={x:p,dy:d},y={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,filterShape:n};return r.BV.runKernel(s.wU,g,y)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(7097),s=n(9121),a=n(569),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,c="NHWC",h){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,d=t,f=!1;3===t.rank&&(f=!0,d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),a.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?p[3]:p[1],g="NHWC"===c?d.shape[3]:d.shape[1];a.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.m("conv2dDerInput",l,h);const y={dy:d,filter:n},b={strides:o,pad:l,dataFormat:c,dimRoundingMode:h,inputShape:p},x=r.BV.runKernel(s.wm,y,b);return f?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(3740),s=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,s._)(n,u,l,a,i,"NHWC",o)}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),s=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],d=c.shape[4];a.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=r.BV.runKernel(s.ik,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";n.d(t,{Rf:()=>s,Xw:()=>a,pl:()=>i,Ix:()=>o,jw:()=>u,aO:()=>l,I0:()=>f,jT:()=>m,sl:()=>g,m:()=>y});var r=n(569);function s(e,t,n,r,s="NHWC",a){return o(e,[...t,e[3]],n,a,r,null,null,g(s))}function a(e,t,n,r,s,a,i="channelsLast"){const[u,l]=c(t);let h;if("channelsLast"===i)h=[u,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[u,l,e[1],e[1]]}return o(e,h,n,r,s,a,!1,i)}function i(e,t,n,r,s,a,i="NDHWC"){const[o,l,c]=h(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[o,l,c,e[1],e[1]]}return u(e,p,n,r,s,!1,d,a)}function o(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,h,f]=e}const[g,y,,b]=t,[x,v]=c(n),[w,k]=c(r),S=p(g,w),I=p(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,r,s,a,i,o,u){let c,h,p;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=l(e,t,n));const a=e[1];return[d((e[0]-t+2*r)/n+1,s),d((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);h=s[0],p=s[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/s);const e=Math.max(0,(h-1)*r+a-t),o=Math.max(0,(p-1)*s+i-n),u=Math.floor(e/2),l=e-u,d=Math.floor(o/2);c={top:u,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),p=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=d((t-a+l+f)/r+1,o),p=d((n-i+m+g)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(s,h,f,x,v,S,I,a,o),_=i?b*m:b;let E;return"channelsFirst"===o?E=[u,_,T,C]:"channelsLast"===o&&(E=[u,T,C,_]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:_,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,c,f,m]=e}const[y,b,x,,v]=t,[w,k,S]=h(n),[I,N,T]=h(r),C=p(y,I),_=p(b,N),E=p(x,T),{padInfo:$,outDepth:A,outHeight:R,outWidth:D}=function(e,t,n,r,s,a,i,o,u,c,h){let p,f,m,g;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=l(e,t,r));const i=e[1],o=e[2];return[d((e[0]-t+2*s)/r+1,a),d((i-t+2*s)/r+1,a),d((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,h);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const e=(f-1)*s+o-t,l=(m-1)*a+u-n,h=(g-1)*i+c-r,d=Math.floor(e/2),y=e-d,b=Math.floor(l/2),x=l-b,v=Math.floor(h/2);p={top:b,bottom:x,left:v,right:h-v,front:d,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/s),m=Math.ceil((n-u+1)/a),g=Math.ceil((r-c+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,w,k,S,C,_,E,o),F=a?v*g:v;let O;return"channelsFirst"===i?O=[u,F,A,R,D]:"channelsLast"===i&&(O=[u,A,R,D,F]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:A,outHeight:R,outWidth:D,outChannels:F,padInfo:$,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:E,dilationDepth:I,dilationHeight:N,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,r=1){const s=p(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos","float32")};return r.BV.runKernel(s.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh","float32")};return r.BV.runKernel(s.TR,t)}})},9640:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cumprod_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(s.By,o,u)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(s.iH,o,u)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return r.BV.runKernel(s.T0,h,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>c});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",u,p);const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},v=r.BV.runKernel(s.ci,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(7097),s=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return r.BV.runKernel(s.sL,p,d)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(7097),s=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=r.BV.runKernel(s.y7,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:d,filter:p},g={strides:n,pad:o,dilations:l},y=r.BV.runKernel(s.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(s.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(747),s=n(3740),a=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,s._1)(e,"a","div"),o=(0,s._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},548:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(3740),s=n(569),a=n(8687),i=n(2668),o=n(4968);const u=(0,i.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),i=(0,r._1)(t,"t2","dot");s.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(s.hu(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),r=(0,a.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),r=(0,a.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,a.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,a.O)(n,e)}}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return r.BV.runKernel(s.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(s.Om,n)}})},1954:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(3561);const s=(0,n(2668).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,r.K)(e,"euclidean",t,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return r.BV.runKernel(s.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.BV.runKernel(s.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return r.BV.runKernel(s.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(7097),s=n(9121);function a(e,t,n){const a={shape:e,value:t,dtype:n};return r.BV.runKernel(s.de,{},a)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return r.BV.runKernel(s.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.je,u)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var r=n(2200),s=n(3233),a=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),h=n(625),p=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,d.S)(n,s)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,s.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,r);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.BV.runKernel(s.qi,o,u)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return r.BV.runKernel(s.J_,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s._Y,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(s.dp,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3963:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,a._1)(e,"x","isFinite")};return r.BV.runKernel(s.av,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({isInf_:function(e){const t={x:(0,a._1)(e,"x","isInf")};return r.BV.runKernel(s.iW,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return r.BV.runKernel(s.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(s.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.CA,l)}})},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:l},m=r.BV.runKernel(s.eZ,d,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return r.BV.runKernel(s.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return r.BV.runKernel(s.kU,t)}})},3888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(633),s=n(3740),a=n(4841),i=n(7370),o=n(2668),u=n(625),l=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,s._1)(e,"x","logSigmoid"),n=(0,r.cb)((e=>({value:(0,i.W)((0,l.W)((0,i.W)(e))),gradFunc:t=>(0,a.d)(t,(0,u.X)((0,i.W)(e)))})));return n(t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var r=n(633),s=n(3740),a=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),h=n(827),p=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),s=(0,h.l)(e,r),c=(0,h.l)((0,a.p)(s,"float32"),(0,o.c)((0,p.S)((0,i.Q)(s),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,s=(0,i.Q)(r);return(0,h.l)(e,(0,l.d)((0,p.S)(e,t,!0),s))}}}));return c(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(3740),s=n(569),a=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,s.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),v=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(v.shape,f);return(0,h.X)(v,e)}return v}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(s.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(s.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(s.MZ,u)}})},596:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var r=n(3740),s=n(2200),a=n(2856),i=n(8651),o=n(5750);const u=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),u=(0,r._1)(t,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,u.shape),(0,a.H)((0,o.K)(e,t),(0,i.h)((0,a.H)(e,t)))}})},9876:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return r.BV.runKernel(s.XL,c,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(s.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",u,c);const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(s.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(s.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(s.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return r.BV.runKernel(s.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.wY,u)}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return r.BV.runKernel(s.ku,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(3740),s=n(569),a=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,s.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,a._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.BV.runKernel(s.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),s=n(569),a=n(1661),i=n(723);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,s.p8)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return r.BV.runKernel(s.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>a,op:()=>i});var r=n(7097),s=n(569);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},31:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>p.z,WnP:()=>s.W,Khb:()=>a.K,__u:()=>i._,IHx:()=>o.I,QBD:()=>d,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>x.V,z4N:()=>v.z,fvJ:()=>w.f,C80:()=>k.C,wS1:()=>S.w,uR5:()=>C,zEQ:()=>F,tgs:()=>M.t,Dxk:()=>z,JY5:()=>L,p3b:()=>B,E4h:()=>O.E,yE8:()=>P,anm:()=>Xn,XsQ:()=>V,UFq:()=>W.U,f3b:()=>U.f,pju:()=>N.p,mDi:()=>G.m,iUl:()=>j.i,d9v:()=>H.d,PYB:()=>q.P,zoF:()=>_.z,gME:()=>X,Izb:()=>K,MNy:()=>Y,ZaL:()=>Z,PAt:()=>Q.P,Tek:()=>J.T,bc:()=>ee.b,pdZ:()=>te,$QV:()=>re,mCk:()=>se.m,f9Y:()=>ae.f,mew:()=>ar,$Gn:()=>ie.$,zbp:()=>oe.z,ppE:()=>ue,nTT:()=>le.n,B10:()=>ce.B,Ka3:()=>he,WmZ:()=>pe.W,hiC:()=>de.h,NTj:()=>fe.N,AKD:()=>me.A,rvX:()=>rr,WYO:()=>ge,pyx:()=>ye.p,GRh:()=>sr,DgJ:()=>be.D,qNN:()=>xe.q,d2q:()=>ve.d,Qqt:()=>we.Q,dt4:()=>ke.d,t$B:()=>Se.t,iyy:()=>Ne,kp_:()=>mn.k,hlL:()=>Te.h,GWj:()=>Ce.G,qPi:()=>_e.q,imm:()=>r,Iqj:()=>Ee.I,dbB:()=>nr,pjt:()=>$e.p,brS:()=>Ae.b,Sxn:()=>gn.S,asL:()=>Re.a,BHj:()=>ss,V3u:()=>ir,wx0:()=>yn.w,xVT:()=>De.x,UWc:()=>Fe.U,i2d:()=>Oe.i,hi7:()=>Me.h,d9m:()=>ze.d,zN1:()=>Le.z,$r2:()=>as,SX3:()=>Be,G9k:()=>Pe.G,cM7:()=>Ve.c,Krr:()=>We.K,e_t:()=>Ue.e,CmS:()=>Ge.C,l_t:()=>je.l,HvI:()=>He.H,hJK:()=>qe.h,K5V:()=>Xe.K,egP:()=>Ke.e,MB5:()=>is,eab:()=>Qe,OI3:()=>E.O,Fp7:()=>Je.F,_sB:()=>et._,YQQ:()=>tt,Ip$:()=>nt,gWQ:()=>rt.g,J69:()=>st.J,ry_:()=>ot,VV$:()=>ut.V,LTh:()=>lt.L,VdP:()=>ct.V,wQq:()=>ht.w,Gi7:()=>mt,p_:()=>Qn,dC7:()=>$.d,rq4:()=>gt,SJ_:()=>yt,W76:()=>bt.W,KOy:()=>Yn.K,Quu:()=>xt.Q,lfX:()=>vt.l,iUs:()=>at.i,JpU:()=>wt.J,op:()=>p.op,N2O:()=>kt,vku:()=>St.v,pNR:()=>It,koy:()=>Nt,t1L:()=>Tt,lGY:()=>Ct,d_R:()=>_t.d,sQ3:()=>Et.s,AL3:()=>$t.A,S0v:()=>At.S,WVs:()=>Rt.W,TN_:()=>Dt,wzB:()=>Lt,nGf:()=>Bt,ruB:()=>Pt,LGj:()=>Vt,w6H:()=>Wt,kwC:()=>Ut.k,M25:()=>Gt.M,UYe:()=>jt.U,btT:()=>Ht.b,XLQ:()=>T.X,GYS:()=>qt.G,SDf:()=>Xt,diP:()=>Kt,sx7:()=>Yt,mG2:()=>Zt,QEs:()=>bn.Q,NMM:()=>Qt.N,bp0:()=>Jt.b,iD$:()=>en.i,snQ:()=>er,zcT:()=>Ze,U8D:()=>tn.U,U_I:()=>nn.U,ODp:()=>rn,XD2:()=>A.X,Xxe:()=>sn.X,tdS:()=>rs,O$l:()=>an.O,R_K:()=>on.R,tPi:()=>R.t,jZU:()=>un,SmN:()=>ln,CnO:()=>cn,p0P:()=>hn,XAC:()=>pn.X,Wvh:()=>dn.W,fBT:()=>fn.f,rVs:()=>os,ers:()=>tr,uN7:()=>ns,Vl2:()=>xn.V,_b3:()=>vn._,h62:()=>dt.h,$i:()=>wn.$,L9e:()=>kn.L,knu:()=>Sn.k,Nbs:()=>In.N,NXj:()=>Nn.N,Z_8:()=>us,luU:()=>ft.l,Smz:()=>Tn.S,ORZ:()=>Cn.O,AEp:()=>D.A,XeE:()=>_n.X,RRF:()=>$n,odF:()=>An,wOQ:()=>Rn.w,yXz:()=>Dn,Bfx:()=>Fn,xZs:()=>On,Gg6:()=>Ie.G,hg7:()=>Mn.h,p4s:()=>Kn.p,Xu6:()=>zn,Two:()=>Ln.T,pUJ:()=>Bn.p,HHK:()=>Pn.H,GaM:()=>Vn,VD$:()=>Wn,arb:()=>Un.a,itS:()=>jn,lls:()=>Hn.l,P84:()=>qn.P});var r={};n.r(r),n.d(r,{conv2d:()=>pr,depthwiseConv2d:()=>mr,matMul:()=>gr});var s=n(6235),a=n(7839),i=n(1470),o=n(6407),u=n(7097),l=n(9121),c=n(3740),h=n(569),p=n(2668);const d=(0,p.op)({addN_:function(e){h.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),h.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!h.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return u.BV.runKernel(l.Xz,r)}});var f=n(781),m=n(2998),g=n(47),y=n(7394),b=n(2421),x=n(1891),v=n(7037),w=n(9812),k=n(369),S=n(5176),I=n(2582),N=n(2271),T=n(4968);const C=(0,p.op)({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=(0,c._1)(e,"x","avgPool3d","float32");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,I.m)("avgPool3d",r,s);const d={x:o},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let m=u.BV.runKernel(l._k,d,f);return m=(0,N.p)(m,o.dtype),p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var _=n(6884),E=n(8687),$=n(4841),A=n(625),R=n(2676),D=n(1869);const F=(0,p.op)({basicLSTMCell_:function(e,t,n,r,s,a){const i=(0,c._1)(e,"forgetBias","basicLSTMCell"),u=(0,c._1)(t,"lstmKernel","basicLSTMCell"),l=(0,c._1)(n,"lstmBias","basicLSTMCell"),h=(0,c._1)(r,"data","basicLSTMCell"),p=(0,c._1)(s,"c","basicLSTMCell"),d=(0,c._1)(a,"h","basicLSTMCell"),f=(0,_.z)([h,d],1),m=(0,E.O)(f,u),g=(0,o.I)(m,l),y=g.shape[0],b=g.shape[1]/4,x=[y,b],v=(0,R.t)(g,[0,0],x),w=(0,R.t)(g,[0,b],x),k=(0,R.t)(g,[0,2*b],x),S=(0,R.t)(g,[0,3*b],x),I=(0,o.I)((0,$.d)((0,A.X)(v),(0,D.A)(w)),(0,$.d)(p,(0,A.X)((0,o.I)(i,k))));return[I,(0,$.d)((0,D.A)(I),(0,A.X)(S))]}});var O=n(8441),M=n(7505);const z=(0,p.op)({batchNorm2d_:function(e,t,n,r,s,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(p=(0,c._1)(r,"offset","batchNorm")),h.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),h.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}}),L=(0,p.op)({batchNorm3d_:function(e,t,n,r,s,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(p=(0,c._1)(r,"offset","batchNorm")),h.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),h.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}}),B=(0,p.op)({batchNorm4d_:function(e,t,n,r,s,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,p;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(p=(0,c._1)(r,"offset","batchNorm")),h.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),h.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=p&&h.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,u,p,l,a)}}),P=(0,p.op)({bincount_:function(e,t,n){const r=(0,c._1)(e,"x","bincount"),s=(0,c._1)(t,"weights","bincount");h.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return u.BV.runKernel(l.zv,a,i)}}),V=(0,p.op)({broadcastArgs_:function(e,t){const n=(0,c._1)(e,"s0","broadcastArgs","int32"),r=(0,c._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return u.BV.runKernel(l.eE,s)}});var W=n(8247),U=n(2657),G=n(6825),j=n(2279),H=n(8723),q=n(1661);const X=(0,p.op)({concat1d_:function(e){return(0,_.z)(e,0)}}),K=(0,p.op)({concat2d_:function(e,t){return(0,_.z)(e,t)}}),Y=(0,p.op)({concat3d_:function(e,t){return(0,_.z)(e,t)}}),Z=(0,p.op)({concat4d_:function(e,t){return(0,_.z)(e,t)}});var Q=n(1355),J=n(4794),ee=n(1405);const te=(0,p.op)({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=(0,c._1)(e,"x","conv3d"),o=(0,c._1)(t,"filter","conv3d");let p=i,d=!1;4===i.rank&&(d=!0,p=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),h.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),h.hu(p.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),h.hu((0,I.jT)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),h.hu("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const f={x:p,filter:o},m={strides:n,pad:r,dataFormat:s,dilations:a},g=u.BV.runKernel(l.x1,f,m);return d?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ne=n(7594);const re=(0,p.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,c._1)(e,"x","conv3dTranspose"),i=(0,c._1)(t,"filter","conv3dTranspose");return(0,ne._)(n,a,i,r,s)}});var se=n(173),ae=n(2699),ie=n(9640),oe=n(7405);const ue=(0,p.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,c._1)(e,"x","denseBincount"),a=(0,c._1)(t,"weights","denseBincount");h.hu("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),h.hu(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return u.BV.runKernel(l.QR,i,o)}});var le=n(9112),ce=n(4718);const he=(0,p.op)({diag_:function(e){const t={x:(0,c._1)(e,"x","diag")};return u.BV.runKernel(l.$w,t)}});var pe=n(557),de=n(1274),fe=n(9322),me=n(548);const ge=(0,p.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return u.BV.runKernel(l.$g,n,r)}});var ye=n(3233),be=n(6477),xe=n(4650),ve=n(1954),we=n(4842),ke=n(1300),Se=n(3426),Ie=n(7501);const Ne=(0,p.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,U.f)([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=(0,T.X)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Ie.G)((0,ke.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,Ie.G)((0,ke.d)((0,ke.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.G)((0,ke.d)((0,ke.d)((0,ke.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Te=n(4006),Ce=n(6943),_e=n(9165),Ee=n(4926),$e=n(636),Ae=n(7630),Re=n(4386),De=n(3963),Fe=n(4365),Oe=n(6230),Me=n(9133),ze=n(6573),Le=n(624);function Be(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return u.BV.runKernel(l.e7,{},r)}var Pe=n(9648),Ve=n(2597),We=n(7474),Ue=n(3888),Ge=n(1510),je=n(1391),He=n(2856),qe=n(8651),Xe=n(5750),Ke=n(596);const Ye=2147483648,Ze=(0,p.op)({searchSorted_:function(e,t,n="left"){const r=(0,c._1)(e,"sortedSequence","searchSorted"),s=(0,c._1)(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=(0,T.X)(r,[-1,a]),p=(0,T.X)(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,h.NA)(p.shape)>=Ye)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Ye)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const d={sortedSequence:o,values:p},f={side:n};return u.BV.runKernel(l.nr,d,f)}});function Qe(e,t){return Ze(e,t,"left")}var Je=n(3307),et=n(1174);const tt=(0,p.op)({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=(0,c._1)(e,"x","maxPool3d");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,I.m)("maxPool3d",r,s);const d={x:o},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},m=u.BV.runKernel(l.OA,d,f);return p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),nt=(0,p.op)({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:(0,c._1)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=u.BV.runKernel(l.vF,a,i);return{result:o[0],indexes:o[1]}}});var rt=n(632),st=n(5130),at=n(4917),it=n(4077);function ot(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,c._1)(e,"x","meshgrid",e instanceof it.es?e.dtype:"float32");if(void 0===t)return[r];let s=(0,c._1)(t,"y","meshgrid",t instanceof it.es?t.dtype:"float32");const a=(0,h.NA)(r.shape),i=(0,h.NA)(s.shape);return"xy"===n?(r=(0,T.X)(r,[1,-1]),s=(0,T.X)(s,[-1,1]),[(0,E.O)((0,at.i)([i,1],r.dtype),r),(0,E.O)(s,(0,at.i)([1,a],s.dtype))]):(r=(0,T.X)(r,[-1,1]),s=(0,T.X)(s,[1,-1]),[(0,E.O)(r,(0,at.i)([1,i],r.dtype)),(0,E.O)((0,at.i)([a,1],s.dtype),s)])}var ut=n(5735),lt=n(4513),ct=n(1483),ht=n(5228),pt=n(3591),dt=n(248),ft=n(827);const mt=(0,p.op)({moments_:function(e,t=null,n=!1){e=(0,c._1)(e,"x","moments");const r=(0,h.EC)(t,e.shape),s=(0,st.J)(e,r,n);let a=s.shape;n||(a=(0,pt.rv)(s.shape,r));const i=(0,dt.h)((0,ft.l)((0,N.p)(e,"float32"),(0,T.X)(s,a)));return{mean:s,variance:(0,st.J)(i,r,n)}}}),gt=(0,p.op)({multiRNNCell_:function(e,t,n,r){const s=(0,c._1)(t,"data","multiRNNCell"),a=(0,c.sI)(n,"c","multiRNNCell"),i=(0,c.sI)(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],h=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),h.push(u[e+1]);return[l,h]}}),yt=(0,p.op)({multinomial_:function(e,t,n,r=!1){const s=(0,c._1)(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,T.X)(s,[1,-1]):s},h={numSamples:t,seed:n,normalized:r},p=u.BV.runKernel(l.NZ,o,h);return 1===i?(0,T.X)(p,[p.size]):p}});var bt=n(7370),xt=n(6500),vt=n(6708),wt=n(7846);const kt=(0,p.op)({outerProduct_:function(e,t){const n=(0,c._1)(e,"v1","outerProduct"),r=(0,c._1)(t,"v2","outerProduct");h.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,T.X)(n,[-1,1]),a=(0,T.X)(r,[1,-1]);return(0,E.O)(s,a)}});var St=n(9682);const It=(0,p.op)({pad1d_:function(e,t,n=0){return(0,h.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,St.v)(e,[t],n)}}),Nt=(0,p.op)({pad2d_:function(e,t,n=0){return(0,h.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,St.v)(e,t,n)}}),Tt=(0,p.op)({pad3d_:function(e,t,n=0){return(0,h.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,St.v)(e,t,n)}}),Ct=(0,p.op)({pad4d_:function(e,t,n=0){return(0,h.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,St.v)(e,t,n)}});var _t=n(5860),Et=n(3453),$t=n(8151),At=n(9798),Rt=n(9451);const Dt=(0,p.op)({rand_:function(e,t,n){const r=(0,h.NA)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return u.BV.makeTensor(s,e,n)}});var Ft=n(6377);class Ot{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Ft.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Mt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Ft.alea(s.toString()),this.randn=new Ot(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class zt{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ft.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Lt=(0,p.op)({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Mt(t,n,r,s),i=(0,U.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Bt=(0,p.op)({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Ot(t,n,r,!1,s),i=(0,U.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Pt=(0,p.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Bt(e,0,1,t,n)}}),Vt=(0,p.op)({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=(0,U.f)(e,r),i=new zt(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function Wt(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return u.BV.runKernel(l.e6,{},s)}var Ut=n(766),Gt=n(9036),jt=n(7409),Ht=n(3582),qt=n(7486);const Xt=(0,p.op)({reverse1d_:function(e){const t=(0,c._1)(e,"x","reverse");return h.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,qt.G)(t,0)}}),Kt=(0,p.op)({reverse2d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,qt.G)(n,t)}}),Yt=(0,p.op)({reverse3d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,qt.G)(n,t)}}),Zt=(0,p.op)({reverse4d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,qt.G)(n,t)}});var Qt=n(7809),Jt=n(2634),en=n(9494),tn=n(5503),nn=n(8678);const rn=async function(e,t){const n=(0,c._1)(e,"x","setdiff1d"),r=(0,c._1)(t,"y","setdiff1d");h.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),h.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),h.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new it.YD([o],n.dtype),l=new it.YD([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};var sn=n(4434),an=n(9331),on=n(3254);const un=(0,p.op)({slice1d_:function(e,t,n){const r=(0,c._1)(e,"x","slice1d");return h.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,R.t)(r,[t],[n])}}),ln=(0,p.op)({slice2d_:function(e,t,n){const r=(0,c._1)(e,"x","slice2d");return h.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,R.t)(r,t,n)}}),cn=(0,p.op)({slice3d_:function(e,t,n){const r=(0,c._1)(e,"x","slice3d");return h.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,R.t)(r,t,n)}}),hn=(0,p.op)({slice4d_:function(e,t,n){const r=(0,c._1)(e,"x","slice4d");return h.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,R.t)(r,t,n)}});var pn=n(682),dn=n(3694),fn=n(7918),mn=n(7020),gn=n(8447),yn=n(4415),bn=n(3710),xn=n(8644),vn=n(3261),wn=n(5265),kn=n(9590),Sn=n(2991),In=n(1901),Nn=n(5158),Tn=n(5475),Cn=n(1173),_n=n(701),En=n(7852);function $n(e,t){(0,h.Cq)(e);const n=(0,c.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,En.H)(e,null,n,t)}function An(e,t,n){if((0,h.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,c.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,En.H)(e,t,r,n)}var Rn=n(9906);function Dn(e,t,n){if((0,h.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,c.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,En.H)(e,t,r,n)}function Fn(e,t,n){if((0,h.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,c.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,En.H)(e,t,r,n)}function On(e,t,n){if((0,h.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,c.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,En.H)(e,t,r,n)}var Mn=n(3243);const zn=(0,p.op)({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Ot(t,n,r,!0,s),i=(0,U.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});var Ln=n(9608),Bn=n(8749),Pn=n(4136);function Vn(e,t){return Ze(e,t,"right")}function Wn(e,t=!0,n,r){return u.BV.makeVariable(e,t,n,r)}var Un=n(5912),Gn=n(8333);const jn=async function(e){const t=(0,c._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,Gn.Z)(t.shape,n);return e!==t&&t.dispose(),r};var Hn=n(723),qn=n(6577);const Xn=async function(e,t,n){const r=(0,c._1)(e,"tensor","boolMask"),s=(0,c._1)(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;h.hu(i>0,(()=>"mask cannot be scalar")),h.k5(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),p=(0,T.X)(r,l),d=(0,T.X)(s,[-1]),f=await jn(d),m=(0,kn.L)(f,[1]),g=(0,Ee.I)(p,m,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),m.dispose(),p.dispose(),d.dispose(),f.dispose(),g};var Kn=n(9065),Yn=n(3561),Zn=n(747);const Qn=(0,p.op)({movingAverage_:function(e,t,n,r,s=!0){const a=(0,c._1)(e,"v","movingAverage"),i=(0,c._1)(t,"x","movingAverage"),u=(0,c._1)(n,"decay","movingAverage");(0,Zn.assertTypesMatch)(a,i),h.hu(h.cO(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=(0,en.i)(1),p=(0,ft.l)(l,u);let d=(0,$.d)((0,ft.l)(i,a),p);if(s){h.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,c._1)(r,"step","movingAverage");d=(0,de.h)(d,(0,ft.l)(l,(0,Et.s)(u,e)))}return(0,o.I)(a,d)}});var Jn=n(3028);const er=(0,p.op)({scatterND_:function(e,t,n){const r=(0,c._1)(e,"indices","scatterND","int32"),s=(0,c._1)(t,"updates","scatterND");Jn.validateInput(s,r,n);const a={indices:r,updates:s},i={shape:n};return u.BV.runKernel(l.xQ,a,i)}}),tr=(0,p.op)({sparseToDense_:function(e,t,n,r=0){const s=(0,c._1)(e,"sparseIndices","sparseToDense","int32"),a=(0,c._1)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,c._1)(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},h={outputShape:n};return u.BV.runKernel(l.D2,o,h)}}),nr=(0,p.op)({gatherND_:function(e,t){const n=(0,c._1)(t,"indices","gatherND","int32"),r={params:(0,c._1)(e,"x","gatherND","string_or_numeric"),indices:n};return u.BV.runKernel(l.q1,r)}}),rr=(0,p.op)({dropout_:function(e,t,n,r){const s=(0,c._1)(e,"x","dropout");if(h.hu("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),h.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof it.es?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(h.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,u=(0,de.h)((0,Ce.G)((0,o.I)(Vt(a,0,1,"float32",r),i)),i);return(0,$.d)(s,u)}});function sr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ar(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return $n(s,"float32")}const ir=async function(e,t,n=1){const r=(0,c._1)(e,"predictions","inTopK"),s=(0,c._1)(t,"targets","inTopK");(0,h.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,h.hu)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,h.k5)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,h.hu)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],p=(0,h.WP)("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,_n.X)(p,s.shape,"bool")};var or=n(633),ur=n(2200),lr=n(6013),cr=n(9832),hr=n(9323);const pr=(0,p.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(d=d||"linear",!1===(0,hr.uy)(u.BV.state.gradientDepth,d)){h.hu("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let u=(0,J.T)(e,t,n,r,s,a,i);return null!=p&&(u=(0,o.I)(u,p)),(0,hr.QH)(u,d,f,m)}const g=(0,c._1)(e,"x","conv2d","float32"),y=(0,c._1)(t,"filter","conv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),I.m("fused conv2d",r,i);const v="NHWC"===s?b.shape[3]:b.shape[1];h.hu(y.shape[2]===v,(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${y.shape[2]}.`)),h.hu(I.jT(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const w=I.Ix(b.shape,y.shape,n,a,r,i);let k,S;if(null!=p&&(k=(0,c._1)(p,"bias","fused conv2d"),[k]=(0,Zn.makeTypesMatch)(k,g),"NHWC"===s?ur.assertAndGetBroadcastShape(w.outShape,k.shape):(h.hu(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),h.hu(0===k.shape.length||k.shape[0]===w.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${w.outChannels})`)))),null!=f){const e=f.shape;if(h.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)h.hu(1===e[0]||e[0]===w.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${w.outChannels}).`));else if(3===e.length)try{ur.assertAndGetBroadcastShape(e,w.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(n)}S=(0,c._1)(f,"prelu weights","fused conv2d")}const N=(e,t)=>{h.hu("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,l]=t,c=(0,hr.Fr)(e,u,d);h.hu(I.I0(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[(0,cr._)(o.shape,c,i,n,r),(0,lr.p)(o,c,i.shape,n,r)];if(null!=l){const e=(0,hr.pf)(l,c);p.push(e)}return p},C={x:b,filter:y,bias:k,preluActivationWeights:S},_={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,or.cb)(((e,t,n)=>{let r=u.BV.runKernel(l._V,C,_);return n([t,e,r]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}}));return e(b,y)}{const e=(0,or.cb)(((e,t,n,r)=>{let s=u.BV.runKernel(l._V,C,_);return r([t,e,s,n]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:N}}));return e(b,y,k)}}});var dr=n(8098),fr=n(4375);const mr=(0,p.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,hr.uy)(u.BV.state.gradientDepth,d)){let u=(0,ce.B)(e,t,n,r,s,a,i);return null!=p&&(u=(0,o.I)(u,p)),(0,hr.QH)(u,d,f,m)}const g=(0,c._1)(e,"x","depthwiseConv2d","float32"),y=(0,c._1)(t,"filter","depthwiseConv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),h.hu(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==a&&(a=[1,1]),h.hu(I.jT(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),I.m("fused depthwiseConv2d",r,i);const v=I.Ix(b.shape,y.shape,n,a,r,i,!0);let w,k;null!=p&&(w=(0,c._1)(p,"bias","fused conv2d"),[w]=(0,Zn.makeTypesMatch)(w,g),ur.assertAndGetBroadcastShape(v.outShape,w.shape)),null!=f&&(k=(0,c._1)(f,"prelu weights","fused depthwiseConv2d"));const S=(e,t)=>{h.hu(I.I0(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,l]=t,c=(0,hr.Fr)(e,u,d),p=(0,fr.v)(o.shape,c,s,n,r,a,i),f=(0,dr.z)(o,c,s.shape,n,r,a,i);return null!=l?[p,f,(0,hr.pf)(w,c)]:[p,f]},N={x:b,filter:y,bias:w,preluActivationWeights:k},C={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,or.cb)(((e,t,n)=>{let r=u.BV.runKernel(l.lu,N,C);return n([t,e,r]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y)}{const e=(0,or.cb)(((e,t,n,r)=>{let s=u.BV.runKernel(l.lu,N,C);return r([t,e,s,n]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y,w)}}}),gr=(0,p.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:p=.2}){if(!1===(0,hr.uy)(u.BV.state.gradientDepth,a)){let u=(0,E.O)(e,t,n,r);return null!=s&&(u=(0,o.I)(u,s)),(0,hr.QH)(u,a,i,p)}let d=(0,c._1)(e,"a","fused matMul"),f=(0,c._1)(t,"b","fused matMul");[d,f]=(0,Zn.makeTypesMatch)(d,f);const m=n?d.shape[d.rank-2]:d.shape[d.rank-1],g=r?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=r?f.shape[f.rank-2]:f.shape[f.rank-1],x=d.shape.slice(0,-2),v=f.shape.slice(0,-2),w=h.NA(x),k=h.NA(v);h.hu(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${d.shape} and ${f.shape} and transposeA=${n} and transposeB=${r} must match.`));const S=ur.assertAndGetBroadcastShape(d.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),I=n?(0,T.X)(d,[w,m,y]):(0,T.X)(d,[w,y,m]),N=r?(0,T.X)(f,[k,b,g]):(0,T.X)(f,[k,g,b]);let C,_;null!=s&&(C=(0,c._1)(s,"bias","fused matMul"),[C]=(0,Zn.makeTypesMatch)(C,d),ur.assertAndGetBroadcastShape(S,C.shape)),null!=i&&(_=(0,c._1)(i,"prelu weights","fused matMul"));const $=(e,t)=>{const[i,o,u,l]=t,c=(0,hr.Fr)((0,T.X)(e,u.shape),u,a);let h,p;return n||r?!n&&r?(h=(0,E.O)(c,o,!1,!1),p=(0,E.O)(c,i,!0,!1)):n&&!r?(h=(0,E.O)(o,c,!1,!0),p=(0,E.O)(i,c,!1,!1)):(h=(0,E.O)(o,c,!0,!0),p=(0,E.O)(c,i,!0,!0)):(h=(0,E.O)(c,o,!1,!0),p=(0,E.O)(i,c,!0,!1)),null!=s?[h,p,(0,hr.pf)(l,c)]:[h,p]},A={a:I,b:N,bias:C,preluActivationWeights:_},R={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:p};if(null==s){const e=(0,or.cb)(((e,t,n)=>{const r=u.BV.runKernel(l.us,A,R);return n([e,t,r]),{value:(0,T.X)(r,S),gradFunc:$}}));return e(I,N)}{const e=(0,or.cb)(((e,t,n,r)=>{const s=u.BV.runKernel(l.us,A,R);return r([e,t,s,n]),{value:(0,T.X)(s,S),gradFunc:$}}));return e(I,N,C)}}}),yr=(0,p.op)({hammingWindow_:function(e){return ar(e,.54,.46)}}),br=(0,p.op)({hannWindow_:function(e){return ar(e,.5,.5)}}),xr=(0,p.op)({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,R.t)(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=(0,_.z)([(0,R.t)(e,a,t-r),(0,Te.h)([r],s)]);i.push(o),a+=n}return 0===i.length?An([],[0,t]):(0,T.X)((0,_.z)(i),[i.length,t])}}),vr=(0,p.op)({stft_:function(e,t,n,r,s=br){null==r&&(r=sr(t));const a=xr(e,t,n),i=(0,$.d)(a,s(t));return(0,bn.Q)(i,r)}}),wr=(0,p.op)({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=(0,c._1)(e,"image","cropAndResize"),o=(0,c._1)(t,"boxes","cropAndResize","float32"),p=(0,c._1)(n,"boxInd","cropAndResize","int32"),d=o.shape[0];h.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${o.shape}.`)),h.hu(1===p.rank&&p.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${o.shape}.`)),h.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),h.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),h.hu("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const f={image:i,boxes:o,boxInd:p},m={method:s,extrapolationValue:a,cropSize:r};return u.BV.runKernel(l.Vc,f,m)}}),kr=(0,p.op)({flipLeftRight_:function(e){const t=(0,c._1)(e,"image","flipLeftRight","float32");h.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return u.BV.runKernel(l.Uy,n,{})}}),Sr=(0,p.op)({grayscaleToRGB_:function(e){const t=(0,c._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];h.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),h.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,Ie.G)(t,s)}}),Ir=(0,p.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,c._1)(e,"image","rotateWithOffset","float32");h.hu(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return u.BV.runKernel(l.b9,a,i)}});function Nr(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),h.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),h.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),h.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),h.hu(1===t.rank,(()=>"scores must be a 1D tensor")),h.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),h.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Tr=(0,p.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppression","float32"),i=(0,c._1)(t,"scores","nonMaxSuppression","float32"),o=Nr(a,i,n,r,s),h={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return u.BV.runKernel(l.uv,{boxes:a,scores:i},h)}});var Cr=n(3337);const _r=(0,p.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Nr(i,o,n,r,s,a),p={boxes:i,scores:o},d={maxOutputSize:n=h.maxOutputSize,iouThreshold:r=h.iouThreshold,scoreThreshold:s=h.scoreThreshold,softNmsSigma:a=h.softNmsSigma},f=u.BV.runKernel(l.W0,p,d);return{selectedIndices:f[0],selectedScores:f[1]}}}),Er=(0,p.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Nr(i,o,n,r,s,null),p={boxes:i,scores:o},d={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:a},f=u.BV.runKernel(l.cy,p,d);return{selectedIndices:f[0],validOutputs:f[1]}}});var $r=n(3305),Ar=n(5098);const Rr=(0,p.op)({threshold_:function(e,t="binary",n=!1,r=.5){const s=(0,c._1)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,u,l,p,d=(0,$.d)($n([r]),255);if(h.hu(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),h.hu(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),h.hu("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),h.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,u,l]=(0,xn.V)(s,[1,1,1],-1);const e=(0,$.d)(i,.2989),t=(0,$.d)(u,.587),n=(0,$.d)(l,.114);p=(0,o.I)((0,o.I)(e,t),n)}else p=e;"otsu"===t&&(d=function(e,t){let n,r,s,a,i,u,l=$n([-1]),c=$n([0]),h=$n([0]);for(let p=0;p<e.size-1;p++){n=(0,R.t)(e,0,p+1),r=(0,R.t)(e,p+1),i=(0,de.h)((0,Tn.S)(n),t),u=(0,de.h)((0,Tn.S)(r),t);const d=(0,Tn.S)((0,$.d)(n,Wt(0,n.size)));s=(0,de.h)(d,(0,Tn.S)(n));const f=(0,Te.h)(r.shape,n.size),m=(0,o.I)(Wt(0,r.size),f),g=(0,$.d)(r,m);a=(0,de.h)((0,Tn.S)(g),(0,Tn.S)(r));const y=(0,ft.l)(s,a),b=(0,ft.l)(s,a),x=(0,$.d)(i,u);h=(0,$.d)((0,$.d)(x,y),b);const v=(0,$e.p)(h,c);c=(0,Un.a)(v,h,c),l=(0,Un.a)(v,$n([p]),l)}return l}(P((0,N.p)((0,Qt.N)(p),"int32"),(0,_n.X)([]),256),a));const f=n?(0,Le.z)(p,d):(0,$e.p)(p,d);return(0,N.p)((0,$.d)(f,255),"int32")}}),Dr=(0,p.op)({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=(0,c._1)(e,"image","transform","float32"),o=(0,c._1)(t,"transforms","transform","float32");h.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const p={image:i,transforms:o},d={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return u.BV.runKernel(l.wx,p,d)}}),Fr=(0,p.op)({bandPart_:function(e,t,n){(0,h.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,c._1)(e,"a","bandPart");(0,h.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=(0,T.X)(Wt(0,a,1,"int32"),[-1,1]),u=Wt(0,i,1,"int32"),l=(0,ft.l)(o,u),p=(0,He.H)((0,Le.z)(l,(0,en.i)(+t,"int32")),(0,Ae.b)(l,(0,en.i)(-n,"int32"))),d=(0,Hn.l)([a,i],r.dtype);return(0,T.X)((0,Sn.k)((0,Pn.H)((0,T.X)(r,[-1,a,i])).map((e=>(0,Un.a)(p,e,d)))),s)}}),Or=(0,p.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,h.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,h.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,xn.V)(e,e.shape[0],0).map((e=>(0,kn.L)(e,[0])));(0,h.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(u.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,$.d)((0,Tn.S)((0,$.d)(n[r],e)),n[r]);e=(0,ft.l)(e,t)}return(0,de.h)(e,(0,Yn.K)(e,"euclidean"))})));return t?(0,Sn.k)(n,0):n}});var Mr=n(4368);function zr(e,t=!1){return u.BV.tidy((()=>{(0,h.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ne(n),a=(0,H.d)(e);const i=An([[1]],[1,1]);let o=(0,H.d)(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,c=s;[o,a,s]=u.BV.tidy((()=>{const t=(0,R.t)(a,[e,e],[n-e,1]),u=(0,Yn.K)(t),l=(0,R.t)(a,[e,e],[1,1]),c=(0,Un.a)((0,$e.p)(l,0),An([[-1]]),An([[1]])),h=(0,ft.l)(l,(0,$.d)(c,u)),p=(0,de.h)(t,h);o=1===p.shape[0]?(0,H.d)(i):(0,_.z)([i,(0,R.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,bt.W)((0,de.h)((0,E.O)(c,h),u)),f=(0,R.t)(a,[e,0],[n-e,r]),m=(0,$.d)(d,o),g=(0,Kn.p)(o);if(0===e)a=(0,ft.l)(f,(0,E.O)(m,(0,E.O)(g,f)));else{const t=(0,ft.l)(f,(0,E.O)(m,(0,E.O)(g,f)));a=(0,_.z)([(0,R.t)(a,[0,0],[e,r]),t],0)}const y=(0,Kn.p)(m),b=(0,R.t)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,ft.l)(b,(0,E.O)((0,E.O)(b,o),y));else{const t=(0,ft.l)(b,(0,E.O)((0,E.O)(b,o),y));s=(0,_.z)([(0,R.t)(s,[0,0],[n,e]),t],1)}return[o,a,s]})),(0,Mr.B9)([t,l,c])}return!t&&n>r&&(s=(0,R.t)(s,[0,0],[n,r]),a=(0,R.t)(a,[0,0],[r,r])),[s,a]}))}const Lr=(0,p.op)({qr_:function(e,t=!1){if((0,h.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return zr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Pn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=zr(e,t);s.push(n),a.push(r)})),[(0,T.X)((0,Sn.k)(s,0),e.shape),(0,T.X)((0,Sn.k)(a,0),e.shape)]}}});var Br=n(9876);const Pr=(0,p.op)({computeWeightedLoss_:function(e,t,n=Br.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,c._1)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,c._1)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,$.d)(r,s);if(n===Br.I.NONE)return a;if(n===Br.I.SUM)return(0,Tn.S)(a);if(n===Br.I.MEAN){if(null==s)return(0,st.J)(a);{const e=r.size/s.size,t=(0,de.h)((0,Tn.S)(a),(0,Tn.S)(s));return e>1?(0,de.h)(t,(0,en.i)(e)):t}}if(n===Br.I.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,de.h)((0,Tn.S)(a),(0,en.i)(r.size));{const e=(0,$.d)(s,(0,at.i)(r.shape)),t=(0,N.p)((0,Tn.S)((0,xt.Q)(e,(0,en.i)(0))),"float32");return(0,de.h)((0,Tn.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),Vr=(0,p.op)({absoluteDifference_:function(e,t,n,r=Br.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","absoluteDifference"),i=(0,c._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c._1)(n,"weights","absoluteDifference")),(0,h.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const u=(0,s.W)((0,ft.l)(a,i));return Pr(u,o,r)}}),Wr=(0,p.op)({cosineDistance_:function(e,t,n,r,s=Br.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","cosineDistance"),i=(0,c._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,c._1)(r,"weights","cosineDistance")),(0,h.k5)(a.shape,i.shape,"Error in cosineDistance: ");const u=(0,en.i)(1),l=(0,ft.l)(u,(0,Tn.S)((0,$.d)(a,i),n,!0));return Pr(l,o,s)}}),Ur=(0,p.op)({hingeLoss_:function(e,t,n,r=Br.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,c._1)(e,"labels","hingeLoss");const a=(0,c._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c._1)(n,"weights","hingeLoss")),(0,h.k5)(s.shape,a.shape,"Error in hingeLoss: ");const o=(0,en.i)(1);s=(0,ft.l)((0,$.d)((0,en.i)(2),s),o);const u=(0,jt.U)((0,ft.l)(o,(0,$.d)(s,a)));return Pr(u,i,r)}}),Gr=(0,p.op)({huberLoss_:function(e,t,n,r=1,a=Br.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,c._1)(e,"labels","huberLoss"),u=(0,c._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,c._1)(n,"weights","huberLoss")),(0,h.k5)(i.shape,u.shape,"Error in huberLoss: ");const p=(0,en.i)(r),d=(0,s.W)((0,ft.l)(u,i)),f=(0,lt.L)(d,p),m=(0,ft.l)(d,f),g=(0,o.I)((0,$.d)((0,en.i)(.5),(0,dt.h)(f)),(0,$.d)(p,m));return Pr(g,l,a)}}),jr=(0,p.op)({logLoss_:function(e,t,n,r=1e-7,s=Br.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","logLoss"),i=(0,c._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,c._1)(n,"weights","logLoss")),(0,h.k5)(a.shape,i.shape,"Error in logLoss: ");const l=(0,en.i)(1),p=(0,en.i)(r),d=(0,bt.W)((0,$.d)(a,(0,Ve.c)((0,o.I)(i,p)))),f=(0,$.d)((0,ft.l)(l,a),(0,Ve.c)((0,o.I)((0,ft.l)(l,i),p))),m=(0,ft.l)(d,f);return Pr(m,u,s)}}),Hr=(0,p.op)({meanSquaredError_:function(e,t,n,r=Br.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,c._1)(e,"labels","meanSquaredError"),a=(0,c._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c._1)(n,"weights","meanSquaredError")),(0,h.k5)(s.shape,a.shape,"Error in meanSquaredError: ");const o=(0,wn.$)(s,a);return Pr(o,i,r)}}),qr=(0,p.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Br.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,c._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,c._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,c._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,en.i)(r),t=(0,en.i)(1),n=(0,en.i)(.5);i=(0,o.I)((0,$.d)(i,(0,ft.l)(t,e)),(0,$.d)(n,e))}const p=function(e,t){const n=(0,c._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,c._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,jt.U)(r),i=(0,$.d)(r,n),u=(0,We.K)((0,we.Q)((0,bt.W)((0,s.W)(r))));return(0,o.I)((0,ft.l)(a,i),u)}(i,u);return Pr(p,l,a)}}),Xr=(0,p.op)({softmaxCrossEntropy_:function(e,t,n,r=0,s=Br.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,c._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,c._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,en.i)(r),t=(0,en.i)(1),n=(0,en.i)(a.shape[1]);a=(0,o.I)((0,$.d)(a,(0,ft.l)(t,e)),(0,de.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,or.cb)(((e,t,r)=>{const s=(0,je.l)(t,[n],!0),a=(0,ft.l)((0,N.p)(t,"float32"),s);r([e,a]);const i=(0,bt.W)((0,$.d)(a,e));return{value:(0,Tn.S)(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,pt.rv)(e.shape,[n]);return[(0,$.d)((0,T.X)(e,a),(0,ft.l)((0,N.p)(r,"float32"),(0,we.Q)(s))),(0,$.d)((0,T.X)(e,a),(0,ft.l)((0,we.Q)(s),(0,N.p)(r,"float32")))]}}}));return r(e,t)}(a,i);return Pr(l,u,s)}}),Kr=(0,p.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,c._1)(e,"indices","sparseFillEmptyRows","int32"),a=(0,c._1)(t,"values","sparseFillEmptyRows"),i=(0,c._1)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,c._1)(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const h={indices:s,values:a,denseShape:i,defaultValue:o},p=u.BV.runKernel(l.O3,h);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}}),Yr=(0,p.op)({sparseReshape_:function(e,t,n){const r=(0,c._1)(e,"inputIndices","sparseReshape","int32"),s=(0,c._1)(t,"inputShape","sparseReshape","int32"),a=(0,c._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=u.BV.runKernel(l.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Zr=(0,p.op)({sparseSegmentMean_:function(e,t,n){const r=(0,c._1)(e,"data","sparseSegmentMean"),s=(0,c._1)(t,"indices","sparseSegmentMean","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return u.BV.runKernel(l.YW,i)}}),Qr=(0,p.op)({sparseSegmentSum_:function(e,t,n){const r=(0,c._1)(e,"data","sparseSegmentSum"),s=(0,c._1)(t,"indices","sparseSegmentSum","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return u.BV.runKernel(l.Zj,i)}}),Jr=(0,p.op)({stringNGrams_:function(e,t,n,r,s,a,i,o){const h=(0,c._1)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const p=(0,c._1)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},f={data:h,dataSplits:p},m=u.BV.runKernel(l._J,f,d);return{nGrams:m[0],nGramsSplits:m[1]}}}),es=(0,p.op)({stringSplit_:function(e,t,n=!0){const r=(0,c._1)(e,"input","stringSplit","string"),s=(0,c._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=u.BV.runKernel(l.s1,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),ts=(0,p.op)({stringToHashBucketFast_:function(e,t){const n=(0,c._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return u.BV.runKernel(l.Xk,s,r)}}),ns={fft:mn.k,ifft:gn.S,rfft:bn.Q,irfft:yn.w},rs={hammingWindow:yr,hannWindow:br,frame:xr,stft:vr},ss={flipLeftRight:kr,grayscaleToRGB:Sr,resizeNearestNeighbor:Ar.j,resizeBilinear:$r.I,rotateWithOffset:Ir,cropAndResize:wr,nonMaxSuppression:Tr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),o=Nr(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],h=u[1],{selectedIndices:p}=(0,Cr.GP)(l,h,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),$n(p,"int32")},nonMaxSuppressionWithScore:_r,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=Nr(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),h=l[0],p=l[1],{selectedIndices:d,selectedScores:f}=(0,Cr.pA)(h,p,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$n(d,"int32"),selectedScores:$n(f)}},nonMaxSuppressionPadded:Er,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=Nr(i,o,n,r,s,null),l=u.maxOutputSize,h=u.iouThreshold,p=u.scoreThreshold,[d,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,Cr.qP)(d,f,l,h,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$n(m,"int32"),validOutputs:(0,en.i)(g,"int32")}},threshold:Rr,transform:Dr},as={bandPart:Fr,gramSchmidt:Or,qr:Lr},is={absoluteDifference:Vr,computeWeightedLoss:Pr,cosineDistance:Wr,hingeLoss:Ur,huberLoss:Gr,logLoss:jr,meanSquaredError:Hr,sigmoidCrossEntropy:qr,softmaxCrossEntropy:Xr},os={sparseFillEmptyRows:Kr,sparseReshape:Yr,sparseSegmentMean:Zr,sparseSegmentSum:Qr},us={stringNGrams:Jr,stringSplit:es,stringToHashBucketFast:ts}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.BV.runKernel(s.ly,u,o)}})},5860:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var r=n(3740),s=n(569),a=n(5176),i=n(8441),o=n(2582),u=n(1174),l=n(2668),c=n(4968),h=n(7918);const p=(0,l.op)({pool_:function(e,t,n,l,p,d,f){null==p&&(p=[1,1]),null==d&&(d=1),0===l&&(l="valid");const m=(0,r._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),s.hu(o.jT(d,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${p}'`));const b=o.Xw(g.shape,t,d,p,l),x=[b.dilationHeight,b.dilationWidth];let v;v="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const w=1===x[0]&&1===x[1],[k,S]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([b.inHeight,b.inWidth],x,v),I=w?l:"valid",N=w?g:(0,h.f)(g,x,k),T=("avg"===n?()=>(0,a.w)(N,t,d,I,f):()=>(0,u._)(N,t,d,I,f))(),C=w?T:(0,i.E)(T,x,S);return y?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return r.BV.runKernel(s.o0,n)}})},9798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(s.Dl,u,l)}})},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return r.BV.runKernel(s.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return r.BV.runKernel(s.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return r.BV.runKernel(s.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return r.BV.runKernel(s.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(s.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(s.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return r.BV.runKernel(s.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt","float32")};return r.BV.runKernel(s.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(569),s=n(7852);function a(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>s,validateInput:()=>a,calculateShapes:()=>i});var r=n(569);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function i(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let e=a;e<i;++e)o*=n[e];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,a)),1],outputSize:(0,r.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return r.BV.runKernel(s.oF,t)}})},3179:(e,t,n)=>{"use strict";n.d(t,{y:()=>r,$:()=>s});const r=1.7580993408473768,s=1.0507009873554805},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(3740),s=n(569),a=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const p=(0,r._1)(e,"x","separableConv2d"),d=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),s.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),s.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];s.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,h,c),v=(0,a.T)(x,f,1,"valid",h);return g?(0,u.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(s.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return r.BV.runKernel(s.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin","float32")};return r.BV.runKernel(s.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return r.BV.runKernel(s.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.BV.runKernel(s.p2,o,u)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>s,maskToAxes:()=>a,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>h,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>d,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>b,sliceInfo:()=>x});var r=n(569);function s(e,t,n){const s=e.shape.length;r.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function o(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,s,a,i,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=h(i,l,c,r,e),y=p(u,l,c,s,e),b=o(a,l,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,r,a,e,t,l),y[t]=m(u,s,a,e,t,l),b[t]=d(a,t,l);return{begin:g,end:y,strides:b}}function h(e,t,n,r,s){const a=[...s],i=l(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=u(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function p(e,t,n,s,a){const i=[...a],o=l(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=u(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=r.uZ(0,i[e],a[e])}return i}function d(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,s,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[a];return o<0&&(o+=l),o=r.uZ(0,o,l-1),o}function m(e,t,n,s,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[a];return o<0&&(o+=l),o=u>0?r.uZ(0,o,l):r.uZ(-1,o,l-1),o}function g(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let s;const a=e.shape.length;let i;return s="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function x(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=v(p.begin[t],0,p.strides[t],r,s,a),p.end[t]=v(p.end[t],1,p.strides[t],r,s,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function v(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(s.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return r.BV.runKernel(s.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return r.BV.runKernel(s.TQ,u,l)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),s=n(9121),a=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7097),s=n(9121),a=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),s=n(6884),a=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,d.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,s.z)([m,y],1),v=(0,s.z)([g,b],1),w=(0,l.X)((0,r.P)(x,v),[f[0],f[1]]);o=(0,d.S)(w)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),s=n(1661),a=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),h=n(8644),p=n(723),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,m=(0,c.t)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,s.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,u.k)(b),w=(0,i.a)(b),k=(0,h.V)(v,[x,n-x],v.shape.length-1),S=(0,h.V)(w,[x,n-x],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,(0,l.X)((0,s.P)(k[0],S[0]),I)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(s.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return r.BV.runKernel(s.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(7097),s=n(3740);const a=(0,n(2668).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(3740),s=n(569),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze","string_or_numeric");return(0,i.X)(n,(0,s.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.BV.runKernel(s.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(s.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,h=0){const p={x:(0,a._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h};return r.BV.runKernel(s.m2,p,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(s.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(s.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan","float32")};return r.BV.runKernel(s.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return r.BV.runKernel(s.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(3740),s=n(7852);function a(e,t,n){const a=(0,r.C)(e,n);return(0,s.H)(e,t,a,n)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(3740),s=n(569),a=n(7852);function i(e,t,n){if((0,s.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),s=n(569),a=n(9122);function i(e,t,n,i){if(null==i&&(i=(0,s.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),r=(0,s.NA)(n);(0,s.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==(0,s.NA)(t.slice(e));(0,s.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,s.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,s.xH)(e,[],!0),r.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.BV.runKernel(s.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=r.BV.runKernel(s.cW,u,l);return{values:c,indices:h}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>d});var r=n(7097),s=n(4368),a=n(9121),i=n(3740),o=n(569),u=n(1661),l=n(4386),c=n(7370),h=n(2668),p=n(766);const d=(0,h.op)({transpose_:function(e,t,n){const h=(0,i._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.hu(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const d={x:h},f={perm:t};return"complex64"===h.dtype?(0,s.lu)((()=>{let e=(0,p.k)(h),t=(0,l.a)(h);return e=r.BV.runKernel(a.G3,{x:e},f),t=r.BV.runKernel(a.G3,{x:t},f),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):r.BV.runKernel(a.G3,d,f)}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=r.BV.runKernel(s.kp,o,u);return{values:l,indices:c}}})},8749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a._1)(e,"x","unsortedSegmentSum"),u=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:o,segmentIds:u},c={numSegments:n};return r.BV.runKernel(s.Qv,l,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),s=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.BV.runKernel(s.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(7097),s=n(9121),a=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(u,h),e:(0,i.U)(l,h)};return r.BV.runKernel(s.Ph,p)}})},723:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),s=n(569),a=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,s.wT)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return r.BV.runKernel(s.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>h,_w:()=>v,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(5938),s=n(569);function a(e,t,n,r){const a=(0,s.e3)(t),o=function(e,t,n,r){const a=(0,s.NA)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let e=0;e<a/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(h[t+e],0,n).length)}return u}(e,t,n,a),c=t.length,h=u(e,t,n,a,o),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,s.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,s.oj)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,s,a=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(h>20){const t=3*c;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(r=l(r),a=l(a)),["["+r.map(((e,t)=>i(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,s[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,s[t],n))).join(", ")+"]"]}const d=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),d,n,f,s,!1))}g.push("...");for(let t=h-3;t<h;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),d,n,f,s,t===h-1))}}else for(let t=0;t<h;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),d,n,f,s,t===h-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.NA(e),null!=n){const e=n.length;s.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(t,this.size),this.strides=(0,s.e3)(e)}set(e,...t){0===t.length&&(t=[0]),s.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,f=null;function m(e){p=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.NA(e),this.strides=(0,s.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),p().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,r.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class v extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var r=n(4077),s=n(1221),a=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),c(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>h,sI:()=>p});var r=n(7097),s=n(2885),a=n(4077),i=n(569),o=n(9122);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,s="numeric"){if(e instanceof a.es)return c(s,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(s)>=0&&(l=s),c(s,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return r.BV.makeTensor(p,h,l)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>h(e,`${t}[${s}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,s,a,i,o;n.d(t,{yw:()=>r,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:s,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,createScalarValue:()=>x,createShuffledIndices:()=>s.U$,decodeString:()=>I,distSquared:()=>s.E7,encodeString:()=>S,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>s.xH,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>o,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.N9,isString:()=>s.HD,isTypedArray:()=>s.fU,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>w,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>v});var r=n(2885),s=n(569),a=n(3720);const i=n.n(a)()||a;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function d(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function y(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=m(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(m(s,44)),[s.add(r),a.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),s=d(e,t-8);return g(m(s,37).mul(n).add(r),m(r,25).add(s).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),s=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c);return g(m(r.add(s),43).add(m(a,30)).add(i),r.add(m(s.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),s=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c),o=m(r.add(s),43).add(m(a,30)).add(i),u=g(o,r.add(m(s.add(c),18)).add(a),n),l=d(e,16).mul(n),h=d(e,24),p=o.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(h),43).add(m(p,30)).add(f),l.add(m(h.add(r),18)).add(p),n)}(e,t);let r=n,s=n.mul(l).add(113),a=h(s.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];r=r.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(s).add(o[0]).add(d(e,b+8)),37).mul(l),s=m(s.add(o[1]).add(d(e,b+48)),42).mul(l),r=r.xor(p[1]),s=s.add(o[0]).add(d(e,b+40)),a=m(a.add(p[0]),33).mul(l),o=y(e,b,o[1].mul(l),r.add(p[0])),p=y(e,b+32,a.add(p[1]),s.add(d(e,b+16))),[a,r]=[r,a],b+=64}while(b!==x);const w=l.add(a.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),r=m(r.add(s).add(o[0]).add(d(e,b+8)),37).mul(w),s=m(s.add(o[1]).add(d(e,b+48)),42).mul(w),r=r.xor(p[1].mul(9)),s=s.add(o[0].mul(9).add(d(e,b+40))),a=m(a.add(p[0]),33).mul(w),o=y(e,b,o[1].mul(w),r.add(p[0])),p=y(e,b+32,a.add(p[1]),s.add(d(e,b+16))),[a,r]=[r,a],g(g(o[0],p[0],w).add(h(s).mul(u)).add(a),g(o[1],p[1],w).add(r),w)}function x(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=s.xH(e)),(0,r.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function z(e){return"number"==typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=W(e+t*o,i,n,r)}return s}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=j(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>s,uZ:()=>a,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>h,k5:()=>p,Cq:()=>d,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>S,JZ:()=>I,EC:()=>N,bp:()=>T,WP:()=>C,rQ:()=>_,D5:()=>E,LP:()=>$,QB:()=>A,fU:()=>R,bT:()=>D,Ub:()=>F,HD:()=>O,jn:()=>M,hj:()=>z,D2:()=>L,mf:()=>B,jP:()=>P,e3:()=>V,GX:()=>U,p8:()=>G,wT:()=>j,l6:()=>H,Mu:()=>q,qy:()=>X,NE:()=>K,tI:()=>Y})},9111:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>h.Abs,Acos:()=>h.Acos,Acosh:()=>h.Acosh,AdadeltaOptimizer:()=>h.AdadeltaOptimizer,AdagradOptimizer:()=>h.AdagradOptimizer,AdamOptimizer:()=>h.AdamOptimizer,AdamaxOptimizer:()=>h.AdamaxOptimizer,Add:()=>h.Add,AddN:()=>h.AddN,All:()=>h.All,Any:()=>h.Any,ArgMax:()=>h.ArgMax,ArgMin:()=>h.ArgMin,Asin:()=>h.Asin,Asinh:()=>h.Asinh,Atan:()=>h.Atan,Atan2:()=>h.Atan2,Atanh:()=>h.Atanh,AvgPool:()=>h.AvgPool,AvgPool3D:()=>h.AvgPool3D,AvgPool3DGrad:()=>h.AvgPool3DGrad,AvgPoolGrad:()=>h.AvgPoolGrad,BatchMatMul:()=>h.BatchMatMul,BatchToSpaceND:()=>h.BatchToSpaceND,Bincount:()=>h.Bincount,BroadcastArgs:()=>h.BroadcastArgs,BroadcastTo:()=>h.BroadcastTo,Callback:()=>$h,CallbackList:()=>Mi,Cast:()=>h.Cast,Ceil:()=>h.Ceil,ClipByValue:()=>h.ClipByValue,Complex:()=>h.Complex,ComplexAbs:()=>h.ComplexAbs,Concat:()=>h.Concat,Conv2D:()=>h.Conv2D,Conv2DBackpropFilter:()=>h.Conv2DBackpropFilter,Conv2DBackpropInput:()=>h.Conv2DBackpropInput,Conv3D:()=>h.Conv3D,Conv3DBackpropFilterV2:()=>h.Conv3DBackpropFilterV2,Conv3DBackpropInputV2:()=>h.Conv3DBackpropInputV2,Cos:()=>h.Cos,Cosh:()=>h.Cosh,CropAndResize:()=>h.CropAndResize,Cumprod:()=>h.Cumprod,Cumsum:()=>h.Cumsum,CustomCallback:()=>Bi,DataStorage:()=>h.DataStorage,DenseBincount:()=>h.DenseBincount,DepthToSpace:()=>h.DepthToSpace,DepthwiseConv2dNative:()=>h.DepthwiseConv2dNative,DepthwiseConv2dNativeBackpropFilter:()=>h.DepthwiseConv2dNativeBackpropFilter,DepthwiseConv2dNativeBackpropInput:()=>h.DepthwiseConv2dNativeBackpropInput,Diag:()=>h.Diag,Dilation2D:()=>h.Dilation2D,Dilation2DBackpropFilter:()=>h.Dilation2DBackpropFilter,Dilation2DBackpropInput:()=>h.Dilation2DBackpropInput,ENV:()=>h.ENV,EarlyStopping:()=>Dh,Einsum:()=>h.Einsum,Elu:()=>h.Elu,EluGrad:()=>h.EluGrad,Environment:()=>h.Environment,Equal:()=>h.Equal,Erf:()=>h.Erf,Exp:()=>h.Exp,ExpandDims:()=>h.ExpandDims,Expm1:()=>h.Expm1,FFT:()=>h.FFT,Fill:()=>h.Fill,FlipLeftRight:()=>h.FlipLeftRight,Floor:()=>h.Floor,FloorDiv:()=>h.FloorDiv,FromPixels:()=>h.FromPixels,FusedBatchNorm:()=>h.FusedBatchNorm,FusedConv2D:()=>h.FusedConv2D,FusedDepthwiseConv2D:()=>h.FusedDepthwiseConv2D,GatherNd:()=>h.GatherNd,GatherV2:()=>h.GatherV2,GraphModel:()=>Mh.GraphModel,Greater:()=>h.Greater,GreaterEqual:()=>h.GreaterEqual,History:()=>Li,IFFT:()=>h.IFFT,Identity:()=>h.Identity,Imag:()=>h.Imag,InputSpec:()=>Va,IsFinite:()=>h.IsFinite,IsInf:()=>h.IsInf,IsNan:()=>h.IsNan,KernelBackend:()=>h.KernelBackend,LRN:()=>h.LRN,LRNGrad:()=>h.LRNGrad,LayerVariable:()=>La,LayersModel:()=>Lo,LeakyRelu:()=>h.LeakyRelu,Less:()=>h.Less,LessEqual:()=>h.LessEqual,LinSpace:()=>h.LinSpace,Log:()=>h.Log,Log1p:()=>h.Log1p,LogSoftmax:()=>h.LogSoftmax,LogicalAnd:()=>h.LogicalAnd,LogicalNot:()=>h.LogicalNot,LogicalOr:()=>h.LogicalOr,LogicalXor:()=>h.LogicalXor,LowerBound:()=>h.LowerBound,Max:()=>h.Max,MaxPool:()=>h.MaxPool,MaxPool3D:()=>h.MaxPool3D,MaxPool3DGrad:()=>h.MaxPool3DGrad,MaxPoolGrad:()=>h.MaxPoolGrad,MaxPoolWithArgmax:()=>h.MaxPoolWithArgmax,Maximum:()=>h.Maximum,Mean:()=>h.Mean,Min:()=>h.Min,Minimum:()=>h.Minimum,MirrorPad:()=>h.MirrorPad,Mod:()=>h.Mod,MomentumOptimizer:()=>h.MomentumOptimizer,Multinomial:()=>h.Multinomial,Multiply:()=>h.Multiply,Neg:()=>h.Neg,NonMaxSuppressionV3:()=>h.NonMaxSuppressionV3,NonMaxSuppressionV4:()=>h.NonMaxSuppressionV4,NonMaxSuppressionV5:()=>h.NonMaxSuppressionV5,NotEqual:()=>h.NotEqual,OP_SCOPE_SUFFIX:()=>h.OP_SCOPE_SUFFIX,OneHot:()=>h.OneHot,OnesLike:()=>h.OnesLike,Optimizer:()=>h.Optimizer,OptimizerConstructors:()=>h.OptimizerConstructors,Pack:()=>h.Pack,PadV2:()=>h.PadV2,Pool:()=>h.Pool,Pow:()=>h.Pow,Prelu:()=>h.Prelu,Prod:()=>h.Prod,RMSPropOptimizer:()=>h.RMSPropOptimizer,RNN:()=>Gu,Range:()=>h.Range,Rank:()=>h.Rank,Real:()=>h.Real,RealDiv:()=>h.RealDiv,Reciprocal:()=>h.Reciprocal,Reduction:()=>h.Reduction,Relu:()=>h.Relu,Relu6:()=>h.Relu6,Reshape:()=>h.Reshape,ResizeBilinear:()=>h.ResizeBilinear,ResizeBilinearGrad:()=>h.ResizeBilinearGrad,ResizeNearestNeighbor:()=>h.ResizeNearestNeighbor,ResizeNearestNeighborGrad:()=>h.ResizeNearestNeighborGrad,Reverse:()=>h.Reverse,RotateWithOffset:()=>h.RotateWithOffset,Round:()=>h.Round,Rsqrt:()=>h.Rsqrt,SGDOptimizer:()=>h.SGDOptimizer,ScatterNd:()=>h.ScatterNd,SearchSorted:()=>h.SearchSorted,Select:()=>h.Select,Selu:()=>h.Selu,Sequential:()=>Vo,Sigmoid:()=>h.Sigmoid,Sign:()=>h.Sign,Sin:()=>h.Sin,Sinh:()=>h.Sinh,Slice:()=>h.Slice,Softmax:()=>h.Softmax,Softplus:()=>h.Softplus,SpaceToBatchND:()=>h.SpaceToBatchND,SparseFillEmptyRows:()=>h.SparseFillEmptyRows,SparseReshape:()=>h.SparseReshape,SparseSegmentMean:()=>h.SparseSegmentMean,SparseSegmentSum:()=>h.SparseSegmentSum,SparseToDense:()=>h.SparseToDense,SplitV:()=>h.SplitV,Sqrt:()=>h.Sqrt,Square:()=>h.Square,SquaredDifference:()=>h.SquaredDifference,Step:()=>h.Step,StridedSlice:()=>h.StridedSlice,StringNGrams:()=>h.StringNGrams,StringSplit:()=>h.StringSplit,StringToHashBucketFast:()=>h.StringToHashBucketFast,Sub:()=>h.Sub,Sum:()=>h.Sum,SymbolicTensor:()=>Wa,Tan:()=>h.Tan,Tanh:()=>h.Tanh,Tensor:()=>h.Tensor,TensorBuffer:()=>h.TensorBuffer,Tile:()=>h.Tile,TopK:()=>h.TopK,Transform:()=>h.Transform,Transpose:()=>h.Transpose,Unique:()=>h.Unique,Unpack:()=>h.Unpack,UnsortedSegmentSum:()=>h.UnsortedSegmentSum,UpperBound:()=>h.UpperBound,Variable:()=>h.Variable,ZerosLike:()=>h.ZerosLike,_FusedMatMul:()=>h._FusedMatMul,abs:()=>h.abs,acos:()=>h.acos,acosh:()=>h.acosh,add:()=>h.add,addN:()=>h.addN,all:()=>h.all,any:()=>h.any,argMax:()=>h.argMax,argMin:()=>h.argMin,asin:()=>h.asin,asinh:()=>h.asinh,atan:()=>h.atan,atan2:()=>h.atan2,atanh:()=>h.atanh,avgPool:()=>h.avgPool,avgPool3d:()=>h.avgPool3d,backend:()=>h.backend,backend_util:()=>h.backend_util,basicLSTMCell:()=>h.basicLSTMCell,batchNorm:()=>h.batchNorm,batchNorm2d:()=>h.batchNorm2d,batchNorm3d:()=>h.batchNorm3d,batchNorm4d:()=>h.batchNorm4d,batchToSpaceND:()=>h.batchToSpaceND,bincount:()=>h.bincount,booleanMaskAsync:()=>h.booleanMaskAsync,broadcastArgs:()=>h.broadcastArgs,broadcastTo:()=>h.broadcastTo,broadcast_util:()=>h.broadcast_util,browser:()=>h.browser,buffer:()=>h.buffer,callbacks:()=>Fh,cast:()=>h.cast,ceil:()=>h.ceil,clipByValue:()=>h.clipByValue,clone:()=>h.clone,complex:()=>h.complex,concat:()=>h.concat,concat1d:()=>h.concat1d,concat2d:()=>h.concat2d,concat3d:()=>h.concat3d,concat4d:()=>h.concat4d,constraints:()=>r,conv1d:()=>h.conv1d,conv2d:()=>h.conv2d,conv2dTranspose:()=>h.conv2dTranspose,conv3d:()=>h.conv3d,conv3dTranspose:()=>h.conv3dTranspose,copyRegisteredKernels:()=>h.copyRegisteredKernels,cos:()=>h.cos,cosh:()=>h.cosh,cosineWindow:()=>h.cosineWindow,cumprod:()=>h.cumprod,cumsum:()=>h.cumsum,customGrad:()=>h.customGrad,data:()=>l,denseBincount:()=>h.denseBincount,deprecationWarn:()=>h.deprecationWarn,depthToSpace:()=>h.depthToSpace,depthwiseConv2d:()=>h.depthwiseConv2d,deregisterOp:()=>Mh.deregisterOp,device_util:()=>h.device_util,diag:()=>h.diag,dilation2d:()=>h.dilation2d,disableDeprecationWarnings:()=>h.disableDeprecationWarnings,dispose:()=>h.dispose,disposeVariables:()=>h.disposeVariables,div:()=>h.div,divNoNan:()=>h.divNoNan,dot:()=>h.dot,dropout:()=>h.dropout,einsum:()=>h.einsum,elu:()=>h.elu,enableDebugMode:()=>h.enableDebugMode,enableProdMode:()=>h.enableProdMode,enclosingPowerOfTwo:()=>h.enclosingPowerOfTwo,engine:()=>h.engine,env:()=>h.env,equal:()=>h.equal,erf:()=>h.erf,euclideanNorm:()=>h.euclideanNorm,exp:()=>h.exp,expandDims:()=>h.expandDims,expm1:()=>h.expm1,eye:()=>h.eye,fft:()=>h.fft,fill:()=>h.fill,findBackend:()=>h.findBackend,findBackendFactory:()=>h.findBackendFactory,floor:()=>h.floor,floorDiv:()=>h.floorDiv,fused:()=>h.fused,gather:()=>h.gather,gatherND:()=>h.gatherND,gather_util:()=>h.gather_util,getBackend:()=>h.getBackend,getGradient:()=>h.getGradient,getKernel:()=>h.getKernel,getKernelsForBackend:()=>h.getKernelsForBackend,grad:()=>h.grad,grads:()=>h.grads,greater:()=>h.greater,greaterEqual:()=>h.greaterEqual,ifft:()=>h.ifft,imag:()=>h.imag,image:()=>h.image,inTopKAsync:()=>h.inTopKAsync,initializers:()=>s,input:()=>jo,io:()=>h.io,irfft:()=>h.irfft,isFinite:()=>h.isFinite,isInf:()=>h.isInf,isNaN:()=>h.isNaN,keep:()=>h.keep,kernel_impls:()=>h.kernel_impls,layers:()=>a,leakyRelu:()=>h.leakyRelu,less:()=>h.less,lessEqual:()=>h.lessEqual,linalg:()=>h.linalg,linspace:()=>h.linspace,loadGraphModel:()=>Mh.loadGraphModel,loadGraphModelSync:()=>Mh.loadGraphModelSync,loadLayersModel:()=>Go,localResponseNormalization:()=>h.localResponseNormalization,log:()=>h.log,log1p:()=>h.log1p,logSigmoid:()=>h.logSigmoid,logSoftmax:()=>h.logSoftmax,logSumExp:()=>h.logSumExp,logicalAnd:()=>h.logicalAnd,logicalNot:()=>h.logicalNot,logicalOr:()=>h.logicalOr,logicalXor:()=>h.logicalXor,losses:()=>h.losses,lowerBound:()=>h.lowerBound,matMul:()=>h.matMul,math:()=>h.math,max:()=>h.max,maxPool:()=>h.maxPool,maxPool3d:()=>h.maxPool3d,maxPoolWithArgmax:()=>h.maxPoolWithArgmax,maximum:()=>h.maximum,mean:()=>h.mean,memory:()=>h.memory,meshgrid:()=>h.meshgrid,metrics:()=>i,min:()=>h.min,minimum:()=>h.minimum,mirrorPad:()=>h.mirrorPad,mod:()=>h.mod,model:()=>Wo,models:()=>o,moments:()=>h.moments,movingAverage:()=>h.movingAverage,mul:()=>h.mul,multiRNNCell:()=>h.multiRNNCell,multinomial:()=>h.multinomial,neg:()=>h.neg,nextFrame:()=>h.nextFrame,norm:()=>h.norm,notEqual:()=>h.notEqual,oneHot:()=>h.oneHot,ones:()=>h.ones,onesLike:()=>h.onesLike,op:()=>h.op,outerProduct:()=>h.outerProduct,pad:()=>h.pad,pad1d:()=>h.pad1d,pad2d:()=>h.pad2d,pad3d:()=>h.pad3d,pad4d:()=>h.pad4d,pool:()=>h.pool,pow:()=>h.pow,prelu:()=>h.prelu,print:()=>h.print,prod:()=>h.prod,profile:()=>h.profile,rand:()=>h.rand,randomGamma:()=>h.randomGamma,randomNormal:()=>h.randomNormal,randomStandardNormal:()=>h.randomStandardNormal,randomUniform:()=>h.randomUniform,range:()=>h.range,ready:()=>h.ready,real:()=>h.real,reciprocal:()=>h.reciprocal,registerBackend:()=>h.registerBackend,registerCallbackConstructor:()=>Ho,registerGradient:()=>h.registerGradient,registerKernel:()=>h.registerKernel,registerOp:()=>Mh.registerOp,regularizers:()=>u,relu:()=>h.relu,relu6:()=>h.relu6,removeBackend:()=>h.removeBackend,reshape:()=>h.reshape,reverse:()=>h.reverse,reverse1d:()=>h.reverse1d,reverse2d:()=>h.reverse2d,reverse3d:()=>h.reverse3d,reverse4d:()=>h.reverse4d,rfft:()=>h.rfft,round:()=>h.round,rsqrt:()=>h.rsqrt,scalar:()=>h.scalar,scatterND:()=>h.scatterND,scatter_util:()=>h.scatter_util,searchSorted:()=>h.searchSorted,selu:()=>h.selu,separableConv2d:()=>h.separableConv2d,sequential:()=>Uo,serialization:()=>h.serialization,setBackend:()=>h.setBackend,setPlatform:()=>h.setPlatform,setdiff1dAsync:()=>h.setdiff1dAsync,sigmoid:()=>h.sigmoid,sign:()=>h.sign,signal:()=>h.signal,sin:()=>h.sin,sinh:()=>h.sinh,slice:()=>h.slice,slice1d:()=>h.slice1d,slice2d:()=>h.slice2d,slice3d:()=>h.slice3d,slice4d:()=>h.slice4d,slice_util:()=>h.slice_util,softmax:()=>h.softmax,softplus:()=>h.softplus,spaceToBatchND:()=>h.spaceToBatchND,sparse:()=>h.sparse,sparseToDense:()=>h.sparseToDense,spectral:()=>h.spectral,split:()=>h.split,sqrt:()=>h.sqrt,square:()=>h.square,squaredDifference:()=>h.squaredDifference,squeeze:()=>h.squeeze,stack:()=>h.stack,step:()=>h.step,stridedSlice:()=>h.stridedSlice,string:()=>h.string,sub:()=>h.sub,sum:()=>h.sum,sumOutType:()=>h.sumOutType,tan:()=>h.tan,tanh:()=>h.tanh,tensor:()=>h.tensor,tensor1d:()=>h.tensor1d,tensor2d:()=>h.tensor2d,tensor3d:()=>h.tensor3d,tensor4d:()=>h.tensor4d,tensor5d:()=>h.tensor5d,tensor6d:()=>h.tensor6d,tensor_util:()=>h.tensor_util,test_util:()=>h.test_util,tidy:()=>h.tidy,tile:()=>h.tile,time:()=>h.time,topk:()=>h.topk,train:()=>h.train,transpose:()=>h.transpose,truncatedNormal:()=>h.truncatedNormal,unique:()=>h.unique,unregisterGradient:()=>h.unregisterGradient,unregisterKernel:()=>h.unregisterKernel,unsortedSegmentSum:()=>h.unsortedSegmentSum,unstack:()=>h.unstack,upcastType:()=>h.upcastType,upperBound:()=>h.upperBound,util:()=>h.util,valueAndGrad:()=>h.valueAndGrad,valueAndGrads:()=>h.valueAndGrads,variable:()=>h.variable,variableGrads:()=>h.variableGrads,version:()=>JC,version_converter:()=>Mh.version_converter,version_core:()=>h.version_core,version_layers:()=>vo,where:()=>h.where,whereAsync:()=>h.whereAsync,zeros:()=>h.zeros,zerosLike:()=>h.zerosLike});var r={};n.r(r),n.d(r,{maxNorm:()=>di,minMaxNorm:()=>gi,nonNeg:()=>mi,unitNorm:()=>fi});var s={};n.r(s),n.d(s,{constant:()=>xi,glorotNormal:()=>Ti,glorotUniform:()=>Ni,heNormal:()=>Ci,heUniform:()=>_i,identity:()=>Si,leCunNormal:()=>Ei,leCunUniform:()=>$i,ones:()=>bi,orthogonal:()=>Ai,randomNormal:()=>wi,randomUniform:()=>vi,truncatedNormal:()=>ki,varianceScaling:()=>Ii,zeros:()=>yi});var a={};n.r(a),n.d(a,{Layer:()=>Ha,RNN:()=>Gu,RNNCell:()=>ju,activation:()=>hc,add:()=>vc,alphaDropout:()=>ch,average:()=>wc,averagePooling1d:()=>$c,averagePooling2d:()=>Dc,averagePooling3d:()=>Mc,avgPool1d:()=>Ac,avgPool2d:()=>Fc,avgPool3d:()=>zc,avgPooling1d:()=>Rc,avgPooling2d:()=>Oc,avgPooling3d:()=>Lc,batchNormalization:()=>Cc,bidirectional:()=>nh,concatenate:()=>kc,conv1d:()=>nc,conv2d:()=>rc,conv2dTranspose:()=>sc,conv3d:()=>ac,conv3dTranspose:()=>ic,convLstm2d:()=>Qc,convLstm2dCell:()=>Jc,cropping2D:()=>uc,dense:()=>pc,depthwiseConv2d:()=>cc,dot:()=>Tc,dropout:()=>dc,elu:()=>Yl,embedding:()=>xc,flatten:()=>mc,gaussianDropout:()=>lh,gaussianNoise:()=>uh,globalAveragePooling1d:()=>Bc,globalAveragePooling2d:()=>Pc,globalMaxPool1d:()=>sh,globalMaxPool2d:()=>ah,globalMaxPooling1d:()=>Vc,globalMaxPooling2d:()=>Wc,gru:()=>Hc,gruCell:()=>qc,input:()=>jo,inputLayer:()=>Kl,layerNormalization:()=>_c,leakyReLU:()=>Ql,lstm:()=>Xc,lstmCell:()=>Kc,masking:()=>hh,maxPool1d:()=>ih,maxPool2d:()=>oh,maxPooling1d:()=>Uc,maxPooling2d:()=>Gc,maxPooling3d:()=>jc,maximum:()=>Sc,minimum:()=>Ic,multiply:()=>Nc,permute:()=>bc,prelu:()=>Jl,reLU:()=>Zl,repeatVector:()=>gc,reshape:()=>yc,rnn:()=>eh,separableConv2d:()=>oc,simpleRNN:()=>Yc,simpleRNNCell:()=>Zc,softmax:()=>ec,spatialDropout1d:()=>fc,stackedRNNCells:()=>th,thresholdedReLU:()=>tc,timeDistributed:()=>rh,upSampling2d:()=>lc,zeroPadding2d:()=>Ec});var i={};n.r(i),n.d(i,{MAPE:()=>kh,MSE:()=>Nh,binaryAccuracy:()=>ph,binaryCrossentropy:()=>dh,categoricalAccuracy:()=>mh,categoricalCrossentropy:()=>gh,cosineProximity:()=>xh,mape:()=>Sh,meanAbsoluteError:()=>vh,meanAbsolutePercentageError:()=>wh,meanSquaredError:()=>Ih,mse:()=>Th,precision:()=>yh,recall:()=>bh,sparseCategoricalAccuracy:()=>fh});var o={};n.r(o),n.d(o,{modelFromJSON:()=>Po});var u={};n.r(u),n.d(u,{l1:()=>_h,l1l2:()=>Ch,l2:()=>Eh});var l={};n.r(l),n.d(l,{CSVDataset:()=>Ip,Dataset:()=>pp,FileDataSource:()=>Mp,TextLineDataset:()=>yp,URLDataSource:()=>zp,array:()=>fp,csv:()=>Lp,func:()=>Bp,generator:()=>Pp,microphone:()=>Wp,version_data:()=>Up,webcam:()=>Vp,zip:()=>mp});var c={};n.r(c),n.d(c,{addImpl:()=>Sd,bincountImpl:()=>gf,bincountReduceImpl:()=>yf,ceilImpl:()=>vf,concatImpl:()=>Tf,equalImpl:()=>lm,expImpl:()=>vm,expm1Impl:()=>Nm,floorImpl:()=>Wm,gatherNdImpl:()=>Ym,gatherV2Impl:()=>Qm,greaterEqualImpl:()=>rg,greaterImpl:()=>eg,lessEqualImpl:()=>gg,lessImpl:()=>dg,linSpaceImpl:()=>xg,logImpl:()=>wg,maxImpl:()=>Mg,maximumImpl:()=>Bg,minimumImpl:()=>Kg,multiplyImpl:()=>tm,negImpl:()=>ay,notEqualImpl:()=>dy,prodImpl:()=>Ty,rangeImpl:()=>_y,rsqrtImpl:()=>Py,scatterImpl:()=>Uy,sigmoidImpl:()=>cd,simpleAbsImpl:()=>Rd,sliceImpl:()=>pf,sparseFillEmptyRowsImpl:()=>lb,sparseReshapeImpl:()=>hb,sparseSegmentReductionImpl:()=>db,sqrtImpl:()=>bb,squaredDifferenceImpl:()=>kb,stridedSliceImpl:()=>Cb,stringNGramsImpl:()=>$b,stringSplitImpl:()=>Db,stringToHashBucketFastImpl:()=>Ob,subImpl:()=>Am,tileImpl:()=>Vb,topKImpl:()=>jb,transposeImpl:()=>Bd,uniqueImpl:()=>Qb});var h=n(1740),p=n(9121),d=n(2271),f=n(4841),m=n(1901);const g={kernelName:p.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,m.N)((0,d.p)(n,"float32"),-1))}}};var y=n(1274),b=n(7370),x=n(9494),v=n(3261),w=n(248),k=n(827);const S={kernelName:p.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,w.h)((0,d.p)(n,"float32")),r=(0,v._)((0,k.l)((0,x.i)(1),t));return(0,b.W)((0,y.h)(e,r))}}}},I={kernelName:p.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,v._)((0,k.l)((0,w.h)((0,d.p)(n,"float32")),1));return(0,y.h)(e,t)}}}};var N=n(2200),T=n(4968),C=n(5475);const _={kernelName:p.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=N.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=N.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,C.S)(t,r)),(0,T.X)(t,n.shape)},b:()=>{let t=e;const n=N.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,C.S)(t,n)),(0,T.X)(t,r.shape)}}}},E={kernelName:p.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var $=n(6577);const A={kernelName:p.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,$.P)(n)}}},R={kernelName:p.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,$.P)(n)}}},D={kernelName:p.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,v._)((0,k.l)((0,x.i)(1),(0,w.h)((0,d.p)(n,"float32")))))}}};var F=n(6407);const O={kernelName:p.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,v._)((0,F.I)((0,x.i)(1),(0,w.h)((0,d.p)(n,"float32"))));return(0,y.h)(e,t)}}}},M={kernelName:p.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,N.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,F.I)((0,w.h)(n),(0,w.h)(r));let a=(0,f.d)(e,(0,y.h)(r,t));const i=(0,N.getReductionAxes)(n.shape,s);return i.length>0&&(a=(0,C.S)(a,i)),(0,T.X)(a,n.shape)},b:()=>{const t=(0,F.I)((0,w.h)(n),(0,w.h)(r));let a=(0,b.W)((0,f.d)(e,(0,y.h)(n,t)));const i=(0,N.getReductionAxes)(r.shape,s);return i.length>0&&(a=(0,C.S)(a,i)),(0,T.X)(a,r.shape)}}}},z={kernelName:p.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,F.I)((0,w.h)((0,d.p)(n,"float32")),1))}}},L={kernelName:p.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,k.l)((0,x.i)(1),(0,w.h)((0,d.p)(n,"float32"))))}}};var B=n(7097),P=n(3740),V=n(569),W=n(2582),U=n(2668);const G=(0,U.op)({avgPool3dGrad_:function(e,t,n,r,s,a){const i=(0,P._1)(e,"dy","avgPool3dGrad"),o=(0,P._1)(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),V.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),V.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),(0,W.m)("avgPool3dGrad",s,a);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},f=B.BV.runKernel(p.IM,h,d);return c?(0,T.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),j={kernelName:p._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>G(e,r,s,a,i,o)}}},H=(0,U.op)({avgPoolGrad_:function(e,t,n,r,s){const a=(0,P._1)(e,"dy","avgPoolGrad"),i=(0,P._1)(t,"input","avgPoolGrad");V.hu(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,T.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),V.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),V.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=B.BV.runKernel(p.RO,c,h);return l?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),q={kernelName:p.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>H(e,r,s,a,i)}}};var X=n(8687);const K={kernelName:p.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,X.O)(e,s,!1,!1),b:()=>(0,X.O)(e,r,!0,!1)}:a&&!i?{a:()=>(0,X.O)(s,e,!1,!0),b:()=>(0,X.O)(r,e,!1,!1)}:{a:()=>(0,X.O)(s,e,!0,!0),b:()=>(0,X.O)(e,r,!0,!0)}:{a:()=>(0,X.O)(e,s,!1,!0),b:()=>(0,X.O)(r,e,!0,!1)}}};var Y=n(7918);const Z={kernelName:p.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>(0,Y.f)(e,r,s)}}},Q={kernelName:p.Ly,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,C.S)(e,o,!0)}}},J={kernelName:p.RF,gradFunc:e=>({x:()=>e.clone()})},ee={kernelName:p.gJ,gradFunc:e=>({x:()=>(0,$.P)(e)})};var te=n(7630),ne=n(624),re=n(2856),se=n(5912);const ae={kernelName:p.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,se.a)((0,re.H)((0,te.b)(r,s),(0,ne.z)(r,a)),e,(0,$.P)(e))}}},ie={kernelName:p.yj,inputsToSave:["x"],gradFunc:g.gradFunc};var oe=n(8644);const ue={kernelName:p.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,V.EC)(s,t[0].shape)[0],i=r.map((e=>e[a]));return(0,oe.V)(e,i,a).map((e=>()=>e))}};var le=n(6013),ce=n(9832);const he={kernelName:p.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return V.hu(W.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,ce._)(r.shape,e,s,i,o,u),filter:()=>(0,le.p)(r,e,s.shape,i,o,u)}}};var pe=n(4794);const de={kernelName:p.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,pe.T)(e,s,a,i,o,1,u),filter:()=>(0,le.p)(e,r,s.shape,a,i,o,u)}}},fe=(0,U.op)({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=(0,T.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),V.hu(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),V.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),V.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),V.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),V.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return B.BV.runKernel(p.o2,o,u)}});var me=n(7594);const ge={kernelName:p.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;V.hu((0,W.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,me._)(i.shape,e,o,s,a),filter:()=>fe(i,e,o.shape,s,a)}}};var ye=n(9331);const be={kernelName:p.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)((0,b.W)((0,ye.O)((0,d.p)(n,"float32"))),e)}}};var xe=n(3254);const ve={kernelName:p.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)((0,xe.R)((0,d.p)(n,"float32")),e)}}};var we=n(3591),ke=n(7405),Se=n(9065);const Ie={kernelName:p.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,we.Q3)([s],r.rank);let n=(0,ke.z)(e,s,a,!i);return null!=t&&(n=(0,Se.p)(n,t)),n}}}};var Ne=n(8098),Te=n(4375);const Ce={kernelName:p.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;V.hu(W.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return V.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),V.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),V.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),V.hu(W.jT(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),W.m("depthwiseConv2d",a,i),{x:()=>(0,Te.v)(u.shape,e,l,s,a,o,i),filter:()=>(0,Ne.z)(u,e,l.shape,s,a,o,i)}}},_e={kernelName:p.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>B.BV.runKernel(p.ek,a,n),filter:()=>B.BV.runKernel(p.Vn,i,n)}}},Ee={kernelName:p.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>B.BV.runKernel(p.HE,r)}}};var $e=n(4842);const Ae={kernelName:p.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,f.d)((0,$e.Q)((0,b.W)((0,w.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,f.d)(e,r)}}},Re={kernelName:p.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,n)}}},De={kernelName:p.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,T.X)(e,n.shape)}}},Fe={kernelName:p.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,$e.Q)(n))}}},Oe={kernelName:p.OR,gradFunc:e=>({x:()=>(0,$.P)(e)})},Me={kernelName:p.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,N.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,y.h)(e,(0,d.p)(r,"float32")),a=(0,N.getReductionAxes)(n.shape,s);return a.length>0?(0,T.X)((0,C.S)(t,a),n.shape):t},b:()=>{let t=(0,f.d)(e,(0,d.p)(n,"float32"));const a=(0,N.getReductionAxes)(r.shape,s);a.length>0&&(t=(0,T.X)((0,C.S)(t,a),r.shape));const i=(0,w.h)(r);return(0,b.W)((0,y.h)(t,(0,d.p)(i,"float32")))}}}};var ze=n(2634),Le=n(7501);const Be={kernelName:p.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?(0,x.i)(1):o,l=(0,N.getReductionAxes)(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=(0,k.l)(s,a),p=(0,f.d)(e,u),d=(0,ze.b)((0,F.I)(i,(0,x.i)(r))),m=(0,f.d)((0,f.d)((0,f.d)(d,d),d),(0,x.i)(-.5));return{x:()=>1===a.rank?(0,T.X)((0,f.d)((0,f.d)(e,(0,Le.G)((0,T.X)(d,[1,1,1,a.shape[0]]),c)),u),s.shape):(0,T.X)((0,f.d)((0,f.d)(e,d),u),s.shape),mean:()=>{let e=(0,f.d)((0,f.d)(d,(0,x.i)(-1)),p);return 1===a.rank&&(e=(0,C.S)(e,l)),(0,T.X)(e,a.shape)},variance:()=>{let e=(0,f.d)((0,f.d)(m,h),p);return 1===a.rank&&(e=(0,C.S)(e,l)),(0,T.X)(e,a.shape)},scale:()=>{const t=(0,f.d)(h,d);let n=(0,f.d)(e,t);return 1===a.rank&&(n=(0,C.S)(n,l)),(0,T.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,C.S)(t,l)),(0,T.X)(t,a.shape)}}}};var Pe=n(8749);const Ve={kernelName:p.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=(0,V.EC)(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=We(0,u),p=We(u+1,u+1+c),d=Ue([o,[n],l]),f=(0,T.X)(e,d),m=(0,T.X)(s,[n]),g=Ue([[u],h,p]),y=(0,Se.p)(f,g);let b=(0,Pe.p)(y,m,r.shape[i]);const x=(0,we.LJ)(g);return b=(0,Se.p)(b,x),b},indices:()=>s}}};function We(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ue(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ge={kernelName:p.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,$.P)(n),b:()=>(0,$.P)(r)}}},je={kernelName:p.iJ,gradFunc:e=>({x:()=>(0,d.p)(e,"float32")})},He={kernelName:p.av,gradFunc:e=>({x:()=>(0,$.P)(e)})},qe={kernelName:p.iW,gradFunc:e=>({x:()=>(0,$.P)(e)})},Xe={kernelName:p.r7,gradFunc:e=>({x:()=>(0,$.P)(e)})};var Ke=n(636);const Ye={kernelName:p.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,Ke.p)(r,0);return{x:()=>(0,se.a)(a,e,(0,f.d)(e,s))}}},Ze={kernelName:p.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,F.I)(n,1))}}},Qe={kernelName:p.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,d.p)(n,"float32"))}}},Je={kernelName:p.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,$e.Q)(r);return(0,k.l)(e,(0,f.d)((0,C.S)(e,s,!0),t))}}}},et=(0,U.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return B.BV.runKernel(p.Hh,o,u)}}),tt={kernelName:p.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>et(r,s,e,a,i,o,u)}}};var nt=n(6477);function rt(e,t,n,r){return t.rank<n.rank&&(t=(0,T.X)(t,we.rv(t.shape,r))),e.rank<n.rank&&(e=(0,T.X)(e,we.rv(e.shape,r))),{x:()=>(0,f.d)(e,(0,d.p)((0,nt.D)(n,t),e.dtype))}}const st={kernelName:p.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=rt(e,t[1],a,V.EC(s,a.shape));return{x:()=>i.x()}}};var at=n(6573);const it={kernelName:p.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,f.d)(e,(0,d.p)((0,te.b)(n,r),"float32")),b:()=>(0,f.d)(e,(0,d.p)((0,at.d)(n,r),"float32"))}}},ot=(0,U.op)({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=(0,P._1)(e,"dy","maxPool3dGrad"),u=(0,P._1)(t,"input","maxPool3dGrad"),l=(0,P._1)(n,"output","maxPool3dGrad");let c=o,h=u,d=l,f=!1;4===u.rank&&(f=!0,c=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),V.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),V.hu(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),V.hu(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),(0,W.m)("maxPool3dGrad",a,i);const m={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:a,dimRoundingMode:i},y=B.BV.runKernel(p.OU,m,g);return f?(0,T.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ut={kernelName:p.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>ot(e,r,s,a,i,o,u)}}},lt=(0,U.op)({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=(0,P._1)(e,"dy","maxPoolGrad"),u=(0,P._1)(t,"input","maxPoolGrad"),l=(0,P._1)(n,"output","maxPoolGrad");V.hu(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),V.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),V.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),W.m("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return B.BV.runKernel(p.OV,c,h)}}),ct={kernelName:p.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>lt(e,r,s,a,i,o)}}};var ht=n(4917);const pt={kernelName:p.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=V.EC(s,r.shape),i=(0,we.kz)(r.shape,a)[1],o=V.NA(i);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,T.X)(e,t);return(0,y.h)((0,f.d)(n,(0,ht.i)(r.shape,"float32")),o)}}}},dt={kernelName:p.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=rt(e,i,a,V.EC(s,a.shape));return{x:()=>o.x()}}},ft={kernelName:p.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,f.d)(e,(0,d.p)((0,ne.z)(n,r),"float32")),b:()=>(0,f.d)(e,(0,d.p)((0,Ke.p)(n,r),"float32"))}}};var mt=n(2676);const gt={kernelName:p.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,mt.t)(e,a,r.shape)}}};var yt=n(6943);const bt={kernelName:p.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,N.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,N.getReductionAxes)(n.shape,s);return t.length>0?(0,T.X)((0,C.S)(e,t),n.shape):e},b:()=>{const t=(0,f.d)(e,(0,b.W)((0,yt.G)((0,y.h)(n,r)))),a=(0,N.getReductionAxes)(r.shape,s);return a.length>0?(0,T.X)((0,C.S)(t,a),r.shape):t}}}},xt={kernelName:p.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,N.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,f.d)(e,(0,d.p)(r,"float32")),a=(0,N.getReductionAxes)(n.shape,s);return a.length>0?(0,T.X)((0,C.S)(t,a),n.shape):t},b:()=>{const t=(0,f.d)(e,(0,d.p)(n,"float32")),a=(0,N.getReductionAxes)(r.shape,s);return a.length>0?(0,T.X)((0,C.S)(t,a),r.shape):t}}}},vt={kernelName:p.ku,gradFunc:e=>({x:()=>(0,b.W)(e)})};var wt=n(723);const kt={kernelName:p.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,wt.l)(n.shape,"float32")}}},St={kernelName:p.qW,gradFunc:e=>({x:()=>(0,$.P)(e)})};var It=n(4136);const Nt={kernelName:p.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,It.H)(e,r).map((e=>()=>e))}},Tt={kernelName:p.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,mt.t)(e,a,r.shape)}}};var Ct=n(2597),_t=n(3453);const Et={kernelName:p.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=N.assertAndGetBroadcastShape(a.shape,i.shape);return{a:()=>{const t=(0,d.p)(i,"float32");let n=(0,f.d)(e,(0,f.d)(t,(0,_t.s)(a,(0,k.l)(t,(0,x.i)(1)))));const r=N.getReductionAxes(a.shape,o);return r.length>0&&(n=(0,C.S)(n,r)),(0,T.X)(n,a.shape)},b:()=>{const t=(0,Ke.p)(a,0),n=(0,se.a)(t,(0,Ct.c)(a),(0,$.P)(a));let r=(0,f.d)(e,(0,f.d)(s,n));const u=N.getReductionAxes(i.shape,o);return u.length>0&&(r=(0,C.S)(r,u)),(0,T.X)(r,i.shape)}}}},$t={kernelName:p.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,Ke.p)(n,0);return{x:()=>(0,se.a)(s,e,(0,f.d)(e,r)),alpha:()=>{let t=(0,se.a)(s,(0,$.P)(e),(0,f.d)(e,n));const a=(0,N.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,C.S)(t,a)),(0,T.X)(t,r.shape)}}}};var At=n(9640);const Rt={kernelName:p.Dl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=we.Q3(n,r);let i=e;null!=a&&(i=(0,Se.p)(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,T.X)(t,r),a=(0,At.$)(e,n,!0,!1),i=(0,At.$)(e,n,!0,!0),o=(0,f.d)(a,i);return(0,f.d)(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=we.LJ(a);l=(0,Se.p)(l,e)}return l}(r,e,a)}}},Dt={kernelName:p.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=N.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,y.h)(e,(0,d.p)(r,"float32")),a=N.getReductionAxes(n.shape,s);return a.length>0?(0,T.X)((0,C.S)(t,a),n.shape):t},b:()=>{let t=(0,f.d)(e,(0,d.p)(n,"float32"));const a=N.getReductionAxes(r.shape,s);a.length>0&&(t=(0,T.X)((0,C.S)(t,a),r.shape));const i=(0,w.h)(r);return(0,b.W)((0,y.h)(t,(0,d.p)(i,"float32")))}}}},Ft={kernelName:p.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,b.W)((0,w.h)(n)))}}},Ot={kernelName:p.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,f.d)((0,ne.z)(n,6),(0,m.N)(n));return{x:()=>(0,f.d)(e,(0,d.p)(r,"float32"))}}},Mt={kernelName:p.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,d.p)((0,m.N)(n),"float32"))}}},zt={kernelName:p.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.X)(e,n.shape)}}},Lt={kernelName:p._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>B.BV.runKernel(p.zb,s,n)}}},Bt={kernelName:p.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>B.BV.runKernel(p.Hm,s,n)}}};var Pt=n(7486);const Vt={kernelName:p.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,V.EC)(r,e.shape);return{x:()=>(0,Pt.G)(e,s)}}},Wt={kernelName:p.e0,gradFunc:e=>({x:()=>(0,$.P)(e)})},Ut={kernelName:p.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,b.W)((0,y.h)(e,(0,f.d)((0,_t.s)(n,1.5),2)))}}};var Gt=n(8651);const jt={kernelName:p.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,d.p)((0,$.P)(n),"float32"),t:()=>(0,f.d)(e,(0,d.p)(n,e.dtype)),e:()=>(0,f.d)(e,(0,d.p)((0,Gt.h)(n),e.dtype))}}};var Ht=n(3179);const qt={kernelName:p.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ke.p)(n,(0,x.i)(0)),r=(0,x.i)(Ht.y),s=(0,x.i)(Ht.$),a=(0,f.d)(e,s),i=(0,f.d)((0,f.d)(e,r),(0,$e.Q)((0,d.p)(n,"float32")));return(0,se.a)(t,a,i)}}}},Xt={kernelName:p.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,f.d)(n,(0,k.l)((0,x.i)(1),n)))}}},Kt={kernelName:p.i5,gradFunc:e=>({x:()=>(0,$.P)(e)})};var Yt=n(173);const Zt={kernelName:p.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)((0,Yt.m)((0,d.p)(n,"float32")),e)}}};var Qt=n(2699);const Jt={kernelName:p.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)((0,Qt.f)((0,d.p)(n,"float32")),e)}}};var en=n(9682),tn=n(7650);const nn={kernelName:p.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=(0,tn.parseSliceParams)(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,en.v)(e,l)}}},rn={kernelName:p.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,f.d)(e,r);return{logits:()=>(0,k.l)(a,(0,f.d)((0,C.S)(a,[s],!0),r))}}};var sn=n(625);const an={kernelName:p.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,sn.X)(n))}}};var on=n(8441);const un={kernelName:p.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>(0,on.E)(e,r,s)}}};var ln=n(6884);const cn={kernelName:p.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,ln.z)(e,r)}}},hn={kernelName:p.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,f.d)((0,v._)((0,d.p)(n,"float32")),2))}}},pn={kernelName:p.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)(e,(0,f.d)((0,d.p)(n,"float32"),2))}}},dn={kernelName:p._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,x.i)(2);return{a:()=>(0,f.d)(e,(0,f.d)(s,(0,k.l)(n,r))),b:()=>(0,f.d)(e,(0,f.d)(s,(0,k.l)(r,n)))}}},fn={kernelName:p.h8,gradFunc:e=>({x:()=>(0,$.P)(e)})},mn={kernelName:p.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=N.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=N.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,C.S)(t,r)),(0,T.X)(t,n.shape)},b:()=>{let t=e;const n=N.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,C.S)(t,n)),(0,T.X)((0,b.W)(t),r.shape)}}}},gn={kernelName:p.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,V.EC)(a,r.shape).forEach((e=>{s[e]=1}));const i=(0,T.X)(e,s),o=(0,f.d)(i,(0,ht.i)(r.shape,"float32"));return{x:()=>o}}},yn={kernelName:p.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.h)(e,(0,w.h)((0,Yt.m)(n)))}}},bn={kernelName:p.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.d)((0,k.l)((0,x.i)(1),(0,w.h)(n)),e)}}},xn={kernelName:p.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,$.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,F.I)(t,(0,mt.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,F.I)(t,(0,mt.t)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=(0,F.I)(t,(0,mt.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=(0,F.I)(t,(0,mt.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},vn={kernelName:p.G3,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=we.LJ(s);return{x:()=>(0,Se.p)(e,a)}}};var wn=n(2991);const kn={kernelName:p.To,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,wn.k)(e,s)}}};var Sn=n(1300),In=n(4926),Nn=n(632);const Tn={kernelName:p.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Nn.g)(t,(0,$.P)(t)),r=(0,In.I)(e,n);let s=(0,te.b)(t,(0,x.i)(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=(0,Sn.d)(s,e+1);s=(0,re.H)(s,(0,ht.i)(r.shape,"bool"));const i=(0,$.P)(r);return(0,se.a)(s,r,i)}(e,n)}}},Cn={kernelName:p.Ru,gradFunc:e=>({x:()=>(0,$.P)(e)})};var _n=n(6151);const En=[g,S,I,_,E,A,R,D,O,M,z,L,j,q,K,Z,Q,J,ee,ae,ie,ue,de,he,ge,be,ve,Ie,Ce,_e,Dt,Ee,Ae,Re,De,Fe,Me,Oe,Be,Ve,Ge,je,He,qe,Xe,Ye,Ze,Qe,Je,tt,st,st,it,ut,ct,pt,dt,ft,gt,bt,xt,vt,kt,St,Nt,Tt,Tt,Et,$t,Rt,Ft,Ot,Mt,zt,Lt,Bt,Vt,Wt,Ut,jt,qt,Xt,Kt,Zt,Jt,nn,rn,an,un,un,cn,cn,hn,dn,pn,fn,mn,gn,yn,bn,xn,vn,kn,Tn,Cn];for(const e of En)(0,_n.Li)(e);var $n=n(6235),An=n(4077);(0,An.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,$n.W)(this)};var Rn=n(7839);(0,An.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Rn.K)(this)};var Dn=n(1470);(0,An.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Dn._)(this)},(0,An.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,F.I)(this,e)};var Fn=n(781);(0,An.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Fn.$)(this,e,t)};var On=n(2998);(0,An.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,On.Y)(this,e,t)};var Mn=n(47);(0,An.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Mn.N)(this,e)};var zn=n(7394);(0,An.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,zn.v)(this,e)},(0,An.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,V.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,T.X)(this,[])},(0,An.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,d.p)(this,e)},(0,An.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,T.X)(this,[this.size])},(0,An.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,T.X)(this,[e,t])},(0,An.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,T.X)(this,[e,t,n])},(0,An.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,T.X)(this,[e,t,n,r])},(0,An.t3)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,T.X)(this,[e,t,n,r,s])};var Ln=n(2421);(0,An.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Ln.Z)(this)};var Bn=n(1891);(0,An.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Bn.V)(this)};var Pn=n(7037);(0,An.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,Pn.z)(this)};var Vn=n(9812);(0,An.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Vn.f)(this,e)};var Wn=n(369);(0,An.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Wn.C)(this)};var Un=n(5176);(0,An.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Un.w)(this,e,t,n,r)},(0,An.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,on.E)(this,e,t)};var Gn=n(7505);(0,An.t3)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Gn.t)(this,e,t,n,r,s)};var jn=n(8247);(0,An.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,jn.U)(this,e)},(0,An.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,d.p)(this,e)};var Hn=n(6825);(0,An.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Hn.m)(this)};var qn=n(2279);(0,An.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,qn.i)(this,e,t)},(0,An.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof An.es&&(e=[e]),(0,ln.z)([this,...e],t)};var Xn=n(1355);(0,An.t3)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Xn.P)(this,e,t,n,r,s,a)};var Kn=n(1405);(0,An.t3)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Kn.b)(this,e,t,n,r,s)},(0,An.t3)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,pe.T)(this,e,t,n,r,s,a)},(0,An.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,Yt.m)(this)},(0,An.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Qt.f)(this)},(0,An.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,At.$)(this,e,t,n)},(0,An.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,ke.z)(this,e,t,n)};var Yn=n(9112);(0,An.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Yn.n)(this,e,t)};var Zn=n(4718);(0,An.t3)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Zn.B)(this,e,t,n,r,s,a)};var Qn=n(557);(0,An.t3)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Qn.W)(this,e,t,n,r,s)};var Jn=n(9322);(0,An.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Jn.N)(this,e)},(0,An.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,y.h)(this,e)};var er=n(548);(0,An.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,er.A)(this,e)};var tr=n(3233);(0,An.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,tr.p)(this)},(0,An.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,nt.D)(this,e)};var nr=n(4650);(0,An.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,nr.q)(this)};var rr=n(1954);(0,An.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,rr.d)(this,e,t)},(0,An.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,$e.Q)(this)},(0,An.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Sn.d)(this,e)};var sr=n(3426);(0,An.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,sr.t)(this)};var ar=n(7020);(0,An.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,ar.k)(this)},(0,An.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,T.X)(this,[this.size])},(0,An.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,yt.G)(this)};var ir=n(9165);(0,An.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,ir.q)(this,e)},(0,An.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,In.I)(this,e,t)},(0,An.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,te.b)(this,e)},(0,An.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ke.p)(this,e)};var or=n(8447);(0,An.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,or.S)(this)};var ur=n(4415);(0,An.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,ur.w)(this)};var lr=n(3963);(0,An.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,lr.x)(this)};var cr=n(4365);(0,An.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,cr.U)(this)};var hr=n(6230);(0,An.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,hr.i)(this)};var pr=n(9133);(0,An.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,pr.h)(this,e)},(0,An.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,ne.z)(this,e)},(0,An.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,at.d)(this,e)};var dr=n(9648);(0,An.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,dr.G)(this,e,t,n,r)};var fr=n(3888);(0,An.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,fr.e)(this)};var mr=n(1510);(0,An.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,mr.C)(this,e)};var gr=n(1391);(0,An.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,gr.l)(this,e,t)},(0,An.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Ct.c)(this)};var yr=n(7474);(0,An.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,yr.K)(this)},(0,An.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,re.H)(this,e)},(0,An.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Gt.h)(this)};var br=n(5750);(0,An.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,br.K)(this,e)};var xr=n(596);(0,An.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,xr.e)(this,e)},(0,An.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,X.O)(this,e,t,n)};var vr=n(1174);(0,An.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,vr._)(this,e,t,n,r)};var wr=n(3307);(0,An.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,wr.F)(this,e,t)},(0,An.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Nn.g)(this,e)};var kr=n(5130);(0,An.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,kr.J)(this,e,t)};var Sr=n(5735);(0,An.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,Sr.V)(this,e,t)};var Ir=n(4513);(0,An.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Ir.L)(this,e)};var Nr=n(1483);(0,An.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Nr.V)(this,e,t)};var Tr=n(5228);(0,An.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Tr.w)(this,e)},(0,An.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,f.d)(this,e)},(0,An.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,b.W)(this)};var Cr=n(3561);(0,An.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Cr.K)(this,e,t,n)};var _r=n(6500);(0,An.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,_r.Q)(this,e)};var Er=n(6708);(0,An.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Er.l)(this,e,t,n)};var $r=n(7846);(0,An.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,$r.J)(this)},(0,An.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,en.v)(this,e,t)};var Ar=n(5860);(0,An.t3)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Ar.d)(this,e,t,n,r,s,a)},(0,An.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,_t.s)(this,e)};var Rr=n(8151);(0,An.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Rr.A)(this,e)};var Dr=n(9451);(0,An.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Dr.W)(this,e,t)};var Fr=n(9036);(0,An.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Fr.M)(this)};var Or=n(7409);(0,An.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Or.U)(this)};var Mr=n(3582);(0,An.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Mr.b)(this)},(0,An.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,T.X)(this,e.shape)},(0,An.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,T.X)(this,e)};var zr=n(3305);(0,An.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,zr.I)(this,e,t,n)};var Lr=n(5098);(0,An.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Lr.j)(this,e,t,n)},(0,An.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Pt.G)(this,e)};var Br=n(3710);(0,An.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Br.Q)(this)};var Pr=n(7809);(0,An.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Pr.N)(this)},(0,An.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,ze.b)(this)};var Vr=n(5503);(0,An.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,Vr.U)(this)};var Wr=n(8678);(0,An.t3)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Wr.U)(this,e,t,n,r,s,a)},(0,An.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,sn.X)(this)};var Ur=n(4434);(0,An.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Ur.X)(this)},(0,An.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,ye.O)(this)},(0,An.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,xe.R)(this)},(0,An.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,mt.t)(this,e,t)};var Gr=n(682);(0,An.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Gr.X)(this,e)};var jr=n(3694);(0,An.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,jr.W)(this)},(0,An.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,Y.f)(this,e,t)},(0,An.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,oe.V)(this,e,t)},(0,An.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,v._)(this)},(0,An.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,w.h)(this)};var Hr=n(5265);(0,An.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Hr.$)(this,e)};var qr=n(9590);(0,An.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,qr.L)(this,e)},(0,An.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof An.es?[this,e]:[this,...e];return(0,wn.k)(n,t)},(0,An.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,m.N)(this,e)};var Xr=n(5158);(0,An.t3)().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),(0,Xr.N)(this,e,t,n,r,s,a,i,o)},(0,An.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,k.l)(this,e)},(0,An.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,C.S)(this,e,t)};var Kr=n(1173);(0,An.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Kr.O)(this)};var Yr=n(1869);(0,An.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Yr.A)(this)},(0,An.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Le.G)(this,e)},(0,An.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,d.p)(this,"bool")},(0,An.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,d.p)(this,"float32")},(0,An.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,d.p)(this,"int32")};var Zr=n(3243);(0,An.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Zr.h)(this,e,t)},(0,An.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Se.p)(this,e)};var Qr=n(9608);(0,An.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Qr.T)(this,e)},(0,An.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Pe.p)(this,e,t)},(0,An.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,It.H)(this,e)},(0,An.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,se.a)(e,this,t)},(0,An.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,$.P)(this)};class Jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jr.prototype)}}class es extends Error{constructor(e){super(e),Object.setPrototypeOf(this,es.prototype)}}class ts extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ts.prototype)}}class ns extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ns.prototype)}}class rs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rs.prototype)}}Error;class ss{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function as(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function is(e,t){if(!e)throw new rs(t)}function os(e,t){let n=0;for(const r of e)r===t&&n++;return n}function us(e){return 1===e.length?e[0]:e}function ls(e){return Array.isArray(e)?e:[e]}function cs(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function hs(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ps={};function ds(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function fs(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>fs(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?fs(t):e[n]=t.value)}}}function ms(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in ps)a=ps[s];else if(a=t[s],null==a)throw new ts(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new ts(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in ps?[o,u]=ps.className:i in t&&([o,u]=t[i]),null==o)throw new ts(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(ps))e[t]=ps[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ps);for(const e of Object.keys(n))ps[e]=n[e];fs(a.config);const r=u(o,a.config,n,s);return ps=Object.assign({},t),r}{const e=Object.assign({},ps);for(const e of Object.keys(n))ps[e]=n[e];const t=new o(a.config);return ps=Object.assign({},e),t}}}function gs(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ys(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function bs(e){if(null==e)throw new ts(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function xs(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ts(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function vs(e,t,n=0,r=1/0){return is(n>=0),is(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ws(e,t){Array.isArray(e)?(h.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ws(e,`element ${n+1} of ${t}`)))):h.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ks(e)}.`))}function ks(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ks(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Ss(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Is=0;function Ns(){return Is++}const Ts={};function Cs(e=""){return e in Ts||(Ts[e]=0),Ts[e]+=1,e+Ts[e].toString()}const _s=["channelsFirst","channelsLast"],Es=["nearest","bilinear"],$s=["valid","same","causal"],As=["max","avg"],Rs=["sum","mul","concat","ave"],Ds=new Map;function Fs(e){xs(_s,"DataFormat",e)}function Os(e){xs($s,"PaddingMode",e)}function Ms(e){xs(As,"PoolMode",e)}const zs=[];function Ls(e,t){zs.push(e);try{const e=t();return zs.pop(),e}catch(e){throw zs.pop(),e}}function Bs(e){if(!Ws(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===zs.length?"":zs.join("/")+"/")+e}function Ps(e){if(!Ws(e))throw new Error("Not a valid tensor name: '"+e+"'");Ds.has(e)||Ds.set(e,0);const t=Ds.get(e);if(Ds.set(e,Ds.get(e)+1),t>0){const n=`${e}_${t}`;return Ds.set(n,1),n}return e}const Vs=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ws(e){return!!e.match(Vs)}function Us(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Gs(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function js(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Hs(e,t){if(t<e)throw new ts(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let qs;function Xs(){return null==qs&&(qs=(0,h.backend)().epsilon()),qs}function Ks(e,t){return h.cast(e,t)}function Ys(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),h.reshape(e,n)}function Zs(e,t,n){return(0,h.tidy)((()=>{switch(e.rank){case 1:return h.slice1d(e,t,n);case 2:return h.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return h.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return h.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return h.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return h.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ts(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qs(e,t,n){return(0,h.tidy)((()=>{switch(e.rank){case 1:return h.slice1d(e,t,n);case 2:return h.slice2d(e,[0,t],[e.shape[0],n]);case 3:return h.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return h.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ts(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Js(e,t,n,r){return(0,h.tidy)((()=>{switch(e.rank){case 1:return h.slice1d(e,t,n);case 2:switch(r){case 1:return Zs(e,t,n);case 2:return Qs(e,t,n);default:throw new ts(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Zs(e,t,n);case 2:return h.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Qs(e,t,n);default:throw new ts(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Zs(e,t,n);case 2:return h.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return h.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Qs(e,t,n);default:throw new ts(`The axis is not within the rank of the tensor ${r}`)}default:throw new ts(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ea(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),h.concat(e,t)}function ta(e,t){switch(e.rank){case 1:return h.concat1d([e,t]);case 2:return h.concat2d([e,t],0);case 3:return h.concat3d([e,t],0);case 4:return h.concat4d([e,t],0);default:throw new ts(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function na(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ts(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return h.tile(e,t)}function ra(e,t=0,n=1,r,s){return h.randomNormal(e,t,n,r,s)}function sa(e,t,n,r){if(e.rank<2||t.rank<2)throw new ns(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ns(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const s=!1,a=!1;return h.fused.matMul({a:e,b:t,transposeA:s,transposeB:a,bias:r?oa(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=h.reshape(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=h.reshape(h.transpose(t,c),[u,-1]);const p=[...s,...l],d=!1,f=!1;return h.reshape(h.fused.matMul({a:e,b:t,transposeA:d,transposeB:f,bias:r?oa(e.rank,r,"channelsLast"):null,activation:n}),p)}}function aa(e,t,n){return(0,h.tidy)((()=>(t=Array.isArray(t)?(0,h.tensor1d)(t,"int32"):h.cast(t,"int32"),h.gather(e,t,n))))}function ia(e){return h.mul(e,e)}function oa(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ts(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?h.reshape(t,[1,r[0],1,1,1]):h.reshape(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?h.reshape(t,[1,1,1,1,r[0]]):h.reshape(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?h.reshape(t,[1,r[0],1,1]):h.reshape(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?h.reshape(t,[1,1,1,r[0]]):h.reshape(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?h.reshape(t,[1,r[0],1]):h.reshape(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?h.reshape(t,[1,1,r[0]]):h.reshape(t,[1].concat(r))}else if(e<3)return t;throw new ts(`Unsupported input rank by biasAdd: ${t.rank}`)}function ua(e,t,n){return(0,h.tidy)((()=>(null==n&&(n="channelsLast"),Fs(n),h.add(e,oa(e.rank,t,n)))))}function la(e,t,n,r){return(0,h.tidy)((()=>h.dropout(e,t,n,r)))}function ca(e,t,n=!1){return n?e():t()}const ha=["fanIn","fanOut","fanAvg"],pa=["normal","uniform","truncatedNormal"];class da extends h.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class fa extends da{apply(e,t){return(0,h.zeros)(e,t)}}fa.className="Zeros",h.serialization.registerClass(fa);class ma extends da{apply(e,t){return(0,h.ones)(e,t)}}ma.className="Ones",h.serialization.registerClass(ma);class ga extends da{constructor(e){if(super(),"object"!=typeof e)throw new ts(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ts(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,h.tidy)((()=>(0,h.mul)((0,h.scalar)(this.value),(0,h.ones)(e,t))))}getConfig(){return{value:this.value}}}ga.className="Constant",h.serialization.registerClass(ga);class ya extends da{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,h.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ya.className="RandomUniform",h.serialization.registerClass(ya);class ba extends da{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ns(`randomNormal does not support dType ${t}.`);return ra(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ba.className="RandomNormal",h.serialization.registerClass(ba);class xa extends da{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ns(`truncatedNormal does not support dType ${t}.`);return(0,h.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xa.className="TruncatedNormal",h.serialization.registerClass(xa);class va extends da{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,h.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new ts("Identity matrix initializer can only be used for 2D square matrices.");return(0,h.mul)(this.gain,(0,h.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}va.className="Identity",h.serialization.registerClass(va);class wa extends da{constructor(e){if(super(),e.scale<0)throw new ts(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,xs(ha,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){xs(pa,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Fs(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Us(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Us(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Us(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ns(`${this.getClassName()} does not support dType ${t}.`);return(0,h.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return(0,h.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wa.className="VarianceScaling",h.serialization.registerClass(wa);class ka extends wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wa.className}}ka.className="GlorotUniform",h.serialization.registerClass(ka);class Sa extends wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wa.className}}Sa.className="GlorotNormal",h.serialization.registerClass(Sa);class Ia extends wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wa.className}}Ia.className="HeNormal",h.serialization.registerClass(Ia);class Na extends wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wa.className}}Na.className="HeUniform",h.serialization.registerClass(Na);class Ta extends wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wa.className}}Ta.className="LeCunNormal",h.serialization.registerClass(Ta);class Ca extends wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wa.className}}Ca.className="LeCunNormal",h.serialization.registerClass(Ca);class _a extends da{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ns("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,h.tidy)((()=>{if(e.length<2)throw new ns("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=ra(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=h.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=(0,h.transpose)(n)),(0,h.mul)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}_a.className="Orthogonal",h.serialization.registerClass(_a);const Ea={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $a(e,t={}){return ms(e,h.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Aa(e){return ds(e)}function Ra(e){if("string"==typeof e){const t=e in Ea?Ea[e]:e;if("GlorotNormal"===t)return new Sa;if("GlorotUniform"===t)return new ka;if("HeNormal"===t)return new Ia;if("HeUniform"===t)return new Na;if("LeCunNormal"===t)return new Ta;if("LeCunUniform"===t)return new Ca;{const e={};return e.className=t,e.config={},$a(e)}}return e instanceof da?e:$a(e)}function Da(e){return Array.isArray(e)&&Array.isArray(e[0])}function Fa(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Oa(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ts(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ma(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ts(`Expected exactly 1 Shape; got ${e.length}`)}return e}function za(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class La{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ns(),n=null==n?"Variable":n,this.originalName=Bs(n),this.name=Ps(this.originalName),this.trainable_=r,this.constraint=s,this.val=h.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ba(e){return e.map((e=>e.read()))}function Pa(e){e.forEach((e=>{e[0].write(e[1])}))}class Va{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Wa{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Ns(),null!=a&&(this.originalName=Bs(a),this.name=Ps(this.originalName)),this.rank=t.length}}let Ua=0;class Ga{constructor(e,t){this.callArgs=t,this.id=Ua++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ja=0;class Ha extends h.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ja++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=cs(e)+"_"+Cs(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new es(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ts(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return us(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return us(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Jr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Jr(`Layer ${this.name} is not connected, no input to return.`);return us(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Jr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Jr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return us(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ls(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ls(this.inputSpec);if(e.length!==t.length)throw new ts(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new ts(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new ts(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new ts(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new ts(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new ts(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new ts(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ls(e);let r=!0;for(const e of n)if(!(e instanceof Wa)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Wa){s=!1;break}if(r===s)throw new ts("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ls(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ls(e))t.push(n.shape);this.build(us(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=ls(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=us(a),null!=this.activityRegularizer)throw new ns("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ls(e);const t=[];for(const n of e)t.push(n.shape);return us(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Wa(a,n,this,ls(e),t,this.name,r))):new Wa(a,r,this,ls(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ns("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Jr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Jr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new es(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return za(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ba(e?this.trainableWeights:this.weights)}setWeights(e){(0,h.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new ts(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ba(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!h.util.arraysEqual(a.shape,o.shape))throw new ts(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Pa(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ts(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ra("zeros"));const u=r.apply(t,n),l=new La(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ls(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=ls(e);t=ls(t),n=ls(n),r=ls(r),s=Fa(s),a=Fa(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Ga({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function qa(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=qa(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Xa extends Ha{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Cs("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ts("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ts("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ts("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Wa(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ga({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ts(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Ka(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ts("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Xa({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Xa.className="InputLayer",h.serialization.registerClass(Xa);class Ya{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ya)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ts(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,h.cast)(t,e.dtype)}catch(n){throw new ts(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Wa){if(null==this.id2Value[e.id])throw new ts(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ts(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Wa){if(null==this.id2Value[e.id])throw new ts(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ts(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,h.dispose)(this.id2Mask)}}const Za=new ss,Qa=new ss;function Ja(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let p,d=Za.get(c);if(null==d){const e=function(e,t){h.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=ti(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=ti(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ei(r)}}(i,t);d=e.sorted,p=e.recipientCounts,Za.put(c,d),Qa.put(c,p)}p={},s||Object.assign(p,Qa.get(c));const f=new Ya(t);for(let e=0;e<d.length;++e){if(null!=r){const e=(0,h.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof Xa)continue;const l=[],c=[],m=[];let g=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),c.push(r),null!=r&&(g=!0),s||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=c[0]);const y=ls(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,c));const x=ni(a),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],y[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(v[e].name);-1!==t&&(u[t]=y[e])}s||(0,h.dispose)(m)}return f.disposeMasks(),a?u:u[0]}function ei(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ti(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function ni(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function ri(e,t){return(0,h.tidy)((()=>h.sqrt(h.sum(h.mul(e,e),t,!0))))}(0,h.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Za&&Za.setMaxEntries(e),null!=Qa&&Qa.setMaxEntries(e)}));class si extends h.serialization.Serializable{getConfig(){return{}}}class ai extends si{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,h.tidy)((()=>{const t=ri(e,this.axis),n=h.clipByValue(t,0,this.maxValue);return h.mul(e,h.div(n,h.add(Xs(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ai.className="MaxNorm",h.serialization.registerClass(ai);class ii extends si{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,h.tidy)((()=>h.div(e,h.add(Xs(),ri(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ii.className="UnitNorm",h.serialization.registerClass(ii);class oi extends si{apply(e){return h.relu(e)}}oi.className="NonNeg",h.serialization.registerClass(oi);class ui extends si{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,h.tidy)((()=>{const t=ri(e,this.axis),n=h.add(h.mul(this.rate,h.clipByValue(t,this.minValue,this.maxValue)),h.mul(1-this.rate,t));return h.mul(e,h.div(n,h.add(Xs(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ui.className="MinMaxNorm",h.serialization.registerClass(ui);const li={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ci(e){return ds(e)}function hi(e,t={}){return ms(e,h.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function pi(e){return null==e?null:"string"==typeof e?hi({className:e in li?li[e]:e,config:{}}):e instanceof si?e:hi(e)}function di(e){return new ai(e)}function fi(e){return new ii(e)}function mi(){return new oi}function gi(e){return new ui(e)}function yi(){return new fa}function bi(){return new ma}function xi(e){return new ga(e)}function vi(e){return new ya(e)}function wi(e){return new ba(e)}function ki(e){return new xa(e)}function Si(e){return new va(e)}function Ii(e){return new wa(e)}function Ni(e){return new ka(e)}function Ti(e){return new Sa(e)}function Ci(e){return new Ia(e)}function _i(e){return new Na(e)}function Ei(e){return new Ta(e)}function $i(e){return new Ca(e)}function Ai(e){return new _a(e)}async function Ri(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,h.dispose)(r)}}function Di(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Fi;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Fi||(Fi={}));class Oi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Mi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class zi extends Oi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=(0,h.tidy)((()=>(0,h.add)(this.totals[e],(0,h.mul)(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,h.tidy)((()=>{const n=(0,h.mul)((0,h.div)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,h.keep)(t[e])})))}}class Li extends Oi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Bi extends Oi{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||h.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");h.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():h.util.now();return(...a)=>{const i=null!=n?n():h.util.now();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ri(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ri(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ri(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ri(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ri(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):h.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ri(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ri(e),await this.trainEnd(e))}}function Pi(e,t){return null==e&&(e={}),e instanceof Oi?[e]:Array.isArray(e)&&e[0]instanceof Oi?e:ls(e).map((e=>new Bi(e,t)))}class Vi{constructor(){}static registerCallbackConstructor(e,t){h.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Vi.checkForDuplicate(t),null==Vi.constructors[e]&&(Vi.constructors[e]=[]),Vi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Vi.constructors)Vi.constructors[+t].forEach((t=>{if(t===e)throw new ts("Duplicate callback constructor.")}))}static clear(){Vi.constructors={}}static createCallbacks(e){const t=[];for(const n in Vi.constructors){const r=+n;e>=r&&t.push(...Vi.constructors[r])}return t.map((e=>new e))}}function Wi(e,t,n,r,s,a,i,o,u){const l=new Li,c=[new zi,...Vi.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Mi(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Ui(e,t={},n=!1){return ms(e,h.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Gi(e,t){return(0,h.tidy)((()=>{"float32"!==e.dtype&&(e=h.cast(e,"float32"));const n=h.sum(ia(e),t,!0),r=h.fill(n.shape,Xs()),s=h.sqrt(h.maximum(n,r));return h.div(e,s)}))}function ji(e,t){return(0,h.tidy)((()=>h.mean(ia(h.sub(t,e)),-1)))}function Hi(e,t){return(0,h.tidy)((()=>h.mean(h.abs(h.sub(t,e)),-1)))}function qi(e,t){return(0,h.tidy)((()=>{const n=h.sub(e,t),r=h.clipByValue(h.abs(e),Xs(),Number.MAX_VALUE),s=h.abs(h.div(n,r));return h.mul(100,h.mean(s,-1))}))}function Xi(e,t,n=!1){return(0,h.tidy)((()=>{if(n)t=h.softmax(t);else{const e=h.sum(t,t.shape.length-1,!0);t=h.div(t,e)}return t=h.clipByValue(t,Xs(),1-Xs()),h.neg(h.sum(h.mul(h.cast(e,"float32"),h.log(t)),t.shape.length-1))}))}function Ki(e,t,n=!1){return(0,h.tidy)((()=>{const r=h.cast(h.floor(function(e){const t=[Us(e.shape)];return h.reshape(e,t)}(e)),"int32"),s=(t=h.clipByValue(t,Xs(),1-Xs())).shape;return Xi(h.reshape(h.oneHot(r,s[s.length-1]),s),t,n)}))}function Yi(e,t){return(0,h.tidy)((()=>{let n;return n=h.clipByValue(t,Xs(),1-Xs()),n=h.log(h.div(n,h.sub(1,n))),h.mean(function(e,t){if(!h.util.arraysEqual(e.shape,t.shape))throw new ts(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,h.tidy)((()=>{const n=h.relu(t),r=h.neg(h.abs(t));return h.add(h.sub(n,h.mul(t,e)),h.log1p(h.exp(r)))}))}(e,n),-1)}))}function Zi(e,t){return(0,h.tidy)((()=>{const n=Gi(e,-1),r=Gi(t,-1),s=h.mul(n,r);return h.neg(h.sum(s,-1))}))}Vi.constructors={};const Qi={meanSquaredError:ji,meanAbsoluteError:Hi,meanAbsolutePercentageError:qi,meanSquaredLogarithmicError:function(e,t){return(0,h.tidy)((()=>{const n=h.clipByValue(t,Xs(),Number.MAX_VALUE),r=h.log(h.add(1,n)),s=h.clipByValue(e,Xs(),Number.MAX_VALUE),a=h.log(h.add(1,s));return h.mean(ia(h.sub(r,a)),-1)}))},squaredHinge:function(e,t){return(0,h.tidy)((()=>{const n=h.maximum(0,h.sub(1,h.mul(e,t)));return h.mean(ia(n),-1)}))},hinge:function(e,t){return(0,h.tidy)((()=>{const n=h.maximum(0,h.sub(1,h.mul(e,t)));return h.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,h.tidy)((()=>{const n=h.sum(h.mul(e,t),-1),r=h.max(h.mul(h.sub(1,e),t),-1);return h.maximum(0,h.add(1,h.sub(r,n)))}))},logcosh:function(e,t){return(0,h.tidy)((()=>{const n=Math.log(2),r=h.sub(t,e),s=h.sub(h.add(r,h.softplus(h.mul(-2,r))),n);return h.mean(s,-1)}))},categoricalCrossentropy:Xi,sparseCategoricalCrossentropy:Ki,binaryCrossentropy:Yi,kullbackLeiblerDivergence:function(e,t){return(0,h.tidy)((()=>{const n=h.clipByValue(e,Xs(),1),r=h.clipByValue(t,Xs(),1);return h.sum(h.mul(e,h.log(h.div(n,r))),-1)}))},poisson:function(e,t){return(0,h.tidy)((()=>{const n=h.log(h.add(Xs(),t));return h.mean(h.sub(t,h.mul(e,n)),-1)}))},cosineProximity:Zi};function Ji(e){if("string"==typeof e){if(e in Qi)return Qi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ts(t)}return e}function eo(e,t){return(0,h.tidy)((()=>{const n=h.mul(.5,h.onesLike(t)),r=Ks(h.greater(t,n),e.dtype);return h.mean(h.equal(e,r),-1)}))}function to(e,t){return(0,h.tidy)((()=>Ks(h.equal(h.argMax(e,-1),h.argMax(t,-1)),"float32")))}function no(e,t){return(0,h.tidy)((()=>h.cast(h.sum(h.logicalAnd(h.equal(e,1),h.equal(t,1))),"float32")))}function ro(e,t){return(0,h.tidy)((()=>{const n=no(e,t),r=function(e,t){return(0,h.tidy)((()=>h.cast(h.sum(h.logicalAnd(h.equal(e,0),h.equal(t,1))),"float32")))}(e,t),s=h.add(n,r);return h.cast(h.where(h.greater(s,0),h.div(n,s),0),"float32")}))}function so(e,t){return Yi(e,t)}function ao(e,t){return e.rank===t.rank&&(e=h.squeeze(e,[e.rank-1])),(t=h.argMax(t,-1)).dtype!==e.dtype&&(t=h.cast(t,e.dtype)),h.cast(h.equal(e,t),"float32")}const io=Xi,oo=Ki,uo={binaryAccuracy:eo,categoricalAccuracy:to,precision:ro,categoricalCrossentropy:io,sparseCategoricalCrossentropy:oo,mse:ji,MSE:ji,mae:Hi,MAE:Hi,mape:qi,MAPE:qi,cosine:Zi};function lo(e){if("string"==typeof e&&e in uo)return uo[e];if("string"!=typeof e&&null!=e)return e;throw new ts(`Unknown metric ${e}`)}function co(e){if(is(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Qi))if(Qi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(uo))if(uo[n]===e){t=n;break}return void 0!==t?t:e.name}}function ho(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!po(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function po(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!po(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!po(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function fo(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function mo(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}fo([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function go(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];fo([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)fo(["","","","",i[e]],t,r)}function yo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function bo(e,t){if(null===e)return null;if("string"==typeof e)return hs(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];yo(t,s,r)?n.push(r):n.push(bo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=hs(n);t[e]=bo(r,e)}}return t}}function xo(e,t){if(null==e)return null;if("string"==typeof e)return cs(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];yo(t,s,r)?n.push(r):n.push(xo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[cs(n)]="name"!==n&&"className"!==n||"string"!=typeof r?xo(r,n):r}return t}}const vo="3.19.0";class wo extends Ha{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Cs(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ys(this.inputs).length!==this.inputs.length)throw new ts(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ys(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;is(0===n,"input layer has >1 nodes"),is(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Xa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new es(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(wo.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(gs);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof wo&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(gs);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new es(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new es(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ga({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ts("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ts(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new ts(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ts(`${e.length} of ${r} weights are not set: ${e}`)}Pa(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${vo}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,h.tidy)((()=>{e=ls(e);const n=new Ya;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ja(this.outputs,n,t)}))}computeMask(e,t){return(0,h.tidy)((()=>{let n;return e=ls(e),n=null==t?as(null,e.length):ls(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Fa(e);if(t.length!==this.inputLayers.length)throw new ts(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gs);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Fa(t.computeOutputShape(us(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];is(t in n),s.push(n[t])}return us(s)}runInternalGraph(e,t){null==t&&(t=as(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gs);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=ls(t.call(e,l)),u=ls(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=ls(t.call(r,l)),u=ls(t.computeMask(r,i));if(t.activityRegularizer)throw new ns("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){is(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof wo?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=wo.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ts(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ts("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ts(`No such layer: ${e}`)}calculateLosses(){return(0,h.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=wo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=wo.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[wo.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=wo.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=wo.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(us(n),r)}function u(e){const n=e.name,a=Ui(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ts(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!bs(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];is(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];is(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new ts("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,h.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ko(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function So(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,h.tidy)((()=>{if(1===e.shape.length)return(0,h.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,h.argMax)(e,t)}if(1===e.shape[1])return(0,h.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,h.dispose)(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),(0,h.tensor1d)(s,"float32")}return null}function Io(e,t){return(0,h.mul)(e,t)}function No(e,t){let n,r;const s=t;n=s.xs,r=s.ys,h.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=To("input",e.inputNames,n),i=To("output",e.outputNames,r),o=a[0].shape[0];h.util.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),h.util.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)h.util.assert(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)h.util.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function To(e,t,n){if(n instanceof h.Tensor)return[n];if(Array.isArray(n))return h.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new ts(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Co(e){return"function"==typeof e.iterator}function _o(e){h.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Eo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Zs(e,t,n-t))):Zs(e,t,n-t)}function $o(e,t){return h.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>$o(e,t))):aa(e,"int32"===t.dtype?t:h.cast(t,"int32"))))}function Ao(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Ro(e){const t=[];e instanceof h.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Ys(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Do(e,t){if(null==e)return;const n=[];if(t instanceof h.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof h.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Fo(e){return Array.isArray(e)}function Oo(e){return!function(e){return e instanceof h.Tensor}(e)&&!Fo(e)}function Mo(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Fo(e)&&e.length>0)t=!0;else if(Oo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ts(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Oo(e)){a=[];for(const n of t){if(null==e[n])throw new ts(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Fo(e)){if(e.length!==t.length)throw new ts(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new ts(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ro(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ts(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new ts(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function zo(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new ts(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new ts(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ts(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new ts(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Lo extends wo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ts("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),fo(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?mo(o[e],n,r):go(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?za(e.collectedTrainableWeights):za(e.trainableWeights),t}(e),l=za(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>h.train.adagrad(.01),Adadelta:()=>h.train.adadelta(1,.95,Xs()),Adam:()=>h.train.adam(.001,.9,.999,Xs()),Adamax:()=>h.train.adamax(.002,.9,.999,Xs(),0),RMSProp:()=>h.train.rmsprop(.001,.9,0,Xs()),SGD:()=>h.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ts(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof h.Optimizer))throw new ts("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ts(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ji(e)))}else{const n=Ji(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ts(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ji(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ls("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ls("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Yi?-1!==["accuracy","acc"].indexOf(i)?r=eo:-1!==["crossentropy","ce"].indexOf(i)&&(r=so):this.lossFunctions[e]===Ki?-1!==["accuracy","acc"].indexOf(i)?r=ao:-1!==["crossentropy","ce"].indexOf(i)&&(r=oo):-1!==["accuracy","acc"].indexOf(i)?r=to:-1!==["crossentropy","ce"].indexOf(i)&&(r=io),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=lo(i);a=e,n=""+co(i)}let t;Ls(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;_o(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return us(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Do(s[0],e),Do(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new ns("Verbose mode is not implemented yet.");h.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=h.tidy((()=>{if(t.value){const{xs:n,ys:r}=No(e,t.value),i=n.concat(r),l=h.tidy((()=>s(i)));if(h.dispose(i),0===u)for(let e=0;e<l.length;++e)a.push((0,h.scalar)(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=h.tidy((()=>h.add(a[e],h.mul(c,t)))),u>0&&h.dispose(n)}h.dispose(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=h.div(a[e],o),h.dispose(t)}return us(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new ts(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ts(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ts("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Ya;if(e instanceof h.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ts(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ts(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Ja(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=as(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ts(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return h.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new ns("Verbose predictLoop() is not implemented yet.");const s=Ao(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)h.tidy((()=>{const n=s[t][0],r=s[t][1],a=Eo(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Ya(i);return Ja(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return us(a.map((e=>h.concat(e,0))))}))}predict(e,t={}){const n=Ro(e);zo(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return _o(r),this.predictLoop(n,r)}finally{Do(n,e)}}predictOnBatch(e){zo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new es("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ki?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=ys(e.map((e=>e.shape[0])));r.sort();const s=ys(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new ts(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new ts(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!h.util.arraysEqual(r,s))throw new ts(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Mo(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mo(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[ji,Yi,Xi];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Xi&&1===a.shape[a.shape.length-1])throw new ts(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new ts(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ts(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=ko(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await So(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return h.tidy((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new ns("Verbose mode is not implemented yet.");if(null!=s)throw new ns("steps mode in testLoop() is not implemented yet");{const r=Ao(a,n),s=(0,h.tensor1d)(Hs(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=Zs(s,a,o-a),l=$o(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push((0,h.scalar)(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=h.add(i[e],h.mul(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=h.div(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;os(e,r)>1&&(s+=`_${os(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Ya(e),o=Ja(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Io(n,s[e]));const a=h.mean(n);t.push(a),u=0===e?n:h.add(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=h.mean(t(r[s],o[s]))}h.keep(n),a.push(n)}return u=h.mean(u),this.calculateLosses().forEach((e=>{u=h.add(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>h.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Ya(a),o=Ja(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=h.mean(r(s[e],o[e]));n=0===e?a:h.add(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=h.mean(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,l,c,p,d;e.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;_o(f);const m=!1,g=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,m,f);s=g[0],a=g[1],d=g[2];let y,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ns("validationData including sample weights is not supported yet."):new ts(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,f);c=n[0],p=n[1],y=c.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];c=Eo(s,e,t),i=s,s=Eo(s,0,e),p=Eo(a,e,t),o=a,a=Eo(a,0,e),y=c.concat(p)}else null!=r.validationSteps&&(b=!0);const x=s.concat(a).concat(d);e.checkTrainableWeightsConsistency();const v=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let k,S;b?(e.makeTestFunction(),k=e.testFunction,S=w.slice().concat(w.map((e=>"val_"+e)))):(k=null,y=[],S=w.slice());const I=Pi(r.callbacks,r.yieldEvery),N=await async function(e,t,n,r,s,a,i,o,u,l,c,p,d,f,m){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=u&&null!=l&&(g=!0);const y=e.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=Hs(0,y)),null==i&&(i=1);const{callbackList:x,history:v}=Wi(o,i,a,d,y,f,s,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===c)throw new ns("batch shuffling is not implemneted yet");c&&h.util.shuffle(b);const i=(0,h.tensor1d)(b),o=Ao(y,s);for(let c=0;c<o.length;++c){const p={};if(await x.onBatchBegin(c,p),h.tidy((()=>{const d=o[c][0],f=o[c][1],m=Zs(i,d,f-d);p.batch=c,p.size=f-d;const y=$o(n,m),b=t(y);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];p[t]=n,h.keep(n)}if(c===o.length-1&&g){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];h.keep(s),a["val_"+n]=s}}})),await x.onBatchEnd(c,p),Di(p),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,v,x,w,f,r.epochs,r.verbose,I,k,y,r.shuffle,S,r.initialEpoch,null);return N}finally{e.isTraining=!1,Do(s,t),Do(a,n),Do(i,t),Do(o,n),Do(c,u),Do(p,l),null!=d&&h.dispose(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(h.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),h.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),h.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),h.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),h.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Co(n.validationData))h.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ns("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Pi(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Wi(c,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let c=0,p=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=No(e,t.value),a={};a.batch=p,a.size=r[0].shape[0],await d.onBatchBegin(p,a);const i=[];if(null!=n.classWeight){const t=ko(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await So(s[e],null,t[e]))}const l=r.concat(s).concat(i),f=o(l);h.dispose(l);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];a[t]=n,h.keep(n)}await d.onBatchEnd(p,a),Di(a),p++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Co(n.validationData)?ls(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ls(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return h.dispose(a),Do(n[0],e),Do(n[1],t),us(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=h.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-h.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=cs(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>cs(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=cs(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[cs(co(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>cs(co(e))));{const e={};for(const t in this.metrics)e[t]=cs(co(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ui(bo(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=hs(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>hs(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=hs(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>hs(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=hs(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=h.io.getSaveHandlers(e);if(0===t.length)throw new ts(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ts(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ts("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await h.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${vo}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await h.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=h.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;ho(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){ho(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Lo.className="Model",h.serialization.registerClass(Lo);class Bo extends Lo{}async function Po(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ui(bo(n),t);if(null!=e.weightsManifest){const t=await h.io.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),(0,h.dispose)(t)}return r}Bo.className="Functional",h.serialization.registerClass(Bo);class Vo extends Lo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Cs("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ts(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vo||e instanceof Lo;let n;if(t){if(n=e,1!==n.outputs.length)throw new ts("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ts("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ts("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Ka({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ts(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ts("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=qa(this.outputs[0])}this.inboundNodes=[],new Ga({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:as(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ma(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Lo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ts("Legacy serialization format not supported yet.");s=t}else h.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Vo))throw new ns(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Ui(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ts("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ts("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Wo(e){return new Lo(e)}function Uo(e){return new Vo(e)}function Go(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=h.io.getLoadHandlers(e,t);if(0===n.length)n.push(h.io.browserHTTPRequest(e,t));else if(n.length>1)throw new ts(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ts("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=Ui(bo(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ts("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=h.io.decodeWeights(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,h.dispose)(e),(0,h.dispose)(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function jo(e){return Ka(e)}function Ho(e,t){Vi.registerCallbackConstructor(e,t)}Vo.className="Sequential",h.serialization.registerClass(Vo);class qo extends h.serialization.Serializable{getConfig(){return{}}}class Xo extends qo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ns(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return h.elu(e)}(e,t)}}Xo.className="elu",h.serialization.registerClass(Xo);class Ko extends qo{apply(e){return h.selu(e)}}Ko.className="selu",h.serialization.registerClass(Ko);class Yo extends qo{apply(e){return h.relu(e)}}Yo.className="relu",h.serialization.registerClass(Yo);class Zo extends qo{apply(e){return(0,h.tidy)((()=>h.minimum(6,h.relu(e))))}}Zo.className="relu6",h.serialization.registerClass(Zo);class Qo extends qo{apply(e){return e}}Qo.className="linear",h.serialization.registerClass(Qo);class Jo extends qo{apply(e){return h.sigmoid(e)}}Jo.className="sigmoid",h.serialization.registerClass(Jo);class eu extends qo{apply(e){return function(e){return(0,h.tidy)((()=>{const t=h.add(.5,h.mul(.2,e));return h.clipByValue(t,0,1)}))}(e)}}eu.className="hardSigmoid",h.serialization.registerClass(eu);class tu extends qo{apply(e){return h.softplus(e)}}tu.className="softplus",h.serialization.registerClass(tu);class nu extends qo{apply(e){return function(e){return(0,h.tidy)((()=>h.div(e,h.add(h.abs(e),1))))}(e)}}nu.className="softsign",h.serialization.registerClass(nu);class ru extends qo{apply(e){return h.tanh(e)}}ru.className="tanh",h.serialization.registerClass(ru);class su extends qo{apply(e,t=-1){return h.softmax(e,t)}}su.className="softmax",h.serialization.registerClass(su);class au extends qo{apply(e,t=-1){return h.logSoftmax(e,t)}}au.className="logSoftmax",h.serialization.registerClass(au);class iu extends qo{apply(e,t=1){return(0,h.tidy)((()=>h.mul(h.sigmoid(h.mul(e,t)),e)))}}iu.className="swish",h.serialization.registerClass(iu);class ou extends qo{apply(e){return(0,h.tidy)((()=>h.mul(e,h.tanh(h.softplus(e)))))}}function uu(e){return e.getClassName()}function lu(e,t={}){return ms(e,h.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function cu(e){if(null==e){return lu({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lu(t)}return e instanceof qo?e:lu(e)}function hu(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ou.className="mish",h.serialization.registerClass(ou);class pu extends h.serialization.Serializable{}class du extends pu{constructor(e){super(),hu(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,h.tidy)((()=>{let t=(0,h.zeros)([1]);return this.hasL1&&(t=(0,h.add)(t,(0,h.sum)(h.mul(this.l1,(0,h.abs)(e))))),this.hasL2&&(t=(0,h.add)(t,(0,h.sum)(h.mul(this.l2,ia(e))))),h.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}du.className="L1L2",h.serialization.registerClass(du);const fu={l1l2:"L1L2"};function mu(e){return ds(e)}function gu(e,t={}){return ms(e,h.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function yu(e){return null==e?null:"string"==typeof e?gu({className:e in fu?fu[e]:e,config:{}}):e instanceof pu?e:gu(e)}class bu extends Ha{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Oa(e);let n=(0,h.relu)(e);return null!=this.maxValue&&(n=(0,h.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}bu.className="ReLU",h.serialization.registerClass(bu);class xu extends Ha{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Oa(e);return(0,h.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xu.className="LeakyReLU",h.serialization.registerClass(xu);class vu extends Ha{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ra(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yu(e.alphaRegularizer),this.alphaConstraint=pi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ts(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ma(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Va({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oa(e),(0,h.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Aa(this.alphaInitializer),alphaRegularizer:mu(this.alphaRegularizer),alphaConstraint:ci(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}vu.className="PReLU",h.serialization.registerClass(vu);class wu extends Ha{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ns(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Oa(e);return(0,h.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wu.className="ELU",h.serialization.registerClass(wu);class ku extends Ha{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Oa(e);return(0,h.mul)(n,(0,h.cast)((0,h.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ku.className="ThresholdedReLU",h.serialization.registerClass(ku);class Su extends Ha{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new su).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Oa(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Iu(e,t,n){if("number"==typeof e)return as(e,t);if(e.length!==t)throw new ts(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new ts(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Nu(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Tu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+js([n-t,0]);else{if("same"!==r)throw new ts(`Unsupport padding mode: ${r}.`);e*=t}return e}function Cu(e,t){return(0,h.tidy)((()=>(Fs(t),"channelsFirst"===t?h.transpose(e,[0,2,3,1]):e)))}function _u(e,t){return(0,h.tidy)((()=>(Fs(t),"channelsFirst"===t?h.transpose(e,[0,2,3,4,1]):e)))}function Eu(e,t,n,r=[1,1],s="valid",a,i,o=null){return(0,h.tidy)((()=>{if(null==a&&(a="channelsLast"),Fs(a),3!==e.rank&&4!==e.rank)throw new ts(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ts(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Cu(e,a);if("causal"===s)throw new ns("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=h.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=h.transpose(u,[0,3,1,2])),u}))}Su.className="Softmax",h.serialization.registerClass(Su);class $u extends Ha{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$u.verifyArgs(t),this.rank=e,ws(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ns(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Iu(t.kernelSize,e,"kernelSize"),this.strides=Iu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Os(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fs(this.dataFormat),this.activation=cu(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ra(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=pi(t.biasConstraint),this.biasRegularizer=yu(t.biasRegularizer),this.activityRegularizer=yu(t.activityRegularizer),this.dilationRate=Iu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ts(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ts(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ts(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(is("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!vs(e.kernelSize,"number",1,3))throw new ts(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:uu(this.activation),useBias:this.useBias,biasInitializer:Aa(this.biasInitializer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),biasConstraint:ci(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Au extends $u{constructor(e,t){super(e,t),this.kernel=null,Au.verifyArgs(t),this.filters=t.filters,ws(this.filters,"filters"),this.kernelInitializer=Ra(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=pi(t.kernelConstraint),this.kernelRegularizer=yu(t.kernelRegularizer)}build(e){e=Ma(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ts(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,h.tidy)((()=>{let t;e=Oa(e);const n=null==this.bias?null:this.bias.read(),r=Ss(this.activation.getClassName());if(null!=r&&2===this.rank)t=Eu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return(0,h.tidy)((()=>{if(null==a&&(a="channelsLast"),Fs(a),3!==e.shape.length)throw new ts(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ts(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ts(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=h.transpose(e,[0,2,1])),"causal"===s)throw new ns("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=h.conv1d(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=ua(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Eu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ns("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return(0,h.tidy)((()=>{if(null==a&&(a="channelsLast"),Fs(a),4!==e.rank&&5!==e.rank)throw new ts(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ts(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=_u(e,a);if("causal"===s)throw new ns("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=h.conv3d(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=ua(o,n)),"channelsFirst"===a&&(o=h.transpose(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ma(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Nu(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Aa(this.kernelInitializer),kernelRegularizer:mu(this.kernelRegularizer),kernelConstraint:ci(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ts(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ru extends Au{constructor(e){super(2,e),Ru.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!vs(e.kernelSize,"number",1,2))throw new ts(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ru.className="Conv2D",h.serialization.registerClass(Ru);class Du extends Au{constructor(e){super(3,e),Du.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ts(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Du.className="Conv3D",h.serialization.registerClass(Du);class Fu extends Ru{constructor(e){if(super(e),this.inputSpec=[new Va({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ts(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ma(e)).length)throw new ts("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ts("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Va({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return h.tidy((()=>{let t=Oa(e);if(4!==t.shape.length)throw new ts(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],p=this.strides[1],d=[r,Tu(i,c,u,this.padding),Tu(o,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=h.transpose(t,[0,2,3,1]));let f=h.conv2dTranspose(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=h.transpose(f,[0,3,1,2])),null!=this.bias&&(f=ua(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Ma(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Tu(t[r],o,a,this.padding),t[s]=Tu(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fu.className="Conv2DTranspose",h.serialization.registerClass(Fu);class Ou extends Du{constructor(e){if(super(e),this.inputSpec=[new Va({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ts(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ma(e)).length)throw new ts("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ts("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Va({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return h.tidy((()=>{let t=Oa(e);if(5!==t.shape.length)throw new ts(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[r,Tu(o,f,c,this.padding),Tu(u,m,p,this.padding),Tu(l,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=h.transpose(t,[0,2,3,4,1]));let b=h.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=h.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=ua(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Ma(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Tu(t[r],l,i,this.padding),t[s]=Tu(t[s],c,o,this.padding),t[a]=Tu(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ou.className="Conv3DTranspose",h.serialization.registerClass(Ou);class Mu extends Au{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ts("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ts("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ts(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ra(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yu(t.depthwiseRegularizer),this.depthwiseConstraint=pi(t.depthwiseConstraint),this.pointwiseInitializer=Ra(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yu(t.pointwiseRegularizer),this.pointwiseConstraint=pi(t.pointwiseConstraint)}build(e){if((e=Ma(e)).length<this.rank+2)throw new ts(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ts(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Va({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,h.tidy)((()=>{let t;if(e=Oa(e),1===this.rank)throw new ns("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=h.transpose(e,[0,2,3,1])),t=h.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ua(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=h.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Aa(this.depthwiseInitializer),e.pointwiseInitializer=Aa(this.pointwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.pointwiseRegularizer=mu(this.pointwiseRegularizer),e.depthwiseConstraint=ci(this.depthwiseConstraint),e.pointwiseConstraint=ci(this.pointwiseConstraint),e}}Mu.className="SeparableConv";class zu extends Mu{constructor(e){super(2,e)}}zu.className="SeparableConv2D",h.serialization.registerClass(zu);class Lu extends Au{constructor(e){super(1,e),Lu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!vs(e.kernelSize,"number",1,1))throw new ts(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Lu.className="Conv1D",h.serialization.registerClass(Lu);class Bu extends Ha{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,h.tidy)((()=>{if(e=Oa(e),"channelsLast"===this.dataFormat){const t=Js(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Js(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Js(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Js(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Bu.className="Cropping2D",h.serialization.registerClass(Bu);class Pu extends Ha{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fs(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,xs(Es,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return h.tidy((()=>{let t=Oa(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=h.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?h.image.resizeNearestNeighbor(t,[e,r]):h.image.resizeBilinear(t,[e,r]);return h.transpose(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?h.image.resizeNearestNeighbor(t,[e,r]):h.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Pu.className="UpSampling2D",h.serialization.registerClass(Pu);class Vu extends $u{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ra(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=pi(e.depthwiseConstraint),this.depthwiseRegularizer=yu(e.depthwiseRegularizer)}build(e){if((e=Ma(e)).length<4)throw new ts(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ts(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,h.tidy)((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return(0,h.tidy)((()=>{null==s&&(s="channelsLast"),Fs(s);let i=Cu(e,s);if(4!==e.rank)throw new ts(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ts(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=h.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=h.transpose(i,[0,3,1,2])),i}))}(e=Oa(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ua(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ma(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Nu(t,this.kernelSize[0],this.padding,this.strides[0]),a=Nu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Aa(this.depthwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.depthwiseConstraint=ci(this.depthwiseRegularizer),e}}function Wu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ts("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Uu(e,t,n,r=!1,s,a,i=!1,o=!1){return h.tidy((()=>{const u=t.shape.length;if(u<3)throw new ts(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Hs(2,u));if(t=h.transpose(t,l),null!=a)throw new ns("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=h.cast(h.cast(s,"bool"),"float32")).rank===u-1&&(s=h.expandDims(s,-1)),s=h.transpose(s,l)),r&&(t=h.reverse(t,0),null!=s&&(s=h.reverse(s,0)));const c=[];let p,d=n;const f=t.shape[0],m=h.unstack(t);let g,y;null!=s&&(g=h.unstack(s));for(let t=0;t<f;++t){const n=m[t],r=h.tidy((()=>e(n,d)));if(null==s)p=r[0],d=r[1];else{const e=h.tidy((()=>{const e=g[t],n=h.sub(h.onesLike(e),e);return{output:h.add(h.mul(r[0],e),h.mul(d[0],n)),newStates:d.map(((t,s)=>h.add(h.mul(r[1][s],e),h.mul(t,n))))}}));p=e.output,d=e.newStates}o&&c.push(p)}if(o){const e=1;y=h.stack(c,e)}return[p,y,d]}))}Vu.className="DepthwiseConv2D",h.serialization.registerClass(Vu);class Gu extends Ha{constructor(e){let t;if(super(e),null==e.cell)throw new ts("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Qu({cells:e.cell}):e.cell,null==t.stateSize)throw new ts("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Va({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Hs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Da(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return h.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ns("Constants support is not implemented in RNN yet.");Da(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Va({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!h.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new ts(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Va({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,h.tidy)((()=>{if(!this.stateful)throw new Jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ts("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>h.zeros([n,e]))):this.states_=[h.zeros([n,this.cell.stateSize])];else if(null==e)h.dispose(this.states_),null!=this.keptStates&&(h.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>h.zeros([n,e]))):this.states_[0]=h.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ts(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):h.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!h.util.arraysEqual(r.shape,a))throw new ts(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>h.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Wu(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Va({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Wa){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,h.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Oa(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new ts(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Uu(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,h.tidy)((()=>{let t=h.zeros(e.shape);return t=h.sum(t,[1,2]),t=Ys(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?na(t,[1,e]):t)):this.cell.stateSize>1?[na(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Gu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ui(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Gu.className="RNN",h.serialization.registerClass(Gu);class ju extends Ha{}class Hu extends ju{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ws(this.units,"units"),this.activation=cu(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ra(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ra(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ra(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yu(e.kernelRegularizer),this.recurrentRegularizer=yu(e.recurrentRegularizer),this.biasRegularizer=yu(e.biasRegularizer),this.kernelConstraint=pi(e.kernelConstraint),this.recurrentConstraint=pi(e.recurrentConstraint),this.biasConstraint=pi(e.biasConstraint),this.dropout=Gs([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gs([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ma(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,h.tidy)((()=>{if(2!==e.length)throw new ts(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ju({ones:()=>h.onesLike(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ju({ones:()=>h.onesLike(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=sa(null!=a?h.mul(e,a):e,this.kernel.read()),null!=this.bias&&(s=ua(s,this.bias.read())),null!=i&&(n=h.mul(n,i));let o=h.add(s,sa(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:Aa(this.kernelInitializer),recurrentInitializer:Aa(this.recurrentInitializer),biasInitializer:Aa(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:ci(this.kernelConstraint),recurrentConstraint:ci(this.recurrentConstraint),biasConstraint:ci(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Hu.className="SimpleRNNCell",h.serialization.registerClass(Hu);class qu extends Gu{constructor(e){e.cell=new Hu(e),super(e)}call(e,t){return(0,h.tidy)((()=>{null!=this.cell.dropoutMask&&(h.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(h.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}qu.className="SimpleRNN",h.serialization.registerClass(qu);class Xu extends ju{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ts("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ws(this.units,"units"),this.activation=cu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ra(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ra(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ra(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yu(e.kernelRegularizer),this.recurrentRegularizer=yu(e.recurrentRegularizer),this.biasRegularizer=yu(e.biasRegularizer),this.kernelConstraint=pi(e.kernelConstraint),this.recurrentConstraint=pi(e.recurrentConstraint),this.biasConstraint=pi(e.biasConstraint),this.dropout=Gs([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gs([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ma(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,h.tidy)((()=>{if(2!==e.length)throw new ts(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ju({ones:()=>h.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ju({ones:()=>h.onesLike(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=h.mul(e,s[0]));let l=sa(e,this.kernel.read());this.useBias&&(l=ua(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=h.mul(r,a[0]));const c=this.recurrentKernel.read(),[p,d]=h.split(c,[2*this.units,this.units],c.rank-1),f=sa(r,p),[m,g,y]=h.split(l,3,l.rank-1),[b,x]=h.split(f,2,f.rank-1);i=this.recurrentActivation.apply(h.add(m,b)),o=this.recurrentActivation.apply(h.add(g,x));const v=sa(h.mul(o,r),d);u=this.activation.apply(h.add(y,v));const w=h.add(h.mul(i,r),h.mul(h.add(1,h.neg(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Aa(this.kernelInitializer),recurrentInitializer:Aa(this.recurrentInitializer),biasInitializer:Aa(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:ci(this.kernelConstraint),recurrentConstraint:ci(this.recurrentConstraint),biasConstraint:ci(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Xu.className="GRUCell",h.serialization.registerClass(Xu);class Ku extends Gu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Xu(e),super(e)}call(e,t){return(0,h.tidy)((()=>{null!=this.cell.dropoutMask&&(h.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(h.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ku.className="GRU",h.serialization.registerClass(Ku);class Yu extends ju{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ws(this.units,"units"),this.activation=cu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ra(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ra(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ra(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yu(e.kernelRegularizer),this.recurrentRegularizer=yu(e.recurrentRegularizer),this.biasRegularizer=yu(e.biasRegularizer),this.kernelConstraint=pi(e.kernelConstraint),this.recurrentConstraint=pi(e.recurrentConstraint),this.biasConstraint=pi(e.biasConstraint),this.dropout=Gs([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gs([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ma(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends da{apply(t,r){const s=e.apply([n]),a=(new ma).apply([n]),i=e.apply([2*n]);return ta(ta(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,h.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new ts(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ju({ones:()=>h.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ju({ones:()=>h.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=h.mul(e,a[0]));let p=sa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=h.mul(r,i[0])),p=h.add(p,sa(r,this.recurrentKernel.read())),this.useBias&&(p=ua(p,this.bias.read()));const[d,f,m,g]=h.split(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=h.add(h.mul(u,s),h.mul(o,this.activation.apply(m))),c=this.recurrentActivation.apply(g);const y=h.mul(c,this.activation.apply(l));return[y,y,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Aa(this.kernelInitializer),recurrentInitializer:Aa(this.recurrentInitializer),biasInitializer:Aa(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:ci(this.kernelConstraint),recurrentConstraint:ci(this.recurrentConstraint),biasConstraint:ci(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Yu.className="LSTMCell",h.serialization.registerClass(Yu);class Zu extends Gu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yu(e),super(e)}call(e,t){return(0,h.tidy)((()=>{null!=this.cell.dropoutMask&&(h.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(h.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Zu.className="LSTM",h.serialization.registerClass(Zu);class Qu extends ju{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,h.tidy)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Da(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Ls(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Ui(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ba(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Pa(t)}}function Ju(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):la(t(),n),o=()=>ca(i,t,r);return!s||s<=1?h.keep(o().clone()):Array(s).fill(void 0).map(o).map((e=>h.keep(e.clone())))}Qu.className="StackedRNNCells",h.serialization.registerClass(Qu);class el extends Gu{constructor(e){if(e.unroll)throw new ns("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ns("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Va({ndim:5})]}call(e,t){return h.tidy((()=>{if(null!=this.cell.dropoutMask&&(h.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(h.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ts("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return h.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=h.zeros(s);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){h.tidy((()=>{if(!this.stateful)throw new Jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new ts("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>h.zeros(s))):this.states_=[h.zeros(s)];else if(null==e)h.dispose(this.states_),null!=this.keptStates&&(h.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>h.zeros(s))):this.states_[0]=h.zeros(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ts(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):h.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!h.util.arraysEqual(n.shape,r))throw new ts(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>h.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Nu(u,r[0],s,a[0],i[0]),h=Nu(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}el.className="ConvRNN2D";class tl extends Yu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,ws(this.filters,"filters"),this.kernelSize=Iu(n,2,"kernelSize"),this.kernelSize.forEach((e=>ws(e,"kernelSize"))),this.strides=Iu(r||1,2,"strides"),this.strides.forEach((e=>ws(e,"strides"))),this.padding=s||"valid",Os(this.padding),this.dataFormat=a||"channelsLast",Fs(this.dataFormat),this.dilationRate=Iu(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ws(e,"dilationRate")))}build(e){var t;e=Ma(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ts(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends da{apply(e,t){return ea([n.apply([r]),h.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return h.tidy((()=>{if(3!==e.length)throw new ts(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ju({ones:()=>h.onesLike(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?h.mul(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ju({ones:()=>h.onesLike(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let f=o(s,d,0),m=o(s,d,1),g=o(s,d,2),y=o(s,d,3);const[b,x,v,w]=h.split(this.kernel.read(),4,3),[k,S,I,N]=this.useBias?h.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),l=this.inputConv(l,x,S,this.padding),c=this.inputConv(c,v,I,this.padding),p=this.inputConv(p,w,N,this.padding);const[T,C,_,E]=h.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,_),y=this.recurrentConv(y,E);const $=this.recurrentActivation.apply(h.add(u,f)),A=this.recurrentActivation.apply(h.add(l,m)),R=h.add(h.mul(A,a),h.mul($,this.activation.apply(h.add(c,g)))),D=h.mul(this.recurrentActivation.apply(h.add(p,y)),this.activation.apply(R));return[D,D,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=h.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ua(s,n,this.dataFormat):s}recurrentConv(e,t){return h.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}tl.className="ConvLSTM2DCell",h.serialization.registerClass(tl);class nl extends el{constructor(e){const t=new tl(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}nl.className="ConvLSTM2D",h.serialization.registerClass(nl);class rl extends Ha{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ca((()=>la(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}rl.className="Dropout",h.serialization.registerClass(rl);class sl extends rl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}sl.className="SpatialDropout1D",h.serialization.registerClass(sl);class al extends Ha{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ws(this.units,"units"),this.activation=cu(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ra(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ra(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=pi(e.kernelConstraint),this.biasConstraint=pi(e.biasConstraint),this.kernelRegularizer=yu(e.kernelRegularizer),this.biasRegularizer=yu(e.biasRegularizer),this.activityRegularizer=yu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ma(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ma(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e),r=Ss(this.activation.getClassName());let s;return null!=r?s=sa(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=sa(n,this.kernel.read()),null!=this.bias&&(s=ua(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:Aa(this.kernelInitializer),biasInitializer:Aa(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:ci(this.kernelConstraint),biasConstraint:ci(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}al.className="Dense",h.serialization.registerClass(al);class il extends Ha{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ma(e);for(const t of e.slice(1))if(null==t)throw new ts(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Us(e,1)]}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);let n=Oa(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,h.transpose)(n,e)}return function(e){if(e.rank<=1)throw new ts(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Us(e.shape,1)];return h.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}il.className="Flatten",h.serialization.registerClass(il);class ol extends Ha{constructor(e){super(e),this.supportsMasking=!0,this.activation=cu(e.activation)}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return this.activation.apply(n)}))}getConfig(){const e={activation:uu(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ol.className="Activation",h.serialization.registerClass(ol);class ul extends Ha{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,h.tidy)((()=>{return e=Oa(e),t=e,n=this.n,(0,h.tidy)((()=>{if(2!==t.shape.length)throw new ts(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return na(Ys(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ul.className="RepeatVector",h.serialization.registerClass(ul);class ll extends Ha{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new ts("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Us(e);if(null!==a){if(0===s||i%s!=0)throw new ts(n);r[a]=i/s}else if(i!==s)throw new ts(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,h.reshape)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ll.className="Reshape",h.serialization.registerClass(ll);class cl extends Ha{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Hs(1,e.dims.length+1);if(!h.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Va({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ma(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,h.transpose)(Oa(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}cl.className="Permute",h.serialization.registerClass(cl);class hl extends Ha{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Oa(e);return(0,h.any)((0,h.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e),r=(0,h.any)((0,h.notEqual)(n,this.maskValue),-1,!0);return(0,h.mul)(n,(0,h.cast)(r,n.dtype))}))}}hl.className="Masking",h.serialization.registerClass(hl);class pl extends Ha{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ls(e.inputLength))}this.inputDim=e.inputDim,ws(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ws(this.outputDim,"outputDim"),this.embeddingsInitializer=Ra(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yu(e.embeddingsRegularizer),this.activityRegularizer=yu(e.activityRegularizer),this.embeddingsConstraint=pi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,h.tidy)((()=>this.maskZero?(e=Oa(e),(0,h.notEqual)(e,(0,h.zerosLike)(e))):null))}computeOutputShape(e){if(e=Ma(e),null==this.inputLength)return[...e,this.outputDim];const t=ls(this.inputLength);if(t.length!==e.length-1)throw new ts(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new ts(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);let n=Oa(e);"int32"!==n.dtype&&(n=Ks(n,"int32"));const r=aa(this.embeddings.read(),(0,h.reshape)(n,[n.size]));return(0,h.reshape)(r,Ma(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Aa(this.embeddingsInitializer),embeddingsRegularizer:mu(this.embeddingsRegularizer),activityRegularizer:mu(this.activityRegularizer),embeddingsConstraint:ci(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}pl.className="Embedding",h.serialization.registerClass(pl);class dl extends Ha{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ns}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new ts("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ma(e)]),e.length<2)throw new ts(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ys(t),t.length>1)throw new ts(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ys(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,h.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=js(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Ys(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=h.reshape(r,[s].concat(Us(e.slice(1))));i=h.transpose(i,[1,0]),i=h.reshape(i,a),t.push(i),n=!0}else if(e>1){const s=Hs(1,e).concat([0]);t.push(h.transpose(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=h.reshape(h.transpose(h.reshape(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Hs(0,s-1));r=h.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ys(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return h.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ts("`mask` should be an Array");if(!Array.isArray(e))throw new ts("`inputs` should be an Array");if(t.length!==e.length)throw new ts(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:h.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=h.logicalAnd(n,t[e]);return n}))}}class fl extends dl{constructor(e){super(e)}mergeFunction(e){return(0,h.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=h.add(t,e[n]);return t}))}}fl.className="Add",h.serialization.registerClass(fl);class ml extends dl{constructor(e){super(e)}mergeFunction(e){return(0,h.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=h.mul(t,e[n]);return t}))}}ml.className="Multiply",h.serialization.registerClass(ml);class gl extends dl{constructor(e){super(e)}mergeFunction(e){return(0,h.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=h.add(t,e[n]);return h.mul(1/e.length,t)}))}}gl.className="Average",h.serialization.registerClass(gl);class yl extends dl{constructor(e){super(e)}mergeFunction(e){return(0,h.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=h.maximum(t,e[n]);return t}))}}yl.className="Maximum",h.serialization.registerClass(yl);class bl extends dl{constructor(e){super(e)}mergeFunction(e){return(0,h.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=h.minimum(t,e[n]);return t}))}}bl.className="Minimum",h.serialization.registerClass(bl);class xl extends dl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ts("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(h.util.arraysEqual(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new ts("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,h.tidy)((()=>ea(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ts("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ts("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ts("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ts(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return h.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(h.cast(h.onesLike(e[n]),"bool")):t[n].rank<e[n].rank?r.push(h.expandDims(t[n],-1)):r.push(t[n]);const s=h.concat(r,this.axis);return h.all(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function vl(e,t){for(;e<0;)e+=t;return e}xl.className="Concatenate",h.serialization.registerClass(xl);class wl extends dl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){h.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ns("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ts(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ts(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>vl(t,e[n].shape.length))):[vl(this.axes,n.shape.length),vl(this.axes,r.shape.length)],this.normalize&&(n=Gi(n,t[0]),r=Gi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ns("batchDot is not implemented for tensors of 4D or higher rank yet");if(h.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),h.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ns("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return h.tidy((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=h.reshape(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=h.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?h.sum(h.mul(e,t),a[0]):h.sum(h.mul(h.transpose(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=h.matMul(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=h.squeeze(i,t)}return 1===i.shape.length&&(i=h.expandDims(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[vl(this.axes,e.length),vl(this.axes,t.length)],n}computeOutputShape(e){h.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ns("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wl.className="Dot",h.serialization.registerClass(wl);class kl extends Ha{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return ca((()=>(0,h.add)(ra(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}kl.className="GaussianNoise",h.serialization.registerClass(kl);class Sl extends Ha{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return this.rate>0&&this.rate<1?ca((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,h.mul)(n,ra(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Sl.className="GaussianDropout",h.serialization.registerClass(Sl);class Il extends Ha{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oa(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,h.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Oa(e),r=-1.7580993408473766;let s=(0,h.greaterEqual)((0,h.randomUniform)(n),this.rate);s=Ks(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=(0,h.add)((0,h.mul)(t,s),(0,h.mul)((0,h.add)(s,-1),r));return(0,h.add)((0,h.mul)(o,a),i)};return ca(r,(()=>Oa(e)),t.training||!1)}return e}))}}function Nl(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=h.batchNorm2d(e,t,n,r,s,a);else if(3===e.rank)i=h.batchNorm3d(e,t,n,r,s,a);else{if(4!==e.rank)throw new ns(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=h.batchNorm4d(e,t,n,r,s,a)}return i}Il.className="AlphaDropout",h.serialization.registerClass(Il);class Tl extends Ha{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ra(e.betaInitializer||"zeros"),this.gammaInitializer=Ra(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ra(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ra(e.movingVarianceInitializer||"ones"),this.betaConstraint=pi(e.betaConstraint),this.gammaConstraint=pi(e.gammaConstraint),this.betaRegularizer=yu(e.betaRegularizer),this.gammaRegularizer=yu(e.gammaRegularizer)}build(e){e=Ma(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ts(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Va({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,h.tidy)((()=>{const n=null!=t.training&&t.training,r=Oa(e),s=r.shape,a=s.length,i=Hs(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=as(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!h.util.arraysEqual(l,Hs(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=(0,h.reshape)(this.movingMean.read(),u),t=(0,h.reshape)(this.movingVariance.read(),u),n=this.center?(0,h.reshape)(this.beta.read(),u):null,s=this.scale?(0,h.reshape)(this.gamma.read(),u):null;return Nl(r,e,t,n,s,this.epsilon)}return Nl(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,f]=function(e,t,n,r,s=.001){return h.util.arraysEqual(r.slice().sort(),Hs(0,e.rank-1))?function(e,t,n,r,s=.001){return(0,h.tidy)((()=>{const a=h.moments(e,r),i=a.mean,o=a.variance;return[Nl(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return(0,h.tidy)((()=>{const a=h.moments(e,r),i=a.mean,o=a.variance,u=[];for(const t of Hs(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,h.reshape)(i,u),c=(0,h.reshape)(o,u),p=null==t?null:(0,h.reshape)(t,u),d=null==n?null:(0,h.reshape)(n,u);return[Nl(e,l,c,d,p,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{h.tidy((()=>{const r=1-n,s=e.read(),a=h.mul(h.sub(s,t),r);e.write(h.sub(s,a))}))};return(()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Aa(this.betaInitializer),gammaInitializer:Aa(this.gammaInitializer),movingMeanInitializer:Aa(this.movingMeanInitializer),movingVarianceInitializer:Aa(this.movingVarianceInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer),betaConstraint:ci(this.betaConstraint),gammaConstraint:ci(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Tl.className="BatchNormalization",h.serialization.registerClass(Tl);class Cl extends Ha{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ra(e.betaInitializer||"zeros"),this.gammaInitializer=Ra(e.gammaInitializer||"ones"),this.betaRegularizer=yu(e.betaRegularizer),this.gammaRegularizer=yu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ma(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==ys(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Oa(e),r=n.shape,s=r.length;return(0,h.tidy)((()=>{let{mean:e,variance:t}=(0,h.moments)(n,this.axis,!0);const a=as(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?h.reshape(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=h.tile(e,l),t=h.tile(t,l),null!=o&&(o=h.tile(o,c)),null!=u&&(u=h.tile(u,c)),Nl(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Aa(this.betaInitializer),gammaInitializer:Aa(this.gammaInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Cl.className="LayerNormalization",h.serialization.registerClass(Cl);class _l extends Ha{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ts(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ts(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ts(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Va({ndim:4})]}computeOutputShape(e){let t,n;return e=Ma(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,h.tidy)((()=>{return t=Oa(e),n=this.padding,r=this.dataFormat,(0,h.tidy)((()=>{if(4!==t.rank)throw new ts(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ts("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ts(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],h.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function El(e,t,n,r,s,a){return(0,h.tidy)((()=>{let i;Fs(s),Ms(a),Os(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Cu(e,s);const o="same"===r?"same":"valid";return i="max"===a?h.maxPool(e,t,n,o):h.avgPool(e,t,n,o),"channelsFirst"===s&&(i=h.transpose(i,[0,3,1,2])),i}))}function $l(e,t,n,r,s,a){return(0,h.tidy)((()=>{let i;Fs(s),Ms(a),Os(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=_u(e,s);const o="same"===r?"same":"valid";return i="max"===a?h.maxPool3d(e,t,n,o):h.avgPool3d(e,t,n,o),"channelsFirst"===s&&(i=h.transpose(i,[0,4,1,2,3])),i}))}_l.className="ZeroPadding2D",h.serialization.registerClass(_l);class Al extends Ha{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ts(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ws(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ts(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ws(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Os(this.padding),this.inputSpec=[new Va({ndim:3})]}computeOutputShape(e){const t=Nu((e=Ma(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,h.tidy)((()=>{this.invokeCallHook(e,t),e=Ys(Oa(e),2);const n=this.poolingFunction(Oa(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return h.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Rl extends Al{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),El(e,t,n,r,s,"max")}}Rl.className="MaxPooling1D",h.serialization.registerClass(Rl);class Dl extends Al{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),El(e,t,n,r,s,"avg")}}Dl.className="AveragePooling1D",h.serialization.registerClass(Dl);class Fl extends Ha{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ts(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ws(this.poolSize,"poolSize"),ws(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fs(this.dataFormat),Os(this.padding),this.inputSpec=[new Va({ndim:4})]}computeOutputShape(e){e=Ma(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Nu(t,this.poolSize[0],this.padding,this.strides[0]),n=Nu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,h.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Oa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ol extends Fl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),El(e,t,n,r,s,"max")}}Ol.className="MaxPooling2D",h.serialization.registerClass(Ol);class Ml extends Fl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),El(e,t,n,r,s,"avg")}}Ml.className="AveragePooling2D",h.serialization.registerClass(Ml);class zl extends Ha{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ts(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ws(this.poolSize,"poolSize"),ws(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fs(this.dataFormat),Os(this.padding),this.inputSpec=[new Va({ndim:5})]}computeOutputShape(e){e=Ma(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Nu(t,this.poolSize[0],this.padding,this.strides[0]),n=Nu(n,this.poolSize[1],this.padding,this.strides[1]),r=Nu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,h.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Oa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ll extends zl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),$l(e,t,n,r,s,"max")}}Ll.className="MaxPooling3D",h.serialization.registerClass(Ll);class Bl extends zl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Fs(s),Os(r),$l(e,t,n,r,s,"avg")}}Bl.className="AveragePooling3D",h.serialization.registerClass(Bl);class Pl extends Ha{constructor(e){super(e),this.inputSpec=[new Va({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ns}}class Vl extends Pl{constructor(e){super(e||{})}call(e,t){return(0,h.tidy)((()=>{const t=Oa(e);return h.mean(t,1)}))}}Vl.className="GlobalAveragePooling1D",h.serialization.registerClass(Vl);class Wl extends Pl{constructor(e){super(e||{})}call(e,t){return(0,h.tidy)((()=>{const t=Oa(e);return h.max(t,1)}))}}Wl.className="GlobalMaxPooling1D",h.serialization.registerClass(Wl);class Ul extends Ha{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fs(this.dataFormat),this.inputSpec=[new Va({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ns}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gl extends Ul{call(e,t){return(0,h.tidy)((()=>{const t=Oa(e);return"channelsLast"===this.dataFormat?h.mean(t,[1,2]):h.mean(t,[2,3])}))}}Gl.className="GlobalAveragePooling2D",h.serialization.registerClass(Gl);class jl extends Ul{call(e,t){return(0,h.tidy)((()=>{const t=Oa(e);return"channelsLast"===this.dataFormat?h.max(t,[1,2]):h.max(t,[2,3])}))}}jl.className="GlobalMaxPooling2D",h.serialization.registerClass(jl);class Hl extends Ha{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ui(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class ql extends Hl{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ma(e)).length<3)throw new ts(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ma(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,h.tidy)((()=>Uu(((e,n)=>[Oa(this.layer.call(e,t)),[]]),e=Oa(e),[],!1,null,null,!1,!0)[1]))}}ql.className="TimeDistributed",h.serialization.registerClass(ql);class Xl extends Hl{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ui(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ui(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,xs(Rs,"BidirectionalMergeMode",s),e.weights)throw new ns("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):us(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Wu(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ts("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Va({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ns("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Wa;for(const e of a)if(e instanceof Wa!==o)throw new ts("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,h.tidy)((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=h.reverse(s,1)),"concat"===this.mergeMode?i=ea([r,s]):"sum"===this.mergeMode?i=h.add(r,s):"ave"===this.mergeMode?i=h.mul(.5,h.add(r,s)):"mul"===this.mergeMode?i=h.mul(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ls(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ls(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ui(t.layer);if(delete t.layer,null!=t.numConstants)throw new ns("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Kl(e){return new Xa(e)}function Yl(e){return new wu(e)}function Zl(e){return new bu(e)}function Ql(e){return new xu(e)}function Jl(e){return new vu(e)}function ec(e){return new Su(e)}function tc(e){return new ku(e)}function nc(e){return new Lu(e)}function rc(e){return new Ru(e)}function sc(e){return new Fu(e)}function ac(e){return new Du(e)}function ic(e){return new Ou(e)}function oc(e){return new zu(e)}function uc(e){return new Bu(e)}function lc(e){return new Pu(e)}function cc(e){return new Vu(e)}function hc(e){return new ol(e)}function pc(e){return new al(e)}function dc(e){return new rl(e)}function fc(e){return new sl(e)}function mc(e){return new il(e)}function gc(e){return new ul(e)}function yc(e){return new ll(e)}function bc(e){return new cl(e)}function xc(e){return new pl(e)}function vc(e){return new fl(e)}function wc(e){return new gl(e)}function kc(e){return new xl(e)}function Sc(e){return new yl(e)}function Ic(e){return new bl(e)}function Nc(e){return new ml(e)}function Tc(e){return new wl(e)}function Cc(e){return new Tl(e)}function _c(e){return new Cl(e)}function Ec(e){return new _l(e)}function $c(e){return new Dl(e)}function Ac(e){return $c(e)}function Rc(e){return $c(e)}function Dc(e){return new Ml(e)}function Fc(e){return Dc(e)}function Oc(e){return Dc(e)}function Mc(e){return new Bl(e)}function zc(e){return Mc(e)}function Lc(e){return Mc(e)}function Bc(e){return new Vl(e)}function Pc(e){return new Gl(e)}function Vc(e){return new Wl(e)}function Wc(e){return new jl(e)}function Uc(e){return new Rl(e)}function Gc(e){return new Ol(e)}function jc(e){return new Ll(e)}function Hc(e){return new Ku(e)}function qc(e){return new Xu(e)}function Xc(e){return new Zu(e)}function Kc(e){return new Yu(e)}function Yc(e){return new qu(e)}function Zc(e){return new Hu(e)}function Qc(e){return new nl(e)}function Jc(e){return new tl(e)}function eh(e){return new Gu(e)}function th(e){return new Qu(e)}function nh(e){return new Xl(e)}function rh(e){return new ql(e)}Xl.className="Bidirectional",h.serialization.registerClass(Xl);const sh=Vc,ah=Wc,ih=Uc,oh=Gc;function uh(e){return new kl(e)}function lh(e){return new Sl(e)}function ch(e){return new Il(e)}function hh(e){return new hl(e)}function ph(e,t){return eo(e,t)}function dh(e,t){return so(e,t)}function fh(e,t){return ao(e,t)}function mh(e,t){return to(e,t)}function gh(e,t){return io(e,t)}function yh(e,t){return ro(e,t)}function bh(e,t){return function(e,t){return(0,h.tidy)((()=>{const n=no(e,t),r=function(e,t){return(0,h.tidy)((()=>h.cast(h.sum(h.logicalAnd(h.equal(e,1),h.equal(t,0))),"float32")))}(e,t),s=h.add(n,r);return h.cast(h.where(h.greater(s,0),h.div(n,s),0),"float32")}))}(e,t)}function xh(e,t){return Zi(e,t)}function vh(e,t){return Hi(e,t)}function wh(e,t){return qi(e,t)}function kh(e,t){return qi(e,t)}function Sh(e,t){return qi(e,t)}function Ih(e,t){return ji(e,t)}function Nh(e,t){return ji(e,t)}function Th(e,t){return ji(e,t)}function Ch(e){return new du(e)}function _h(e){return hu(t=e),new du({l1:null!=t?t.l1:null,l2:0});var t}function Eh(e){return hu(t=e),new du({l2:null!=t?t.l2:null,l1:0});var t}class $h extends Oi{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Lo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Ah(e,t){return e<t}function Rh(e,t){return e>t}class Dh extends $h{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ns("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Ah:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Rh:this.monitorFunc=Ah,this.monitorFunc===Ah&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Ah?1/0:-1/0}async onEpochEnd(e,t){await Ri(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Fh={earlyStopping:function(e){return new Dh(e)}};var Oh,Mh=n(4618),zh=n(6377);function Lh(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Uh(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Lh(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Bh(e,t=Vh){return Ph(e,t)}function Ph(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Uh(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Ph(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Vh(e){return null===e?null:Uh(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Wh(e,t){const n=new Map;Lh(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(h.util.isPromise(t)){const r=await t;n.set(e,r)}}return Lh(e,t,n)}function Uh(e){let t=!1;if(h.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4589);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof h.Tensor)&&!(e instanceof Promise)&&!t)}function Gh(e){return e instanceof h.Tensor?{value:e.clone(),recurse:!1}:Uh(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class jh{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Hh extends jh{constructor(){super(Hh.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function qh(e){return new Yh(e)}function Xh(e){return new Zh(e)}Hh.INITIAL_CAPACITY=32;class Kh{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new sp(this,e)}filter(e){return new np(this,e)}map(e){return new rp(this,e)}mapAsync(e){return new ap(this,e)}serialMapAsync(e){return new ap(this,e).serial()}flatmap(e){return new op(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new tp(this,e,t)}columnMajorBatch(e,t=!0,n=Vh){return this.rowMajorBatch(e,t).map((e=>Bh(e,n)))}concatenate(e,t){return new up(qh([this,e]),t)}take(e){return e<0||null==e?this:new ep(this,e)}skip(e){return e<0||null==e?this:new Jh(this,e)}prefetch(e){return new cp(this,e)}shuffle(e,t){return new hp(this,e,t)}serial(){return new Qh(this)}}class Yh extends Kh{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return Lh(e,t)}(t,Gh)),done:!1};var t}}class Zh extends Kh{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Qh extends Kh{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Jh extends Kh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;h.dispose(e.value)}return this.upstream.next()}}class ep extends Kh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class tp extends Kh{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class np extends Kh{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;h.dispose(e.value)}}}class rp extends Kh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=h.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=h.tensor_util.getTensorsInContainer(n);for(const e of t)h.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class sp extends Kh{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class ap extends Kh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=h.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=h.tensor_util.getTensorsInContainer(n);for(const e of t)h.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class ip extends Kh{constructor(){super(),this.outputQueue=new Hh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class op extends ip{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=h.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=h.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)h.tensor_util.isTensorInList(e,r)||e.dispose();return!0}}class up extends Kh{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Oh||(Oh={}));class lp extends Kh{constructor(e,t=Oh.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Wh(this.iterators,(function(e){return e instanceof Kh?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Oh.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Oh.SHORTEST:return{value:null,done:!0};case Oh.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class cp extends Kh{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new jh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class hp extends cp{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=zh.alea(n||h.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class pp{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return h.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),dp((async()=>(await n.iterator()).columnMajorBatch(e,t,gp)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,dp((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,dp((async()=>(await t.iterator()).filter((t=>h.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return dp((async()=>(await t.iterator()).map((t=>h.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return dp((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return dp((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,dp((async()=>{return n=Xh((async()=>({value:await t.iterator(),done:!1}))).take(e),new up(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,dp((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=zh.alea(t||h.util.now().toString());return dp((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,dp((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function dp(e,t=null){return new class extends pp{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function fp(e){return dp((async()=>qh(e)),e.length)}function mp(e){if(!Uh(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return dp((async()=>function(e,t=Oh.FAIL){return new lp(e,t)}(await Wh(e,(e=>{if(e instanceof pp)return{value:e.iterator(),recurse:!1};if(Uh(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),Oh.SHORTEST)),t)}function gp(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof h.Tensor||h.util.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof h.Tensor?h.stack(e):h.tensor(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}pp.MAX_BUFFER_SIZE=1e4;class yp extends pp{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const bp='"',xp=Symbol("out"),vp=Symbol("field"),wp=Symbol("quote"),kp=Symbol("quoteafterquote"),Sp=Symbol("quoteinquote");class Ip extends pp{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new yp(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(h.util.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&h.util.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(h.util.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=xp;for(let t=0;t<s;t++)switch(a){case xp:switch(e.charAt(t)){case bp:r=t+1,a=wp;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=xp;break;default:a=vp,r=t}break;case vp:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=xp,r=t+1);break;case wp:e.charAt(t)===bp&&(a=kp);break;case kp:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=xp,r=t+1;break;case bp:a=wp;break;default:a=Sp}break;case Sp:e.charAt(t)===bp&&(a=wp)}if(a===kp?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class Np extends Kh{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!(0,h.env)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new Np(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(h.util.sizeFromShape(t));return n.set(e,n.length-e.length),(0,h.tensor)(n,t)}}class Tp extends Kh{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,h.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=(0,h.tensor2d)([r,n,a,s],[1,4])}else this.cropBox=(0,h.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!(0,h.env)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new Tp(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&h.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=h.browser.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,h.tidy)((()=>{const t=(0,h.expandDims)((0,h.cast)(e,"float32"),0);let n;n=h.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return(0,h.reshape)(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class Cp{}class _p extends Kh{split(e){return new Ep(this,e)}}class Ep extends _p{constructor(e,t){super(),this.upstream=e,this.impl=new $p(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class $p extends ip{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class Ap extends Kh{decodeUTF8(){return new Rp(this)}}class Rp extends _p{constructor(e){super(),this.upstream=e,this.impl=new Dp(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Dp extends ip{constructor(e){if(super(),this.upstream=e,(0,h.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4589);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,h.env)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class Fp extends Ap{constructor(e,t={}){super(),this.file=e,this.options=t,h.util.assert(e instanceof Uint8Array||!!(0,h.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function Op(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class Mp extends Cp{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Op(this.input)&&(0,h.env)().get("IS_NODE")){const e=n(4749);this.input=e.readFileSync(this.input.slice(7))}return new Fp(this.input,this.options)}}class zp extends Cp{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Op(this.url)?new Mp(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||h.util.fetch)(r,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new Fp(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function Lp(e,t={}){return new Ip(new zp(e),t)}function Bp(e){const t=Xh(e);return dp((async()=>t))}function Pp(e){return dp((async()=>{const t=await e();return Xh((()=>t.next()))}))}async function Vp(e,t){return Tp.create(e,t)}async function Wp(e){return Np.create(e)}const Up="3.19.0";function Gp(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&h.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const jp=h.kernel_impls.whereImpl;class Hp extends h.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new h.DataStorage(this,(0,h.engine)())}nextDataId(){return Hp.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,h.env)().get("IS_NODE")&&h.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&h.util.isString(n[0])){const s=n.map((e=>h.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return h.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>h.util.decodeString(e)));return(0,h.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,h.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,h.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=h.util.now();return e(),{kernelMs:h.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Gp([e],"where");const t=this.readSync(e.dataId);return jp(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function qp(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Gp(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=h.util.sizeFromShape(i.shape),c=n||i.dtype,p=h.util.getArrayFromDType(c,l);for(let e=0;e<l;++e)p[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,p)}}function Xp(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Gp(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}Hp.nextDataId=0,(0,h.registerBackend)("cpu",(()=>new Hp),1);const Kp=qp(h.Elu,(e=>e>=0?e:Math.exp(e)-1)),Yp={kernelName:h.Elu,backendName:"cpu",kernelFunc:Kp};function Zp(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Qp={kernelName:h.Identity,backendName:"cpu",kernelFunc:Zp};function Jp(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Gp([s],"leakyRelu");const i=h.util.sizeFromShape(s.shape),o=n.data.get(s.dataId).values,u=h.util.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const ed={kernelName:h.LeakyRelu,backendName:"cpu",kernelFunc:Jp};function td(e){return(t,n,r,s,a)=>{const i=h.backend_util.assertAndGetBroadcastShape(t,n),o=i.length,u=h.util.computeStrides(i),l=h.util.sizeFromShape(i),c=h.util.getTypedArrayFromDType(a,l),p=t.length,d=n.length,f=h.util.computeStrides(t),m=h.util.computeStrides(n),g=h.backend_util.getBroadcastDims(t,i),y=h.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<c.length;++t){const n=h.util.indexToLoc(t,o,u),a=n.slice(-p);g.forEach((e=>a[e]=0));const i=h.util.locToIndex(a,p,f),l=n.slice(-d);y.forEach((e=>l[e]=0));const b=h.util.locToIndex(l,d,m);c[t]=e(r[i],s[b])}return[c,i]}}const nd=td(((e,t)=>e<0?t*e:e));function rd(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Gp([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=nd(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const sd={kernelName:h.Prelu,backendName:"cpu",kernelFunc:rd},ad=qp(h.Relu,(e=>Math.max(0,e))),id={kernelName:h.Relu,backendName:"cpu",kernelFunc:ad},od=qp(h.Relu6,(e=>Math.min(Math.max(0,e),6))),ud={kernelName:h.Relu6,backendName:"cpu",kernelFunc:od};function ld(e){return(t,n,r)=>{const s=h.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const cd=ld((e=>1/(1+Math.exp(-e)))),hd=qp(h.Sigmoid,(e=>1/(1+Math.exp(-e)))),pd={kernelName:h.Sigmoid,backendName:"cpu",kernelFunc:hd};function dd(e,t,n,r,s){if("linear"===n)return Zp({inputs:{x:t},backend:e});if("relu"===n)return ad({inputs:{x:t},backend:e});if("elu"===n)return Kp({inputs:{x:t},backend:e});if("relu6"===n)return od({inputs:{x:t},backend:e});if("prelu"===n)return rd({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Jp({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return hd({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function fd(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const md={kernelName:h.Complex,backendName:"cpu",kernelFunc:fd};function gd(e,t,n="float32"){if("complex64"===n)return fd({inputs:{real:gd(e,t,"float32"),imag:gd(e,t,"float32")},backend:e});const r=h.util.makeZerosTypedArray(h.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function yd(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const bd={kernelName:h.Real,backendName:"cpu",kernelFunc:yd};function xd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Zp({inputs:{x:s},backend:n});const e=gd(n,s.shape,s.dtype),t=xd({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=fd({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=yd({inputs:{input:s},backend:n}),t=xd({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!h.util.hasEncodingLoss(s.dtype,a)){const e=Zp({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=h.util.toTypedArray([0],s.dtype),[r,a]=td(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const vd={kernelName:h.Cast,backendName:"cpu",kernelFunc:xd};function wd(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;Gp([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?h.backend_util.fromUint8ToStringArray(u):u,p="string"===a.dtype?h.backend_util.fromUint8ToStringArray(l):l,d=r||a.dtype,[f,m]=t(a.shape,i.shape,c,p,d);return o.makeTensorInfo(m,d,f)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=xd({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=xd({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=fd({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function kd(e){return(t,n,r,s,a,i)=>{const o=h.backend_util.assertAndGetBroadcastShape(t,n),u=h.util.sizeFromShape(o),l=o.length,c=h.util.computeStrides(o),p=h.util.getTypedArrayFromDType("float32",u),d=h.util.getTypedArrayFromDType("float32",u),f=h.backend_util.getBroadcastDims(t,o),m=h.backend_util.getBroadcastDims(n,o),g=h.backend_util.mergeRealAndImagArrays(r,s),y=h.backend_util.mergeRealAndImagArrays(a,i),b=t.length,x=h.util.computeStrides(t),v=n.length,w=h.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,r=t%y.length,s=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[t]=s.real,d[t]=s.imag}else for(let t=0;t<p.length;t++){const n=h.util.indexToLoc(t,l,c),r=n.slice(-b);f.forEach((e=>r[e]=0));const s=h.util.locToIndex(r,b,x),a=n.slice(-v);m.forEach((e=>a[e]=0));const i=h.util.locToIndex(a,v,w),o=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}const Sd=td(((e,t)=>e+t)),Id=kd(((e,t,n,r)=>({real:e+n,imag:t+r}))),Nd=wd(h.Add,Sd,Id),Td={kernelName:h.Add,backendName:"cpu",kernelFunc:Nd};function Cd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=h.util.sizeFromShape(s.shape),o=h.util.inferFromImplicitShape(a,i),u=h.util.sizeFromShape(o);h.util.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const _d={kernelName:h.Reshape,backendName:"cpu",kernelFunc:Cd};function Ed(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Gp([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?s.shape[u-1]:s.shape[u-2],f=o?a.shape[l-2]:a.shape[l-1],m=s.shape.slice(0,-2),g=a.shape.slice(0,-2),y=h.util.sizeFromShape(m),b=h.util.sizeFromShape(g),x=h.broadcast_util.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,f]);h.util.assert(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[b,f,p]:[b,p,f],w=Cd({inputs:{x:s},backend:n,attrs:{shape:i?[y,c,d]:[y,d,c]}}),k=Cd({inputs:{x:a},backend:n,attrs:{shape:v}}),S=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(y,b),C=n.data.get(w.dataId).values,_=n.data.get(k.dataId).values,E=h.util.computeStrides(w.shape),$=h.util.computeStrides(k.shape),[A,R,D]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,O,M]=o?[1,$[1],$[0]]:[$[1],1,$[0]],z=I*N,L=(0,h.buffer)([T,I,N],w.dtype),B=L.values,P=n.blockSize;for(let e=0;e<T;e++)for(let t=0;t<I;t+=P)for(let n=0;n<N;n+=P)for(let r=0;r<S;r+=P){const s=Math.min(t+P,I),a=Math.min(n+P,N),i=Math.min(r+P,S);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,y-1)*A,a=Math.min(e,b-1)*M;n+=C[r+o*R+s*D]*_[s*F+t*O+a]}B[e*z+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,L.dtype,L.values)}const $d={kernelName:h.BatchMatMul,backendName:"cpu",kernelFunc:Ed},Ad={kernelName:h._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=Ed({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=Nd({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=dd(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function Rd(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Dd={kernelName:h.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Gp(t,"abs");let r=new Float32Array(h.util.sizeFromShape(t.shape));return r=Rd(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Fd=qp(h.Acos,(e=>Math.acos(e))),Od={kernelName:h.Acos,backendName:"cpu",kernelFunc:Fd},Md=qp(h.Acosh,(e=>Math.acosh(e))),zd={kernelName:h.Acosh,backendName:"cpu",kernelFunc:Md},Ld={kernelName:h.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Gp(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=(0,h.buffer)(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Bd(e,t,n,r,s){const a=t.length,i=h.util.sizeFromShape(t),o=h.util.computeStrides(t),u=h.util.computeStrides(s),l=h.util.getTypedArrayFromDType(n,h.util.sizeFromShape(s));for(let t=0;t<i;++t){const n=h.util.indexToLoc(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[h.util.locToIndex(s,a,u)]=e[t]}return l}function Pd(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Gp(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=Bd(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Vd={kernelName:h.Transpose,backendName:"cpu",kernelFunc:Pd},Wd={kernelName:h.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Gp(s,"all");const o=h.util.parseAxisParam(a,s.shape);let u=o;const l=h.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Pd({inputs:{x:s},backend:n,attrs:{perm:l}}),u=h.backend_util.getInnerMostAxes(u.length,s.shape.length)),h.backend_util.assertAxesAreInnerMostDims("all",u,c.shape.length);const[p,d]=h.backend_util.computeOutAndReduceShapes(c.shape,u),f=h.util.sizeFromShape(d),m=h.util.makeZerosTypedArray(h.util.sizeFromShape(p),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n&&r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(p,c.dtype,m);if(i){const e=Cd({inputs:{x:y},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Ud={kernelName:h.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Gp(s,"any");const o=h.util.parseAxisParam(a,s.shape);let u=o;const l=h.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Pd({inputs:{x:s},backend:n,attrs:{perm:l}}),u=h.backend_util.getInnerMostAxes(u.length,s.shape.length)),h.backend_util.assertAxesAreInnerMostDims("any",u,c.shape.length);const[p,d]=h.backend_util.computeOutAndReduceShapes(c.shape,u),f=h.util.sizeFromShape(d),m=h.util.makeZerosTypedArray(h.util.sizeFromShape(p),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n||r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(p,c.dtype,m);if(i){const e=Cd({inputs:{x:y},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Gd={kernelName:h.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Gp(s,"argMax");let i=h.util.parseAxisParam(a,s.shape);const o=h.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Pd({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=h.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],h.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,p]=h.backend_util.computeOutAndReduceShapes(u.shape,i),d=h.util.sizeFromShape(c),f=h.util.makeZerosTypedArray(d,"int32"),m=h.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const s=g[t+e];s>n&&(n=s,r=e)}f[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",f)}},jd={kernelName:h.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Gp(s,"argMin");let i=h.util.parseAxisParam(a,s.shape);const o=h.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Pd({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=h.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],h.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,p]=h.backend_util.computeOutAndReduceShapes(u.shape,i),d=h.util.sizeFromShape(c),f=h.util.makeZerosTypedArray(d,"int32"),m=h.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const s=g[t+e];s<n&&(n=s,r=e)}f[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",f)}},Hd=qp(h.Asin,(e=>Math.asin(e))),qd={kernelName:h.Asin,backendName:"cpu",kernelFunc:Hd},Xd=qp(h.Asinh,(e=>Math.asinh(e))),Kd={kernelName:h.Asinh,backendName:"cpu",kernelFunc:Xd},Yd=qp(h.Atan,(e=>Math.atan(e))),Zd={kernelName:h.Atan,backendName:"cpu",kernelFunc:Yd},Qd=td(((e,t)=>Math.atan2(e,t))),Jd=wd(h.Atan2,Qd),ef={kernelName:h.Atan2,backendName:"cpu",kernelFunc:Jd},tf=qp(h.Atanh,(e=>Math.atanh(e))),nf={kernelName:h.Atanh,backendName:"cpu",kernelFunc:tf};function rf(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,h.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,h=t*r[0];for(let t=0;t<s.inChannels;++t)for(let g=0;g<s.outHeight;++g){const b=g*i-d,w=Math.max(0,b),k=Math.min(s.inHeight,c+b),S=n+g*x;for(let n=0;n<s.outWidth;++n){const i=n*o-f,c=Math.max(0,i),d=Math.min(s.inWidth,p+i);let g=m,b=0,x=0;for(let n=w;n<k;n+=u){const s=h+n*r[1];for(let n=c;n<d;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>g?g=i:"avg"===a&&(b+=i,x++)}if(isNaN(g))break}y[S+n*v+t]="avg"===a?b/x:g}}}return g}function sf(e,t,n,r,s=!1,a=!1){const i=(0,h.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=(0,h.buffer)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const h=n*o-f;let y=h;for(;y<0;)y+=l;const b=Math.min(r.inHeight,p+h);for(let o=0;o<r.outWidth;++o){const p=o*u-m;let f=p;for(;f<0;)f+=c;const x=Math.min(r.inWidth,d+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-h;for(let o=f;o<x;o+=c){const u=o-p,l=g.get(e,n,o,t);l>v&&(v=l,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(w,e,n,o,t)}}return i}function af(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,p=s.dilationWidth,d=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,h.buffer)(s.outShape,n),w=v.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*k,h=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const k=v*i-g;let T=k;for(;T<0;)T+=l;const C=Math.min(s.inDepth,d+k),_=n+v*S;for(let n=0;n<s.outHeight;++n){const i=n*o-y;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,f+i),v=_+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=p;const f=Math.min(s.inWidth,m+i),y=v+n*N;let k=x,S=0,I=0;for(let n=T;n<C;n+=l){const s=h+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<f;n+=p){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(S+=s,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+t]="avg"===a?S/I:k}}}}return v}const of={kernelName:h.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Gp(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=h.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&h.util.arraysEqual(l.inShape,l.outShape))c=Zp({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=h.util.computeStrides(s.shape),r=rf(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},uf={kernelName:h.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;Gp(s,"avgPool3d");const c=h.backend_util.computePool3DInfo(s.shape,a,i,1,o,u,l),p=af(n.data.get(s.dataId).values,s.shape,s.dtype,h.util.computeStrides(s.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},lf={kernelName:h.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;Gp([s,a],"avgPool3DGrad");const c=h.backend_util.computePool3DInfo(a.shape,i,o,1,u,l),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,v=c.dilationWidth,w=c.effectiveFilterDepth,k=c.effectiveFilterHeight,S=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=S-1-c.padInfo.left,T=k-1-c.padInfo.top,C=(0,h.buffer)(a.shape,"float32"),_=1/(m*g*y),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-T,o=s-N;let u=0;for(let n=0;n<w;n+=b){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<S;n+=v){const a=(o+n)/f;a<0||a>=c.outWidth||Math.floor(a)!==a||(u+=E.get(e,r,s,a,t))}}}C.set(u*_,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},cf={kernelName:h.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Gp([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=h.backend_util.computePool2DInfo(i.shape,o,u,1,l),p=c.strideHeight,d=c.strideWidth,f=c.filterHeight,m=c.filterWidth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=x-1-c.padInfo.left,w=b-1-c.padInfo.top,k=(0,h.buffer)(i.shape,"float32"),S=1/(f*m),I=n.data.get(s.dataId).values,N=(0,h.buffer)(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-v;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=y){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=N.get(e,r,s,t))}}k.set(i*S,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},hf={kernelName:h.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;h.util.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h.util.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h.util.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Gp([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),y=m.length,b=f.length,x=d.length,v=p.length;let w=0,k=0,S=0,I=0;for(let e=0;e<c.length;++e)g[e]=m[w++]+(c[e]-p[k++])*f[S++]/Math.sqrt(d[I++]+l),w>=y&&(w=0),k>=v&&(k=0),S>=b&&(S=0),I>=x&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function pf(e,t,n,r,s){const a=h.slice_util.isSliceContinous(r,t,n),i=h.util.sizeFromShape(n),o=h.util.computeStrides(r);if(a){const n=h.slice_util.computeFlatOffset(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===s?h.backend_util.fromUint8ToStringArray(e):e,l=(0,h.buffer)(r,s,u),c=(0,h.buffer)(n,s);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));c.set(l.get(...r),...n)}return"string"===s?h.backend_util.fromStringArrayToUint8(c.values):c.values}function df(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Gp(s,"slice");const[o,u]=h.slice_util.parseSliceParams(s,a,i);h.slice_util.assertParamsValid(s,o,u);const l=pf(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const ff={kernelName:h.Slice,backendName:"cpu",kernelFunc:df},mf={kernelName:h.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Gp([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=h.backend_util.getReshaped(s.shape,a,o),l=h.backend_util.getPermuted(u.length,a.length),c=h.backend_util.getReshapedPermuted(s.shape,a,o),p=h.backend_util.getSliceBeginCoords(i,a.length),d=h.backend_util.getSliceSize(c,i,a.length),f=Cd({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Pd({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Cd({inputs:{x:m},backend:n,attrs:{shape:c}}),y=df({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function gf(e,t,n,r,s){const a=h.util.sizeFromShape(r),i=h.util.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function yf(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=(0,h.buffer)([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const bf={kernelName:h.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=gf(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},xf={kernelName:h.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=h.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},vf=ld((e=>Math.ceil(e))),wf=Xp(h.Ceil,vf),kf={kernelName:h.Ceil,backendName:"cpu",kernelFunc:wf},Sf=qp(h.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),If={kernelName:h.ClipByValue,backendName:"cpu",kernelFunc:Sf},Nf={kernelName:h.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(h.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Tf(e,t,n,r){const s=h.util.getArrayFromDType(n,h.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=h.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?h.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function Cf(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const _f={kernelName:h.Imag,backendName:"cpu",kernelFunc:Cf};function Ef(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=h.util.parseAxisParam(s,t[0].shape)[0];let i=h.backend_util.computeOutShape(t.map((e=>e.shape)),a);if(0===h.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>h.util.sizeFromShape(e.shape)>0));if(1===o.length)return Zp({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(h.backend_util.assertParamsConsistent(u,a),"complex64"===o[0].dtype){const e=o.map((e=>yd({inputs:{input:e},backend:n}))),t=o.map((e=>Cf({inputs:{input:e},backend:n}))),r=Ef({inputs:e,backend:n,attrs:{axis:a}}),s=Ef({inputs:t,backend:n,attrs:{axis:a}}),i=fd({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=h.util.sizeFromShape(e.shape.slice(a));return Cd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=h.backend_util.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],d=Tf(c,i,t[0].dtype,p),f=h.backend_util.computeOutShape(o.map((e=>e.shape)),a),m=n.makeTensorInfo(f,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const $f={kernelName:h.Concat,backendName:"cpu",kernelFunc:Ef};function Af(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Gp([s,a],"conv2d");const p=h.backend_util.convertConv2DDataFormat(u),d=h.backend_util.computeConv2DInfo(s.shape,a.shape,i,l,o,c,!1,p),f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,v="channelsLast"===d.dataFormat,w=new h.TensorBuffer(d.outShape,s.dtype),k=h.util.computeStrides(s.shape),S=h.util.computeStrides(a.shape),I=k[0],N=v?k[1]:k[2],T=v?k[2]:1,C=v?1:k[1],_=w.strides[0],E=v?w.strides[1]:w.strides[2],$=v?w.strides[2]:1,A=v?1:w.strides[1],R=n.data.get(s.dataId).values,D=n.data.get(a.dataId).values,F=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*_;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-x;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*S[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){const t=r+e*$,n=e*d.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=i+r*T;let o=a+e*S[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*D[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const Rf={kernelName:h.Conv2D,backendName:"cpu",kernelFunc:Af},Df={kernelName:h.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Gp([s,a],"conv2dBackpropFilter");const p=h.backend_util.convertConv2DDataFormat(u),d=h.backend_util.computeConv2DInfo(s.shape,c,i,1,o,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=d,b="channelsLast"===d.dataFormat,x=new h.TensorBuffer(d.filterShape,"float32"),v=d.padInfo.left,w=d.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,I=new h.TensorBuffer(s.shape,s.dtype,k),N=new h.TensorBuffer(a.shape,a.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/f)),n=Math.min(d.outHeight,(d.inHeight+w-e)/f);for(let r=0;r<y;++r){const s=Math.max(0,Math.ceil((v-r)/m)),a=Math.min(d.outWidth,(d.inWidth+v-r)/m);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*f-w;for(let e=s;e<a;++e){const n=r+e*m-v;u+=b?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}x.set(u,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Ff={kernelName:h.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Gp([s,a],"conv2dBackpropInput");const p=h.util.computeStrides(a.shape),d=h.util.computeStrides(s.shape);let f=h.backend_util.convertConv2DDataFormat(l);const m=h.backend_util.computeConv2DInfo(i,a.shape,o,1,u,c,!1,f),g=new h.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,[v,w,k]=p,{batchSize:S,filterHeight:I,filterWidth:N,inChannels:T,inHeight:C,inWidth:_,outChannels:E,outHeight:$,outWidth:A,strideHeight:R,strideWidth:D}=m;f=m.dataFormat;const F=I-1-m.padInfo.top,O=N-1-m.padInfo.left,M="channelsLast"===f,z=g.strides[0],L=M?g.strides[1]:g.strides[2],B=M?g.strides[2]:1,P=M?1:g.strides[1],V=d[0],W=M?d[1]:d[2],U=M?d[2]:1,G=M?1:d[1];for(let e=0;e<S;++e)for(let t=0;t<T;++t)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min($,(I+r)/R);for(let i=0;i<_;++i){const o=i-O,u=Math.max(0,Math.ceil(o/D)),l=Math.min(A,(N+o)/D);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=V*e+W*n+U*r,i=v*(I-1-s)+w*(N-1-(r*D-o))+k*t;for(let e=0;e<E;++e)c+=b[a+G*e]*x[i+e]}}y[z*e+L*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Of={kernelName:h.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;Gp([s,a],"conv3d");const l=h.backend_util.computeConv3DInfo(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=l,b=y.front,x=y.left,v=y.top,w=new h.TensorBuffer(l.outShape,s.dtype),k=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,I=w.values,N=h.util.computeStrides(s.shape),T=h.util.computeStrides(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*f;if(n<0||n>=l.inDepth)continue;const a=e*T[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-v;for(let e=0;e<p;++e){const r=n+e*m;if(r<0||r>=l.inHeight)continue;const s=a+e*T[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const a=s+e*T[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=k[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*S[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Mf={kernelName:h.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;Gp([s,a],"conv3dBackpropFilterV2");const l=h.util.computeStrides(s.shape),c=h.util.computeStrides(a.shape),p=h.backend_util.computeConv3DInfo(s.shape,u,i,1,o),d=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=new h.TensorBuffer(p.filterShape,"float32"),v=x.values,[w,k,S,I]=x.strides,N=n.data.get(a.dataId).values,[T,C,_,E]=c,$=n.data.get(s.dataId).values,[A,R,D,F]=l,O=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(p.outDepth,(p.inDepth+O-e)/d),r=e*w;for(let s=0;s<y;++s){const a=Math.max(0,Math.ceil((z-s)/f)),i=Math.min(p.outHeight,(p.inHeight+z-s)/f),o=s*k+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((M-r)/m)),l=Math.min(p.outWidth,(p.inWidth+M-r)/m),c=r*S+o;for(let o=0;o<p.inChannels;++o){const h=o*I+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let h=0;h<p.batchSize;++h){const p=h*A,y=h*T;for(let h=t;h<n;++h){const t=(e+h*d-O)*R+p,n=h*C+y;for(let e=a;e<i;++e){const a=(s+e*f-z)*D+t,i=e*_+n;for(let e=u;e<l;++e){const t=e*E+i;g+=$[(r+e*m-M)*F+a+o]*N[t+c]}}}}v[h+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},zf={kernelName:h.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;Gp([s],"conv3dBackpropInputV2");const l=h.util.computeStrides(s.shape),c=h.util.computeStrides(a.shape),p=h.backend_util.computeConv3DInfo(u,a.shape,o,1,i),d=new h.TensorBuffer(p.inShape,"float32"),f=d.values,[m,g,y,b]=d.strides,x=n.data.get(s.dataId).values,[v,w,k,S]=l,I=n.data.get(a.dataId).values,[N,T,C,_]=c,{batchSize:E,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:D,inDepth:F,inHeight:O,inWidth:M,outChannels:z,outDepth:L,outHeight:B,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:U}=p,G=$-1-p.padInfo.front,j=A-1-p.padInfo.top,H=R-1-p.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<D;++t)for(let n=0;n<F;++n){const r=n-G,s=Math.max(0,Math.ceil(r/V)),a=Math.min(L,($+r)/V);for(let i=0;i<O;++i){const o=i-j,u=Math.max(0,Math.ceil(o/W)),l=Math.min(B,(A+o)/W);for(let c=0;c<M;++c){const h=c-H,p=Math.max(0,Math.ceil(h/U)),d=Math.min(P,(R+h)/U);let E=0;for(let n=s;n<a;++n){const s=n*V-r;for(let r=u;r<l;++r){const a=r*W-o;for(let i=p;i<d;++i){const o=v*e+w*n+k*r+S*i,u=N*($-1-s)+T*(A-1-a)+C*(R-1-(i*U-h))+_*t;for(let e=0;e<z;++e)E+=x[o+e]*I[u+e]}}}f[m*e+g*n+y*i+b*c+t]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Lf=qp(h.Cos,(e=>Math.cos(e))),Bf={kernelName:h.Cos,backendName:"cpu",kernelFunc:Lf},Pf=qp(h.Cosh,(e=>Math.cosh(e))),Vf={kernelName:h.Cosh,backendName:"cpu",kernelFunc:Pf},Wf={kernelName:h.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,p,d,f]=s.shape,m=a.shape[0],[g,y]=o,b=(0,h.buffer)([m,g,y,f],"float32"),x=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,k=h.util.computeStrides(s.shape),S=h.util.computeStrides(b.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],r=x[t+1],s=x[t+2],a=x[t+3],i=v[e];if(i>=c)continue;const o=g>1?(s-n)*(p-1)/(g-1):0,h=y>1?(a-r)*(d-1)/(y-1):0;for(let t=0;t<g;t++){const c=g>1?n*(p-1)+t*o:.5*(n+s)*(p-1);if(c<0||c>p-1)for(let n=0;n<y;n++)for(let r=0;r<f;r++){const s=r+n*S[2]+t*S[1]+e*S[0];b.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<y;u++){const c=y>1?r*(d-1)+u*h:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<f;n++){const r=n+u*S[2]+t*S[1]+e*S[0];b.values[r]=l}continue}const p=Math.floor(c),m=Math.ceil(c),g=c-p;for(let r=0;r<f;r++){let a=r+p*k[2]+n*k[1]+i*k[0];const l=w[a];a=r+m*k[2]+n*k[1]+i*k[0];const c=w[a];a=r+p*k[2]+s*k[1]+i*k[0];const h=w[a];a=r+m*k[2]+s*k[1]+i*k[0];const d=l+(c-l)*g,f=h+(w[a]-h)*g;a=r+u*S[2]+t*S[1]+e*S[0],b.values[a]=d+(f-d)*o}}}else for(let n=0;n<y;++n){const s=y>1?r*(d-1)+n*h:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<f;r++){const s=r+n*S[2]+t*S[1]+e*S[0];b.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<f;r++){const s=r+o*k[2]+u*k[1]+i*k[0],a=r+n*S[2]+t*S[1]+e*S[0];b.values[a]=w[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Uf={kernelName:h.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Gp(s,"cumprod");const u=h.backend_util.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=Pd({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=h.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=(0,h.upcastType)(l.dtype,"int32"),d=h.util.makeOnesTypedArray(h.util.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)d[n]=i?1:f[n];else{const r=g(e,t-1);d[n]=i?f[r]*d[r]:f[n]*d[r]}}const y=n.makeTensorInfo(l.shape,p,d);if(null!=u){const e=Pd({inputs:{x:y},backend:n,attrs:{perm:h.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),e}return y}},Gf={kernelName:h.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Gp(s,"cumsum");const u=h.backend_util.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=Pd({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=h.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=(0,h.upcastType)(l.dtype,"int32"),d=h.util.makeZerosTypedArray(h.util.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)d[n]=i?0:f[n];else{const r=g(e,t-1);d[n]=i?f[r]+d[r]:f[n]+d[r]}}const y=n.makeTensorInfo(l.shape,p,d);if(null!=u){const e=Pd({inputs:{x:y},backend:n,attrs:{perm:h.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),e}return y}},jf={kernelName:h.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=gf(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=yf(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Hf={kernelName:h.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;h.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],p=u*a,d=l*a,f=c/(a*a),m=n.data.get(s.dataId).values,g=new Float32Array(o*p*d*f);let y=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+c*(s+l*(n+u*e));g[y++]=m[r]}}}return n.makeTensorInfo([o,p,d,f],s.dtype,g)}};function qf(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;Gp([s,a],"depthwiseConv2DNative");const c=h.util.computeStrides(s.shape),p=h.util.computeStrides(a.shape);let d=u;null==d&&(d=[1,1]),h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=h.backend_util.computeConv2DInfo(s.shape,a.shape,i,d,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,S=new h.TensorBuffer(f.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,T=S.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*S.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*S.strides[1],s=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=s+e*y;if(n<0||n>=f.inHeight)continue;const a=e*p[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*S.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=a+e*p[1],o=i+r*f.inChannels;let u=t,l=s;for(let e=0;e<f.inChannels;++e){const t=I[o+e];for(let e=0;e<k;++e)T[u+e]+=t*N[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Xf={kernelName:h.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:qf},Kf={kernelName:h.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Gp([s,a],"depthwiseConv2dNativeBackpropFilter");const p=h.backend_util.computeConv2DInfo(s.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=new h.TensorBuffer(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,w=n.data.get(s.dataId).values,k=new h.TensorBuffer(s.shape,s.dtype,w),S=n.data.get(a.dataId).values,I=new h.TensorBuffer(a.shape,a.dtype,S);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(p.outHeight,(p.inHeight+x-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/f)),a=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=s;e<a;++e){const n=r+e*f-b;l+=k.get(u,t,n,o)*I.get(u,c,e,i)}}y.set(l,e,r,o,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Yf={kernelName:h.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Gp([s,a],"depthwiseConv2DNativeBackpropInput");const p=h.util.computeStrides(s.shape),d=h.util.computeStrides(a.shape),f=h.backend_util.computeConv2DInfo(c,a.shape,i,o,u,l,!0),m=new h.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(s.dataId).values,[w,k,S]=p,I=n.data.get(a.dataId).values,[N,T,C]=d,{batchSize:_,filterHeight:E,filterWidth:$,inChannels:A,inHeight:R,inWidth:D,outChannels:F,outHeight:O,outWidth:M,strideHeight:z,strideWidth:L}=f,B=E-1-f.padInfo.top,P=$-1-f.padInfo.left,V=F/A;for(let e=0;e<_;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-B,s=Math.max(0,Math.ceil(r/z)),a=Math.min(O,(E+r)/z);for(let i=0;i<D;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,($+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*z-r;for(let r=u;r<l;++r){const a=w*e+k*n+S*r,i=N*(E-1-s)+T*($-1-(r*L-o))+C*t;for(let e=0;e<V;++e)c+=v[a+(t*V+e)]*I[i+e]}}g[y*e+b*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Zf={kernelName:h.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=h.util.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,i=(0,h.buffer)([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Qf={kernelName:h.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,p=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:C}=h.backend_util.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",o),_=h.util.sizeFromShape(C),E=C.length,$=h.util.getArrayFromDType(r.dtype,_);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let a=0;a<x;++a){const i=a*k-v.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const a=n+t*N;if(a>=0&&a<m)for(let n=0;n<I;++n){const f=i+n*T;if(f>=0&&f<g){const i=h.util.locToIndex([e,a,f,o],c,h.util.computeStrides(r.shape)),m=h.util.locToIndex([t,n,o],d,h.util.computeStrides(s.shape)),g=l[i]+p[m];g>u&&(u=g)}}}$[h.util.locToIndex([e,t,a,o],E,h.util.computeStrides(C))]=u}}}return{dataId:u.write(h.util.toTypedArray($,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Jf={kernelName:h.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=h.util.toNestedArray(r.shape,l.data.get(r.dataId).values),p=h.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:T}=h.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);h.util.assert(a.rank===T.length,(()=>`Error in ${h.Dilation2DBackpropFilter}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=h.util.toNestedArray(T,l.data.get(a.dataId).values),_=h.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*I;if(r>=0&&r<f)for(let n=0;n<S;++n){const l=s+n*N;if(l>=0&&l<m){const s=c[e][r][l][a]+p[t][n][a];s>i&&(i=s,o=t,u=n)}}}_[o][u][a]+=C[e][t][r][a]}}}return{dataId:l.write(h.util.toTypedArray(_,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},em={kernelName:h.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=h.util.toNestedArray(r.shape,l.data.get(r.dataId).values),p=h.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:T}=h.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);h.util.assert(a.rank===T.length,(()=>`Error in ${h.Dilation2DBackpropInput}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=h.util.toNestedArray(T,l.data.get(a.dataId).values),_=h.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*I;if(r>=0&&r<f)for(let n=0;n<S;++n){const l=s+n*N;if(l>=0&&l<m){const s=c[e][r][l][a]+p[t][n][a];s>i&&(i=s,o=r,u=l)}}}_[e][o][u][a]+=C[e][t][r][a]}}}return{dataId:l.write(h.util.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tm=td(((e,t)=>e*t)),nm=kd(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),rm=wd(h.Multiply,tm,nm),sm={kernelName:h.Multiply,backendName:"cpu",kernelFunc:rm};function am(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;Gp(s,"sum"),o="bool"===s.dtype?xd({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Zp({inputs:{x:s},backend:n});const u=o.shape.length,l=h.util.parseAxisParam(a,o.shape),c=h.backend_util.getAxesPermutation(l,u);let p=l,d=o;null!=c&&(d=Pd({inputs:{x:o},backend:n,attrs:{perm:c}}),p=h.backend_util.getInnerMostAxes(p.length,u)),h.backend_util.assertAxesAreInnerMostDims("sum",p,d.shape.length);const[f,m]=h.backend_util.computeOutAndReduceShapes(d.shape,p);let g=gd(n,f,h.backend_util.upcastType(d.dtype,"int32"));const y=h.util.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=x[t+e];b[e]=n}if(i){const e=g;g=Cd({inputs:{x:g},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const im={kernelName:h.Sum,backendName:"cpu",kernelFunc:am},om={kernelName:h.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=h.backend_util.decodeEinsumEquation(s,a.length);h.backend_util.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=h.backend_util.getEinsumComputePath(o,u),p=c.length;let d=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=h.backend_util.getEinsumPermutation(f,u[t]);let s;h.backend_util.isIdentityPermutation(e)?s=a[t]:(s=Pd({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);h.util.arraysEqual(s.shape,i)||(s=Cd({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===d?d=s:(d=rm({inputs:{a:s,b:d},backend:n}),m.push(d))}e<p-1&&(l[e]>=0&&(d=am({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},um={kernelName:h.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Gp([r,s],"eluGrad");const a=new Float32Array(h.util.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},lm=td(((e,t)=>e===t?1:0)),cm=wd(h.Equal,lm,null,"bool"),hm={kernelName:h.Equal,backendName:"cpu",kernelFunc:cm},pm=h.backend_util.ERF_P,dm=h.backend_util.ERF_A1,fm=h.backend_util.ERF_A2,mm=h.backend_util.ERF_A3,gm=h.backend_util.ERF_A4,ym=h.backend_util.ERF_A5,bm=qp(h.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+pm*n);return t*(1-((((ym*r+gm)*r+mm)*r+fm)*r+dm)*r*Math.exp(-n*n))})),xm={kernelName:h.Erf,backendName:"cpu",kernelFunc:bm},vm=ld((e=>Math.exp(e))),wm=Xp(h.Exp,vm,"float32"),km={kernelName:h.Exp,backendName:"cpu",kernelFunc:wm};function Sm(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(h.util.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),Cd({inputs:{x:s},backend:n,attrs:{shape:o}})}const Im={kernelName:h.ExpandDims,backendName:"cpu",kernelFunc:Sm},Nm=ld((e=>Math.expm1(e))),Tm=Xp(h.Expm1,Nm),Cm={kernelName:h.Expm1,backendName:"cpu",kernelFunc:Tm},_m=td(((e,t)=>e/t)),Em=wd(h.RealDiv,_m),$m={kernelName:h.RealDiv,backendName:"cpu",kernelFunc:Em},Am=td(((e,t)=>e-t)),Rm=kd(((e,t,n,r)=>({real:e-n,imag:t-r}))),Dm=wd(h.Sub,Am,Rm),Fm={kernelName:h.Sub,backendName:"cpu",kernelFunc:Dm};function Om(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=h.util.sizeFromShape(l),p=h.util.getTypedArrayFromDType("float32",c),d=h.util.getTypedArrayFromDType("float32",c);for(let e=0;e<s;e++){const r=df({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=df({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=fd({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=Mm(i,t,n),f=h.backend_util.mergeRealAndImagArrays(l,c);for(let t=0;t<a;t++){const n=h.backend_util.getComplexWithIndex(f,t);p[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",d),g=fd({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Mm(e,t,n){const r=h.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=zm(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",h.util.createScalarValue(r,"float32")),i=Zp({inputs:{x:a},backend:n}),u=$m.kernelFunc({inputs:{a:e,b:a},backend:n}),l=$m.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:p}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=h.backend_util.exponent(s*r,t,n),u=h.backend_util.getComplexWithIndex(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),h.backend_util.assignToTypedArray(r,a,i,s)}return r}(h.backend_util.mergeRealAndImagArrays(a,i),r,t);return h.backend_util.splitRealAndImagArrays(e)}var o}function zm(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=h.backend_util.mergeRealAndImagArrays(e,t),i=n/2,o=h.backend_util.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],p=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),f=fd({inputs:{real:p,imag:d},backend:s}),m=h.backend_util.complexWithOddIndex(a),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=fd({inputs:{real:x,imag:v},backend:s}),k=zm(u,l,i,r,s),S=k.real,I=k.imag,N=[S.length],T=s.makeTensorInfo(N,"float32",S),C=s.makeTensorInfo(N,"float32",I),_=fd({inputs:{real:T,imag:C},backend:s}),E=zm(g,y,i,r,s),$=E.real,A=E.imag,R=[$.length],D=s.makeTensorInfo(R,"float32",$),F=s.makeTensorInfo(R,"float32",A),O=fd({inputs:{real:D,imag:F},backend:s}),M=h.backend_util.exponents(n,r),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),B=s.makeTensorInfo(z,"float32",M.imag),P=fd({inputs:{real:L,imag:B},backend:s}),V=rm({inputs:{a:P,b:O},backend:s}),W=Nd({inputs:{a:_,b:V},backend:s}),U=Dm({inputs:{a:_,b:V},backend:s}),G=yd({inputs:{input:W},backend:s}),j=yd({inputs:{input:U},backend:s}),H=Cf({inputs:{input:W},backend:s}),q=Cf({inputs:{input:U},backend:s}),X=Ef({inputs:[G,j],backend:s,attrs:{axis:0}}),K=Ef({inputs:[H,q],backend:s,attrs:{axis:0}}),Y=s.data.get(X.dataId).values,Z=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(K),{real:Y,imag:Z}}const Lm={kernelName:h.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=h.util.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=Cd({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Om(i,!1,n),u=Cd({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Bm(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||h.util.inferDtype(s),o=h.util.getArrayFromDType(i,h.util.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Pm={kernelName:h.Fill,backendName:"cpu",kernelFunc:Bm},Vm={kernelName:h.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=h.util.getTypedArrayFromDType(r.dtype,h.util.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Wm=ld((e=>Math.floor(e))),Um=Xp(h.Floor,Wm),Gm={kernelName:h.Floor,backendName:"cpu",kernelFunc:Um},jm=td(((e,t)=>Math.floor(e/t))),Hm=wd(h.FloorDiv,jm,null,"int32"),qm={kernelName:h.FloorDiv,backendName:"cpu",kernelFunc:Hm},Xm={kernelName:h.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=Af({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Cd({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Nd({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Nd({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=Cd({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=dd(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=dd(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}},Km={kernelName:h.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=qf({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=Nd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=dd(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function Ym(e,t,n,r,s,a,i,o,u){const l=(0,h.buffer)([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}const Zm={kernelName:h.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=h.util.sizeFromShape(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,p]=h.backend_util.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=Ym(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,p,r.shape,a);return n.makeTensorInfo(u,r.dtype,d.values)}};function Qm(e,t,n){const r=(0,h.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const Jm={kernelName:h.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Gp([s,a],"gatherV2");const u=h.util.parseAxisParam(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];h.util.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let p=o;null==o&&(p=0);const d=h.util.sizeFromShape(a.shape),f=h.backend_util.segment_util.collectGatherOpShapeInfo(s,a,u,p),m=Cd({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Cd({inputs:{x:a},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),y=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],b=n.bufferSync(g),x=Qm(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,x.dtype,x.values)}},eg=td(((e,t)=>e>t?1:0)),tg=wd(h.Greater,eg,null,"bool"),ng={kernelName:h.Greater,backendName:"cpu",kernelFunc:tg},rg=td(((e,t)=>e>=t?1:0)),sg=wd(h.GreaterEqual,rg,null,"bool"),ag={kernelName:h.GreaterEqual,backendName:"cpu",kernelFunc:sg},ig={kernelName:h.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=h.util.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=Cd({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Om(i,!0,n),u=Cd({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},og=qp(h.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),ug={kernelName:h.IsFinite,backendName:"cpu",kernelFunc:og},lg=qp(h.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),cg={kernelName:h.IsInf,backendName:"cpu",kernelFunc:lg},hg=qp(h.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),pg={kernelName:h.IsNan,backendName:"cpu",kernelFunc:hg},dg=td(((e,t)=>e<t?1:0)),fg=wd(h.Less,dg,null,"bool"),mg={kernelName:h.Less,backendName:"cpu",kernelFunc:fg},gg=td(((e,t)=>e<=t?1:0)),yg=wd(h.LessEqual,gg,null,"bool"),bg={kernelName:h.LessEqual,backendName:"cpu",kernelFunc:yg};function xg(e,t,n){const r=(t-e)/(n-1),s=h.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const vg={kernelName:h.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=xg(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},wg=ld((e=>Math.log(e))),kg=Xp(h.Log,wg),Sg={kernelName:h.Log,backendName:"cpu",kernelFunc:kg},Ig=qp(h.Log1p,(e=>Math.log1p(e))),Ng={kernelName:h.Log1p,backendName:"cpu",kernelFunc:Ig},Tg=td(((e,t)=>e&&t)),Cg=wd(h.LogicalAnd,Tg,null,"bool"),_g={kernelName:h.LogicalAnd,backendName:"cpu",kernelFunc:Cg},Eg=qp(h.LogicalNot,(e=>e?0:1),"bool"),$g={kernelName:h.LogicalNot,backendName:"cpu",kernelFunc:Eg},Ag=td(((e,t)=>e||t)),Rg=wd(h.LogicalOr,Ag,null,"bool"),Dg={kernelName:h.LogicalOr,backendName:"cpu",kernelFunc:Rg},Fg={kernelName:h.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;Gp(s,"LRN");const l=s.shape[3],c=l-1,p=n.data.get(s.dataId).values,d=h.util.sizeFromShape(s.shape),f=new Float32Array(d);function m(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=p[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=m(e),n=p[e]*Math.pow(i+o*t,-u);f[e]=n}return n.makeTensorInfo(s.shape,s.dtype,f)}},Og={kernelName:h.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;Gp(i,"LRNGrad");const p=h.util.sizeFromShape(i.shape),d=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,y=new Float32Array(p),b=p;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(m[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*m[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,y)}};function Mg(e,t,n,r){const s=h.util.getTypedArrayFromDType(r,h.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function zg(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=h.util.parseAxisParam(a,u);let p=c;const d=h.backend_util.getAxesPermutation(p,l);let f=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];f=Bd(f,u,s.dtype,d,e),p=h.backend_util.getInnerMostAxes(p.length,l),u=e}Gp(s,"max"),h.backend_util.assertAxesAreInnerMostDims("max",p,l);const[m,g]=h.backend_util.computeOutAndReduceShapes(u,p),y=Mg(f,h.util.sizeFromShape(g),m,s.dtype),b=o.write(y,m,s.dtype);let x=m;return i&&(x=h.backend_util.expandShapeToKeepDim(m,c)),{dataId:b,shape:x,dtype:s.dtype}}const Lg={kernelName:h.Max,backendName:"cpu",kernelFunc:zg},Bg=td(((e,t)=>Math.max(e,t))),Pg=wd(h.Maximum,Bg),Vg={kernelName:h.Maximum,backendName:"cpu",kernelFunc:Pg},Wg={kernelName:h.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Gp(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=h.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&h.util.arraysEqual(l.inShape,l.outShape))c=Zp({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=h.util.computeStrides(s.shape),r=rf(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},Ug={kernelName:h.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;Gp(s,"maxPool3d");const c=h.backend_util.computePool3DInfo(s.shape,a,i,1,o,u,l),p=af(n.data.get(s.dataId).values,s.shape,s.dtype,h.util.computeStrides(s.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Gg={kernelName:h.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;Gp([s,a],"maxPool3DGrad");const c=h.backend_util.computePool3DInfo(a.shape,i,o,1,u,l),p=function(e,t){const n=(0,h.buffer)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-f;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const f=s*a-m;let k=f;for(;k<0;)k+=u;const S=Math.min(t.inWidth,p+f);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-l;for(let a=k;a<S;a+=u){const i=a-f,o=e.get(h,t,r,a,g);o>=I&&(I=o,N=n*c*p+s*c+i)}}}n.set(N,h,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=x-1-c.padInfo.front,S=w-1-c.padInfo.left,I=v-1-c.padInfo.top,N=(0,h.buffer)(a.shape,"float32"),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-k,i=r-I,o=s-S;let u=0;for(let n=0;n<x;n+=g){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const a=(i+s)/f;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=b){const l=(o+i)/m;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const h=x*v*w-1-p.get(e,r,a,l,t)===n*v*w+s*w+i?1:0;0!==h&&(u+=T.get(e,r,a,l,t)*h)}}}N.set(u,e,n,r,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},jg={kernelName:h.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Gp([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,d=h.backend_util.computePool2DInfo(o.shape,u,l,1,c,p),f=n.data.get(o.dataId).values,m=(0,h.buffer)(d.outShape,o.dtype,sf(f,o.shape,o.dtype,d).values),g=d.strideHeight,y=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=w-1-d.padInfo.left,S=v-1-d.padInfo.top,I=(0,h.buffer)(o.shape,"float32"),N=n.data.get(s.dataId).values,T=(0,h.buffer)(s.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-S,a=r-k;let i=0;for(let n=0;n<v;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=x){const o=(a+s)/y;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-m.get(e,r,o,t)===n*w+s?1:0;0!==u&&(i+=T.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Hg={kernelName:h.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;Gp(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=h.backend_util.computePool2DInfo(r.shape,s,a,[1,1],i),[p,d]=function(e,t,n,r,s){const a=rf(e,0,n,h.util.computeStrides(t),s,"max"),i=sf(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),f=u.write(p,c.outShape,r.dtype),m=u.write(d,c.outShape,r.dtype);return[{dataId:f,shape:c.outShape,dtype:r.dtype},{dataId:m,shape:c.outShape,dtype:"int32"}]}},qg={kernelName:h.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=h.util.parseAxisParam(a,s.shape),u=h.backend_util.computeOutAndReduceShapes(s.shape,o)[1],l=h.util.sizeFromShape(u),c=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(p);const d=xd({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(d);const f=Em({inputs:{a:d,b:p},backend:n});c.push(f);const m=am({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},Xg={kernelName:h.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Gp(s,"min");const o=h.util.parseAxisParam(a,s.shape);let u=o;const l=h.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Pd({inputs:{x:s},backend:n,attrs:{perm:l}}),u=h.backend_util.getInnerMostAxes(u.length,s.shape.length)),h.backend_util.assertAxesAreInnerMostDims("min",u,c.shape.length);const[p,d]=h.backend_util.computeOutAndReduceShapes(c.shape,u),f=h.util.sizeFromShape(d),m=h.util.makeZerosTypedArray(h.util.sizeFromShape(p),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(p,c.dtype,m);if(i){const e=Cd({inputs:{x:y},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Kg=td(((e,t)=>Math.min(e,t))),Yg=wd(h.Minimum,Kg),Zg={kernelName:h.Minimum,backendName:"cpu",kernelFunc:Yg},Qg={kernelName:h.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Gp(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,p=n.data.get(s.dataId).values,d=s.shape.length,f=h.util.computeStrides(s.shape),m=h.util.sizeFromShape(o),g=o.length,y=h.util.computeStrides(o),b=h.util.getTypedArrayFromDType(s.dtype,m);for(let e=0;e<m;e++){let t=h.util.indexToLoc(e,g,y);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=h.util.locToIndex(t,d,f);b[e]=p[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},Jg=td(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ey=wd(h.Mod,Jg),ty={kernelName:h.Mod,backendName:"cpu",kernelFunc:ey};function ny(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=h.util.parseAxisParam([o],s.shape),l=zg({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=h.backend_util.expandShapeToKeepDim(l.shape,u),p=Cd({inputs:{x:l},backend:n,attrs:{shape:c}}),d=Dm({inputs:{a:s,b:p},backend:n}),f=wm({inputs:{x:d},backend:n}),m=am({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=Cd({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Em({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const ry={kernelName:h.Softmax,backendName:"cpu",kernelFunc:ny},sy={kernelName:h.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Gp(s,"multinomial");const u=o?s:ny({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,d=[l,a],f=h.util.makeZerosTypedArray(h.util.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=zh.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();f[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){f[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",f)}};function ay(e,t,n){const r=h.util.createScalarValue(-1,n);return tm([],t,r,e,n)}const iy={kernelName:h.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Gp(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=ay(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},oy=h.kernel_impls.nonMaxSuppressionV3Impl,uy={kernelName:h.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Gp(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=oy(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ly=h.kernel_impls.nonMaxSuppressionV4Impl,cy={kernelName:h.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;Gp(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=ly(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},hy=h.kernel_impls.nonMaxSuppressionV5Impl,py={kernelName:h.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;Gp(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=hy(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},dy=td(((e,t)=>e!==t?1:0)),fy=wd(h.NotEqual,dy,null,"bool"),my={kernelName:h.NotEqual,backendName:"cpu",kernelFunc:fy},gy={kernelName:h.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;Gp(s,"oneHot");const u=h.util.sizeFromShape(s.shape),l=new Float32Array(u*a);l.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function yy(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=yd({inputs:{input:r},backend:n}),t=yy({inputs:{x:e},backend:n}),s=Cf({inputs:{input:r},backend:n}),a=yy({inputs:{x:s},backend:n}),i=fd({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Bm({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const by={kernelName:h.ZerosLike,backendName:"cpu",kernelFunc:yy},xy={kernelName:h.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=yd({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Cf({inputs:{input:s},backend:r}),i=yy({inputs:{x:a},backend:r}),o=fd({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Bm({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function vy(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Sm({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{h.util.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),h.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Ef({inputs:t.map((e=>{const t=Sm({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const wy={kernelName:h.Pack,backendName:"cpu",kernelFunc:vy},ky={kernelName:h.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Gp(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=h.util.sizeFromShape(s.shape),p=s.shape.length,d=h.util.computeStrides(s.shape),f=h.util.sizeFromShape(o),m=o.length,g=h.util.computeStrides(o),y=h.util.getTypedArrayFromDType(s.dtype,f);0!==i&&y.fill(i);for(let e=0;e<c;e++){const t=h.util.indexToLoc(e,p,d).map(((e,t)=>e+u[t]));y[h.util.locToIndex(t,m,g)]=l[e]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Sy=td(((e,t)=>Math.pow(e,t))),Iy=wd(h.Pow,Sy),Ny={kernelName:h.Pow,backendName:"cpu",kernelFunc:Iy};function Ty(e,t,n,r){const[s,a]=h.backend_util.computeOutAndReduceShapes(e,r),i=(0,h.upcastType)(t,"int32"),o=h.util.makeZerosTypedArray(h.util.sizeFromShape(s),i),u=h.util.sizeFromShape(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const Cy={kernelName:h.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Gp(s,"prod");const o=s.shape.length,u=h.util.parseAxisParam(a,s.shape),l=h.backend_util.getAxesPermutation(u,o);let c=u,p=s;const d=[];null!=l&&(p=Pd({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(p),c=h.backend_util.getInnerMostAxes(c.length,o));const f=n.data.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=Ty(p.shape,p.dtype,f,c);let b=g;return i&&(b=h.backend_util.expandShapeToKeepDim(g,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,y,m)}};function _y(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return h.util.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),a=h.util.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const Ey={kernelName:h.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=_y(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},$y=qp(h.Reciprocal,(e=>1/e)),Ay={kernelName:h.Reciprocal,backendName:"cpu",kernelFunc:$y},Ry={kernelName:h.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Gp(s,"resizeBilinear");const u=h.util.computeStrides(s.shape),[l,c]=o,[p,d,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(h.util.sizeFromShape([p,l,c,m])),b=[a&&l>1?d-1:d,a&&c>1?f-1:f],x=[a&&l>1?l-1:l,a&&c>1?c-1:c];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+a*u[2],d=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[p+e]-t)*r,i=a+(n+(g[d+e]-n)*r-a)*s;y[v++]=i}}}return n.makeTensorInfo([p,l,c,m],"float32",y)}},Dy={kernelName:h.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Gp([a,s],"resizeBilinearGrad");const o=h.util.computeStrides(s.shape),[u,l,c,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(u*l*c*p),g=[i&&d>1?l-1:l,i&&f>1?c-1:c],y=[i&&d>1?d-1:d,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(a.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,h=1-u;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*o[2],f=a+r*o[2],g=i+n*o[2],y=i+r*o[2],b=h*l,k=h*s,S=u*l,I=u*s;for(let e=0;e<p;e++){const t=v[w++];m[d+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*I}}}}return n.makeTensorInfo([u,c,l,p],"float32",m)}},Fy={kernelName:h.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Gp(s,"resizeNearestNeighbor");const u=h.util.computeStrides(s.shape),[l,c]=o,[p,d,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(p*l*c*m),b=[a&&l>1?d-1:d,a&&c>1?f-1:f],x=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?v*(e+.5):v*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<m;e++){const t=g[r+e];y[k++]=t}}}}return n.makeTensorInfo([p,l,c,m],s.dtype,y)}},Oy={kernelName:h.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Gp([a,s],"resizeNearestNeighborGrad");const o=h.util.computeStrides(s.shape),u=h.util.computeStrides(a.shape),[l,c,p,d]=s.shape,[,f,m]=a.shape,g=new Float32Array(l*c*p*d),y=n.data.get(a.dataId).values,b=[i&&f>1?c-1:c,i&&m>1?p-1:p],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,S=1/w,I=2*Math.ceil(k)+2,N=2*Math.ceil(S)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*k),s=Math.floor(r-I/2);for(let r=0;r<p;r++){const a=n+r*o[2],l=Math.floor(r*S),h=Math.floor(l-N/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=f)continue;const d=t+l*u[1],g=l*v;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+h;if(t<0||t>=m)continue;const s=d+t*u[2],a=t*w;r===Math.min(p-1,i?Math.round(a):Math.floor(a))&&(o+=y[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},My={kernelName:h.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Gp(s,"reverse");const i=s.shape.length,o=h.util.parseAxisParam(a,s.shape);if(0===i)return Zp({inputs:{x:s},backend:n});const u=new h.TensorBuffer(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},zy={kernelName:h.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=h.util.getTypedArrayFromDType(r.dtype,h.util.sizeFromShape(r.shape)),[l,c,p,d]=r.shape,[f,m]=h.backend_util.getImageCenter(i,c,p),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*p*c*d;for(let e=0;e<c;e++){const n=e*(p*d);for(let r=0;r<p;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],h=o[2],x=o[1];let v=(h-f)*y-(x-m)*g,w=(h-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<p&&w>=0&&w<c&&(k=b[t+w*(p*d)+v*d+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ly=qp(h.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),By={kernelName:h.Round,backendName:"cpu",kernelFunc:Ly},Py=ld((e=>1/Math.sqrt(e))),Vy=Xp(h.Rsqrt,Py),Wy={kernelName:h.Rsqrt,backendName:"cpu",kernelFunc:Vy};function Uy(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],p=e.values,d=t.values;if(0===r)return(0,h.buffer)(n,t.dtype);const f=(0,h.buffer)(c,t.dtype);"string"==typeof u||"number"==typeof u?f.values.fill(u):"boolean"==typeof u&&f.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=p[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[u*s+n]+=d[e*s+n]:f.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return f}const Gy={kernelName:h.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=h.backend_util.calculateShapes(a,s,i),d=Uy(n.bufferSync(s),n.bufferSync(a),i,p,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function jy(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function Hy(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const qy={kernelName:h.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=h.util.getArrayFromDType("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?jy(n,t[e+u]):Hy(n,t[e+u])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},Xy={kernelName:h.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Gp([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=(0,h.upcastType)(s.dtype,a.dtype),p=h.util.makeZerosTypedArray(h.util.sizeFromShape(s.shape),c);let d=0;const f=0===i||i>1||1===s.shape.length?1:h.util.sizeFromShape(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<f;t++)1===o[e]?p[d++]=u[e]:p[d++]=l[e];return n.makeTensorInfo(s.shape,c,p)}},Ky=h.backend_util.SELU_SCALEALPHA,Yy=h.backend_util.SELU_SCALE,Zy=qp(h.Selu,(e=>e>=0?Yy*e:Ky*(Math.exp(e)-1))),Qy={kernelName:h.Selu,backendName:"cpu",kernelFunc:Zy},Jy=qp(h.Sign,(e=>e<0?-1:e>0?1:0)),eb={kernelName:h.Sign,backendName:"cpu",kernelFunc:Jy},tb=qp(h.Sin,(e=>Math.sin(e))),nb={kernelName:h.Sin,backendName:"cpu",kernelFunc:tb},rb=qp(h.Sinh,(e=>Math.sinh(e))),sb={kernelName:h.Sinh,backendName:"cpu",kernelFunc:rb},ab=Math.log(1.1920928955078125e-7)+2,ib=qp(h.Softplus,(e=>{const t=e>-ab,n=e<ab,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),ob={kernelName:h.Softplus,backendName:"cpu",kernelFunc:ib},ub={kernelName:h.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Gp([s],"spaceToBatchND");const o=h.util.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=ky.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=h.backend_util.getReshaped(l.shape,a,o,!1),p=h.backend_util.getPermuted(c.length,a.length,!1),d=h.backend_util.getReshapedPermuted(l.shape,a,o,!1),f=Cd({inputs:{x:l},backend:n,attrs:{shape:c}}),m=Pd({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Cd({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function lb(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),p=t[1];if(0===u){if(0!==o)throw new Error(h.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[h.util.getArrayFromDType(n,0),[0,p],h.util.getArrayFromDType(s,0),l,c]}let d=!0,f=0;const m=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p];if(n<0)throw new Error(h.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(h.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<u;++e){const t=0===m[e];l[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,p],n,l,c]}{const t=m[u-1],a=h.util.getArrayFromDType(n,t*p),d=h.util.getArrayFromDType(s,t),f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p],s=f[n],i=(0===n?0:m[n-1])+s;f[n]++;for(let n=0;n<p;++n)a[i*p+n]=e[t*p+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:m[e-1];a[t*p+0]=e;for(let e=1;e<p;++e)a[t*p+e]=0;d[t]=i}return[a,[t,p],d,l,c]}}const cb={kernelName:h.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=lb(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function hb(e,t,n,r,s){const a=h.util.sizeFromShape(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(h.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(h.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error(h.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/l);if(l*e!==a)throw new Error(h.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(h.util.sizeFromShape(u)!==a)throw new Error(h.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=h.util.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}const pb={kernelName:h.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=hb(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function db(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error(h.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=c;const d=p.reduce(((e,t)=>e*t),1),f=h.util.getArrayFromDType(n,d);if(0===o)return c>0&&f.fill(i),[f,p];if(c<=0)throw new Error(h.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<o){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(h.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=c)throw new Error(h.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,c));b>y&&f.fill(i,y*l,b*l);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(h.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<l;t++)f[b*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>o)break}return y<c&&f.fill(i,y*l,c*l),[f,p]}const fb={kernelName:h.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=db(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},mb={kernelName:h.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=db(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},gb={kernelName:h.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=h.backend_util.calculateShapes(a,s,o),f=!1,m=n.bufferSync(s);let g;switch(a.dtype){case"bool":g=Uy(m,n.bufferSync(a),o,d,c,l,u,p,Boolean(n.data.get(i.dataId).values[0]),f);break;case"float32":case"int32":g=Uy(m,n.bufferSync(a),o,d,c,l,u,p,n.data.get(i.dataId).values[0],f);break;case"string":g=Uy(m,n.bufferSync(a),o,d,c,l,u,p,h.util.decodeString(n.data.get(i.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},yb={kernelName:h.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=h.util.parseAxisParam(i,s.shape)[0],u=h.backend_util.prepareSplitSize(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=df({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},bb=ld((e=>Math.sqrt(e))),xb=qp(h.Sqrt,(e=>Math.sqrt(e))),vb={kernelName:h.Sqrt,backendName:"cpu",kernelFunc:xb},wb={kernelName:h.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Gp(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},kb=td(((e,t)=>{const n=e-t;return n*n})),Sb=wd(h.SquaredDifference,kb),Ib={kernelName:h.SquaredDifference,backendName:"cpu",kernelFunc:Sb},Nb=qp(h.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Tb={kernelName:h.Step,backendName:"cpu",kernelFunc:Nb};function Cb(e,t,n,r){const s=(0,h.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const _b={kernelName:h.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=r;Gp(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=h.slice_util.sliceInfo(s.shape,a,i,o,u,l,c,p,d);let k;if(g)k=Cd({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){h.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=h.slice_util.computeOutShape(x,v,w),t=df({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=Cd({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Cb(f,n.bufferSync(s),w,x);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class Eb{constructor(e,t,n,r,s,a){this.separator=h.util.encodeString(e),this.nGramWidths=t,this.leftPad=h.util.encodeString(n),this.rightPad=h.util.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=h.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function $b(e,t,n,r,s,a,i,o){return new Eb(n,r,s,a,i,o).compute(e,t)}const Ab={kernelName:h.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=$b(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function Rb(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function Db(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;Rb(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=h.util.getArrayFromDType("int32",2*a),l=new Array(a),c=[r,i];let p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*p]=e,u[2*p+1]=t,l[p]=s[p],++p;return[u,l,c]}const Fb={kernelName:h.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=Db(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function Ob(e,t){const n=h.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=h.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Mb={kernelName:h.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=Ob(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},zb=qp(h.Tan,(e=>Math.tan(e))),Lb={kernelName:h.Tan,backendName:"cpu",kernelFunc:zb},Bb=qp(h.Tanh,(e=>Math.tanh(e))),Pb={kernelName:h.Tanh,backendName:"cpu",kernelFunc:Bb};function Vb(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,h.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const Wb={kernelName:h.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Gp(s,"tile");const i=Vb(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Ub=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Gb(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);Gb(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(h.util.swap(e,n,t),Ub(e[r],s)>0&&h.util.swap(e,n,r);a<i;){for(h.util.swap(e,a,i),a++,i--;Ub(e[a],s)<0;)a+=1;for(;Ub(e[i],s)>0;)i-=1}0===Ub(e[n],s)?h.util.swap(e,n,i):(i+=1,h.util.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function jb(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=h.util.getTypedArrayFromDType(n,i*r),l=h.util.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Gb(i,r),i=i.slice(0,r)),s&&i.sort(Ub);const c=t*r,h=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[(0,h.buffer)(c,n,u),(0,h.buffer)(c,"int32",l)]}const Hb={kernelName:h.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;Gp(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=jb(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},qb={kernelName:h.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,p,d,f]=s.shape,[m,g]=null!=l?l:[p,d],y=[c,m,g,f],b=h.util.computeStrides(s.shape),x=b[0],v=b[1],w=b[2],k=h.util.getTypedArrayFromDType(s.dtype,h.util.sizeFromShape(y));k.fill(u);const S=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<g;++r)for(let s=0;s<f;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,h=(t[3]*r+t[4]*n+t[5])/l,f=Xb(c,d,o),m=Xb(h,p,o);switch(i){case"nearest":a=Yb(S,p,d,x,v,w,e,m,f,s,u);break;case"bilinear":a=Zb(S,p,d,x,v,w,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*x+n*v+r*w+s]=a}return r.makeTensorInfo(y,s.dtype,k)}return{dataId:r.write(k,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function Xb(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return h.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return h.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return h.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Kb(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function Yb(e,t,n,r,s,a,i,o,u,l,c){return Kb(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function Zb(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*Kb(e,t,n,r,s,a,i,h,p,l,c)+(u-p)*Kb(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*Kb(e,t,n,r,s,a,i,d,p,l,c)+(u-p)*Kb(e,t,n,r,s,a,i,d,f,l,c))}function Qb(e,t,n,r){const s=h.util.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new h.TensorBuffer(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const p=a.slice();p[1]=Object.keys(i).length;const d=new h.TensorBuffer(p,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:d.values,outputShape:f,indices:o}}const Jb={kernelName:h.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Gp(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=Qb(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},ex={kernelName:h.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=df({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=Cd({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},tx={kernelName:h.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;Gp(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=Sm({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=h.util.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=cm({inputs:{a:r,b:c},backend:n}),i=xd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=rm({inputs:{a:i,b:s},backend:n}),p=am({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(r),u.push(a),u.push(i),u.push(l),u.push(p)}const p=vy({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},nx=[Ad,Dd,Od,zd,Td,Ld,Wd,Ud,Gd,jd,qd,Kd,Zd,ef,nf,of,uf,lf,cf,$d,hf,mf,bf,xf,vd,kf,If,md,Nf,$f,Rf,Df,Ff,Of,Mf,zf,Bf,Vf,Wf,Uf,Gf,jf,Hf,Xf,Kf,Yf,Zf,Qf,Jf,em,om,Yp,um,hm,xm,km,Im,Cm,Lm,Pm,Vm,Gm,qm,Xm,Km,Zm,Jm,ng,ag,Qp,ig,_f,ug,cg,pg,ed,mg,bg,vg,Sg,Ng,_g,$g,Dg,Fg,Og,Lg,Vg,Wg,Ug,Gg,jg,Hg,qg,Xg,Zg,Qg,ty,sy,sm,iy,uy,cy,py,my,gy,xy,wy,ky,Ny,sd,Cy,Ey,bd,$m,Ay,id,ud,_d,Ry,Dy,Fy,Oy,My,zy,By,Wy,Gy,qy,Xy,Qy,pd,eb,nb,sb,ff,ry,ob,ub,cb,pb,fb,mb,gb,yb,vb,wb,Ib,Tb,_b,Ab,Fb,Mb,Fm,im,Lb,Pb,Wb,Hb,qb,Vd,Jb,ex,tx,by];for(const e of nx)(0,h.registerKernel)(e);const rx={},sx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ax(e,t){if(!(e in rx)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete rx[e]}),!1),1===e?n.getContext("webgl",sx)||n.getContext("experimental-webgl",sx):n.getContext("webgl2",sx)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;rx[e]=n}const n=rx[e];return null==n||n.isContextLost()?(delete rx[e],ax(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),rx[e])}var ix,ox,ux;function lx(e,t){return[t,e]}function cx(e){const t=h.util.sizeFromShape(e),n=Math.ceil(t/4);return h.util.sizeToSquarishShape(n)}function hx(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function px(e,t){const n=e;let r,s,a,i,o,u,l,c,p,d;return 2===(0,h.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function dx(e,t){const n=t();return(0,h.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function fx(e){return!!((0,h.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function mx(e,t){return Ix(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ix||(ix={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ox||(ox={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ux||(ux={}));const gx=/ERROR: [0-9]+:([0-9]+):/g;function yx(e,t){const n=gx.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>h.util.rightPad((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${h.util.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function bx(e,t){if(dx(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function xx(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(dx(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),dx(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),dx(e,(()=>e.enableVertexAttribArray(o))),!0)}function vx(e,t,n,r){dx(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),dx(e,(()=>e.activeTexture(e.TEXTURE0+n))),dx(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),dx(e,(()=>e.uniform1i(n,r)))}function wx(e,t,n){dx(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dx(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function kx(e,t){dx(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dx(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Sx(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Ix(e,t,n){const r=dx(e,(()=>t()));if(null==r)throw new Error(n);return r}function Nx(e,t=2){return h.util.sizeFromShape(e.slice(0,e.length-t))}function Tx(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cx(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Nx(e),...Tx(e)]),t}function _x(e){return e%2==0}function Ex(e,t){if(e=e.slice(-2),t=t.slice(-2),h.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(_x(n)&&_x(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&_x(e[0])&&_x(t[0])}let $x,Ax;function Rx(e,t){return null!=e.getExtension(t)}function Dx(e){try{if(null!=ax(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Fx(e){const t=px(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function Ox(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&h.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Mx=(0,h.env)();function zx(){let e,t,n,r,s,a,i,o,u,l;return 2===(0,h.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function Lx(e,t,n="index"){const r=h.util.computeStrides(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function Bx(e,t,n="index"){const r=h.util.computeStrides(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function Px(e){const t=h.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Mx.registerFlag("HAS_WEBGL",(()=>Mx.getNumber("WEBGL_VERSION")>0)),Mx.registerFlag("WEBGL_VERSION",(()=>Dx(2)?2:Dx(1)?1:0)),Mx.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Mx.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Mx.get("WEBGL_VERSION"))),Mx.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Mx.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Mx.registerFlag("WEBGL_PACK",(()=>Mx.getBool("HAS_WEBGL"))),Mx.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_CLIP",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_PACK_REDUCE",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_CONV_IM2COL",(()=>Mx.getBool("WEBGL_PACK"))),Mx.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==$x){const t=ax(e);$x=t.getParameter(t.MAX_TEXTURE_SIZE)}return $x}(Mx.getNumber("WEBGL_VERSION")))),Mx.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Ax){const t=ax(e);Ax=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ax)}(Mx.getNumber("WEBGL_VERSION")))),Mx.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Mx.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ax(e);return t=Rx(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Rx(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Mx.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Mx.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!h.device_util.isMobile())),Mx.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=ax(e);if(1===e){if(!Rx(t,"OES_texture_float"))return!1}else if(!Rx(t,"EXT_color_buffer_float"))return!1;return Fx(t)}(Mx.getNumber("WEBGL_VERSION")))),Mx.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Mx.getBool("WEBGL_FORCE_F16_TEXTURES")&&Mx.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Mx.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=ax(e);if(1!==e){if(Rx(t,"EXT_color_buffer_float"))return Fx(t);const e="EXT_color_buffer_half_float";if(Rx(t,e)){const n=t.getExtension(e);return function(e,t){const n=px(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!Rx(t,"OES_texture_float")&&!!Rx(t,"WEBGL_color_buffer_float")&&Fx(t)}(Mx.getNumber("WEBGL_VERSION")))),Mx.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Mx.getNumber("WEBGL_VERSION"))&&null!=ax(e).fenceSync;var e})),Mx.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Mx.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Mx.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Mx.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>h.device_util.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Mx.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Mx.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Mx.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Mx.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const Vx="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Wx}=h.backend_util;function Ux(e,t,n){const r=[];if(e.forEach((e=>{const t=h.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Jx(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?jx(e,r):Gx(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Wx(e.shapeInfo.logicalShape,t.logicalShape),u=Qx(i),l=i-a;let c;const p=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let f="return outputValue;";const m=1===h.util.sizeFromShape(e.shapeInfo.logicalShape),g=1===h.util.sizeFromShape(t.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?f="return vec4(outputValue.x);":o.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&h.util.arraysEqual(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Qx(u),c=Wx(e.shapeInfo.logicalShape,t.logicalShape),p=u-o;let d;const f=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=zx(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Hx}\n    ${qx}\n    ${Xx}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(h.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return h.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Bx(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=Lx(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Bx(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=Lx(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Lx(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Lx(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(p+=Kx),[p,u,c,s,l,a,n.userCode].join("\n")}function Gx(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Yx(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Zx(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Yx(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&h.util.arraysEqual(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=h.util.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${Gx(ev(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${tv(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Zx(e)}\n      }\n    `;const l=a[0],c=a[1],p=Yx(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=h.util.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${Gx(ev(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${tv(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Zx(e)}\n      }\n    `;const c=e.shapeInfo.texShape,p=c[0],d=c[1],f=e.shapeInfo.flatOffset;if(d===a&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Yx(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=h.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Gx(ev(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${tv(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${Zx(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=Yx(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=h.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Gx(ev(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${tv(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${Zx(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${Yx(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=h.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Gx(ev(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${tv(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Zx(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===c&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${Yx(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jx(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${zx().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=zx();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=zx();if(null!=a&&h.util.arraysEqual(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${jx(ev(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${tv(a,r)});\n        }\n      `}const o=zx();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=zx();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Hx="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qx="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xx="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kx="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Yx(e){return`offset${e}`}function Zx(e){const t=e.name,n=h.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Qx(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Jx(e,t,n){const{newShape:r,keptDims:s}=h.util.squeezeShape(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!h.util.arraysEqual(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function ev(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function tv(e,t){return t.map((t=>e[t])).join(", ")}function nv(e,t,n){const r={},s={},a={},i=[];let o,u,l,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===(0,h.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];r[o]=e.getUniformLocation(n,o,d),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:r,customUniformLocations:i,infLoc:c,nanLoc:p,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function rv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!h.util.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!h.util.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function sv(e){return(0,h.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class av{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ix.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zx();this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Bx(["r","c","d"],e):Lx(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class iv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ix.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zx();this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Bx(["r","c","d"],e):Lx(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ov{constructor(e){this.variableNames=["A"],this.outTexUsage=ox.DOWNLOAD;const t=zx();this.outputShape=e,this.userCode=`\n      ${Vx}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class uv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ox.DOWNLOAD;const t=zx();this.outputShape=e,this.userCode=`\n      ${Vx}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class lv{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=zx();this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Px(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class cv{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=zx();this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Px(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function hv(e,t,n,r,s,a){!function(e,t){const n=(0,h.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return Ix(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return dx(e,(()=>e.bindTexture(o,i))),dx(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dx(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dx(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),dx(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,h.env)().getNumber("WEBGL_VERSION")?dx(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):dx(e,(()=>e.texStorage2D(o,1,r,t,n))),dx(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function pv(e){return e.internalFormatFloat}function dv(e){return e.internalFormatHalfFloat}function fv(e){return e.downloadTextureFormat}function mv(e){return e.internalFormatPackedFloat}function gv(e){return e.internalFormatPackedHalfFloat}class yv{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,h.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){rx[e]=t}(t,e)):this.gl=ax(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,h.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=mx(this.gl,e),Rx(this.gl,t))this.textureHalfFloatExtension=mx(this.gl,t);else if((0,h.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Rx(this.gl,r))this.colorBufferHalfFloatExtension=mx(this.gl,r);else if((0,h.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Rx(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Rx(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=Ix(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dx(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dx(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=Ix(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dx(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dx(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return Ix(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=px(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,h.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dx(e,(()=>e.finish())),dx(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dx(e,(()=>e.deleteFramebuffer(this.framebuffer))),dx(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dx(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dx(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lx(t,n);return hv(e,s,a,pv(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lx(t,n);return hv(e,s,a,dv(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lx(t,n);return hv(e,s,a,fv(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){dx(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,h.env)().getNumber("WEBGL_VERSION")?dx(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):dx(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,h.env)().getNumber("WEBGL_VERSION")?dx(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):dx(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dx(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;dx(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===(0,h.env)().getNumber("WEBGL_VERSION")?dx(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):dx(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),dx(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=hx(t,n);return hv(e,s,a,gv(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=hx(t,n);return hv(e,s,a,mv(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(kx(this.gl,this.framebuffer),this.outputTexture=null),dx(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=lx(t,n),i=new Uint8Array(t*n*4);return dx(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=hx(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();dx(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return dx(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),dx(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dx(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,h.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return dx(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=zx();return function(e,t){const n=Ix(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dx(e,(()=>e.shaderSource(n,t))),dx(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return Ix(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return dx(t,(()=>t.attachShader(n,this.vertexShader))),dx(t,(()=>t.attachShader(n,e))),function(e,t){if(dx(e,(()=>e.linkProgram(t))),!(0,h.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&bx(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return dx(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),xx(e,t,"clipSpacePos",n,3,20,0)&&xx(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&dx(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&bx(this.gl,this.program),dx(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Ix(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dx(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vx(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=hx(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&bx(this.gl,this.program),Sx(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),dx(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dx(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=mx(this.gl,2===(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await h.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||h.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),wx(this.gl,e,this.framebuffer),this.debug&&Sx(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(wx(this.gl,this.outputTexture,this.framebuffer),this.debug&&Sx(this.gl)):kx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;wx(r,e,this.framebuffer),this.debug&&Sx(r),this.outputTexture=e,dx(r,(()=>r.viewport(0,0,t,n))),dx(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),dx(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:bv,bincountImpl:xv,bincountReduceImpl:vv,ceilImpl:wv,concatImpl:kv,equalImpl:Sv,expImpl:Iv,expm1Impl:Nv,floorImpl:Tv,gatherNdImpl:Cv,gatherV2Impl:_v,greaterImpl:Ev,greaterEqualImpl:$v,lessImpl:Av,lessEqualImpl:Rv,linSpaceImpl:Dv,logImpl:Fv,maxImpl:Ov,maximumImpl:Mv,minimumImpl:zv,multiplyImpl:Lv,negImpl:Bv,notEqualImpl:Pv,prodImpl:Vv,rangeImpl:Wv,rsqrtImpl:Uv,scatterImpl:Gv,sigmoidImpl:jv,simpleAbsImpl:Hv,sliceImpl:qv,sparseFillEmptyRowsImpl:Xv,sparseReshapeImpl:Kv,sparseSegmentReductionImpl:Yv,sqrtImpl:Zv,stridedSliceImpl:Qv,stringNGramsImpl:Jv,stringSplitImpl:ew,stringToHashBucketFastImpl:tw,subImpl:nw,tileImpl:rw,topKImpl:sw,transposeImpl:aw,uniqueImpl:iw}=c;function ow(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function uw(e,t){return 1===t?[e]:ow(e,t)}class lw{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=sv(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=uw("rc",this.rank),t=Qx(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class cw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):Lx(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Px(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class hw{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=dw(t,n),s=fw(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=pw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===ux.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ux.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ux.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ux.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ux.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=dw(n,r),a=fw(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=pw(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=(0,h.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pw(e,t,n,r,s){const a=function(e,t){switch(e){case ux.PACKED_2X2_FLOAT32:return mv(t);case ux.PACKED_2X2_FLOAT16:return gv(t);case ux.UNPACKED_FLOAT32:return pv(t);case ux.UNPACKED_FLOAT16:return dv(t);case ux.PACKED_4X1_UNSIGNED_BYTE:return fv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=hx(e[0],e[1]);i=t*n}else{const[t,n]=lx(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function dw(e,t){if(e===ox.UPLOAD)return ux.PACKED_2X2_FLOAT32;if(e===ox.RENDER||null==e)return function(e){return(0,h.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ux.PACKED_2X2_FLOAT32:ux.UNPACKED_FLOAT32:e?ux.PACKED_2X2_FLOAT16:ux.UNPACKED_FLOAT16}(t);if(e===ox.DOWNLOAD||e===ox.PIXELS)return ux.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function fw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class mw{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const gw="return abs(x);",yw="return x;";class bw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class xw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length);const t=e.length,n=uw("rc",t),r=Qx(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const vw=h.kernel_impls.whereImpl,ww={},kw=(0,h.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Sw extends h.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,h.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof yv)t=e;else{const n=ax((0,h.env)().getNumber("WEBGL_VERSION"),e);t=new yv(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=ax((0,h.env)().getNumber("WEBGL_VERSION"));t=new yv(e),this.binaryCache=((n=(0,h.env)().getNumber("WEBGL_VERSION"))in ww||(ww[n]={}),ww[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new hw(this.gpgpu),this.numMBBeforeWarning=null==(0,h.env)().global.screen?1024:(0,h.env)().global.screen.height*(0,h.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new h.DataStorage(this,(0,h.engine)())}nextDataId(){return Sw.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,h.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,h.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:ox.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if((0,h.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:ox.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new bw(i,yw):new mw(i,yw);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=h.util.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=h.backend_util.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=h.util.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new bw(r,yw):new mw(r,yw);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,h.env)().getBool("DEBUG")&&!(0,h.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,h.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&(0,h.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...cx(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=h.backend_util.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=h.util.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;dx(e,(()=>e.deleteBuffer(c)))}const p=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,h.engine)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new bw(s,yw):new mw(s,yw);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=(0,h.engine)().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>h.util.decodeString(e)));return(0,h.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,h.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!fx(n)){if((0,h.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=h.util.sizeFromShape(t);if((0,h.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...cx(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=(0,h.env)().getBool("WEBGL_PACK")&&!0===r,i=a?Cx(t):t,o=a?new uv(i):new ov(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=h.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=h.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=h.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:h.util.now(),endMs:null}}endTimer(e){return(0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=h.util.now(),e)}async getQueryTime(e){if((0,h.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=kw){return(0,h.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&h.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){h.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return vw(e.shape,t)}packedUnaryOp(e,t,n){const r=new bw(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,h.engine)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Hv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,h.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gw,e.dtype);const t=new mw(e.shape,gw),n=this.compileAndRun(t,[e]);return(0,h.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&h.util.isString(n[0])){const s=n.map((e=>h.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,h.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new xw(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new lw(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Nx(e.shape),...Tx(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Nx(t),...Tx(t)],a=new cw(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){const e=h.util.sizeFromShape(s),n=t[0]*t[1]*4;h.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Cx(s);let o;o=r?new iv(i):new av(i);const u=[null!=t?t:cx(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===ix.DENSE){const t=null!=a?a:cx(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===h.util.sizeFromShape(i.shape))return o.values=h.util.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&h.util.sizeFromShape(t.shape)<=(0,h.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Ex(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=Jx(e.packedInputs,t.shape,a);let l="",c="",p="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=h.util.computeStrides(o);p=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,f=2===o.length&&h.util.arraysEqual(t.shape,a),m=1===h.util.sizeFromShape(t.shape),g=h.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&h.util.arraysEqual(a,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${y}_${i?u:""}_${o.length}_${m}_${g}_${f}_${l}_${c}_${p}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${(0,h.env)().getNumber("WEBGL_VERSION")}`,a}(e,l,c),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=Ux(s,i,t),u=function(e,t){const n=Ix(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dx(e,(()=>e.shaderSource(n,t))),dx(e,(()=>e.compileShader(n))),(0,h.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw yx(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return(0,h.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},nv(e,t,l))}(this.gpgpu,e,l,c))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,h.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(rv(t.inShapeInfos,n),rv([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,h.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=Jx(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(h.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=h.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,h.env)().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=h.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,h.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,h.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,h.tidy)((()=>{if(!(0,h.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,h.env)().getBool("DEBUG");(0,h.env)().set("DEBUG",!1);const t=this.abs((0,h.scalar)(1e-8)).dataSync()[0];if((0,h.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=h.util.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=(0,h.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?h.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=h.util.squeezeShape(e);e=t.newShape}let r=h.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Nx(e);let n=2,s=2;return e.length&&([n,s]=Tx(e)),r=t*(n/2)*(s/2),h.util.sizeToSquarishShape(r).map((e=>2*e))}return h.util.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=s){const e=Cx(n);let a,i=c[1],p=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,p]=hx(c[0],c[1])),a=o?new cv(e,d):new lv(e,d);const f=d?[p,i]:c,m=this.makeTensorInfo(f,r),g=this.texData.get(m.dataId);g.usage=d?ox.PIXELS:ox.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,p,s);const y=[[p,i]],b=!0,x=this.runWebGLProgram(a,[m],r,y,b),v=this.texData.get(x.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,(0,h.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(m),u&&(this.uploadWaitMs+=h.util.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*h.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,h.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw yx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=nv(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}Sw.nextDataId=0,h.device_util.isBrowser()&&(0,h.registerBackend)("webgl",(()=>new Sw),2);class Iw{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=h.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=sv(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Nw{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=h.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=sv(s);let a="";if(r)if(0===s||1===h.util.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${Qx(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=uw("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Tw(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Cw={kernelName:h.Identity,backendName:"webgl",kernelFunc:Tw};function _w(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=Tw({inputs:{x:r},backend:n}),u=Tw({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const Ew={kernelName:h.Complex,backendName:"webgl",kernelFunc:_w},$w="return (a < 0.) ? b * a : a;",Aw="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Rw={kernelName:h.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",h.util.createScalarValue(a,"float32")),o=(0,h.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nw(Aw,s.shape,i.shape):new Iw($w,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},Dw="return (a < 0.) ? b * a : a;",Fw="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Ow={kernelName:h.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=(0,h.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nw(Fw,r.shape,s.shape):new Iw(Dw,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function Mw({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=(0,h.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new bw(i.shape,t):new mw(i.shape,e),o.runWebGLProgram(l,[i],u)}}function zw({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new Iw(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],(0,h.upcastType)(n.dtype,r.dtype))})),a=_w({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const p=a||(0,h.upcastType)(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?h.backend_util.fromUint8ToStringArray(e):e,r="string"===u.dtype?h.backend_util.fromUint8ToStringArray(t):t,[a,i]=s(u.shape,l.shape,n,r,p),o=c.makeTensorInfo(i,p);return c.texData.get(o.dataId).values=a,o}let d;return d=(0,h.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Nw(t,u.shape,l.shape,n):new Iw(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],p)}}function Lw(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Fw:Dw;if("leakyrelu"===e)return t?Aw:$w;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Bw{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=sv(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Pw{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=h.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Vw="return a * b;";function Ww(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=h.backend_util.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Pw("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new Pw("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=_w({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=Lv(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=(0,h.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nw(Vw,r.shape,s.shape):new Iw(Vw,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const Uw={kernelName:h.Multiply,backendName:"webgl",kernelFunc:Ww};function Gw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=h.util.sizeFromShape(s.shape),u=h.util.inferFromImplicitShape(a,o),l=h.util.sizeFromShape(u);h.util.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||Ex(s.shape,u)||null!==c.texture&&Ex(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[Nx(e.shape),...Tx(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Nx(t),...Tx(t)],i=new cw(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,i)}const jw={kernelName:h.Reshape,backendName:"webgl",kernelFunc:Gw};class Hw{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${h.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class qw{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function Xw(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=h.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new Hw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Hw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new qw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class Kw{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Qx(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Yw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Qx(this.rank),s=ow("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Zw(e,t,n){const r=(0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yw(e.shape,t):new Kw(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Qw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=h.util.parseAxisParam(s,e.shape);let o=i;const u=h.backend_util.getAxesPermutation(o,a),l=null!=u;let c=e;l&&(c=Zw(e,u,r),o=h.backend_util.getInnerMostAxes(o.length,a)),h.backend_util.assertAxesAreInnerMostDims("sum",o,a);const[p,d]=h.backend_util.computeOutAndReduceShapes(c.shape,o);let f=p;n&&(f=h.backend_util.expandShapeToKeepDim(p,i));const m=h.util.sizeFromShape(d),g=Gw({inputs:{x:c},attrs:{shape:[h.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Xw(g,(0,h.sumOutType)(e.dtype),"sum",r),b=Gw({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),l&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const Jw={kernelName:h.Sum,backendName:"webgl",kernelFunc:Qw};function ek(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=aw(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=Zw(s,a,i);return l}const tk={kernelName:h.Transpose,backendName:"webgl",kernelFunc:ek};function nk({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=h.util.sizeFromShape(g),x=h.util.sizeFromShape(y),v=h.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);h.util.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[b,p,f]:[b,f,p],k=r?[x,m,d]:[x,d,m],S=Gw({inputs:{x:e},backend:s,attrs:{shape:w}}),I=Gw({inputs:{x:t},backend:s,attrs:{shape:k}}),N=[S,I],T=Math.max(b,x),C=n?S.shape[1]:S.shape[2],_=null!=a,E=null!=i,$="leakyrelu"===u,A=null!=u?Lw(u,!0):null;let R;if((1===f||1===m)&&C>1e3&&!1===(_||E||$||null!=A)){let e=S,t=I;n&&(e=ek({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=ek({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===m;let i=e;1!==m&&(i=Gw({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),N.push(i));const o=1===m?2:1;let u=t;a&&(u=Gw({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),N.push(u));const l=Ww({inputs:{a:i,b:u},backend:s});R=Qw({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=(0,h.upcastType)(e.dtype,t.dtype),l=new Bw(w,k,[T,f,m],n,r,_,A,E,$),c=[S,I];if(null!=a&&c.push(a),E&&c.push(i),$){const e=s.makeTensorInfo([],"float32",h.util.createScalarValue(o,"float32"));c.push(e),N.push(e)}R=s.runWebGLProgram(l,c,u)}const D=Gw({inputs:{x:R},backend:s,attrs:{shape:v}});N.push(R);for(const e of N)s.disposeIntermediateTensorInfo(e);return D}const rk={kernelName:h._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return nk({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},sk="return abs(x);",ak={kernelName:h.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Hv(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,h.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bw(r.shape,sk):new mw(r.shape,sk),n.runWebGLProgram(s,[r],r.dtype)}},ik=Mw({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ok={kernelName:h.Acos,backendName:"webgl",kernelFunc:ik},uk=Mw({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),lk={kernelName:h.Acosh,backendName:"webgl",kernelFunc:uk},ck="return a + b;",hk=zw({opSnippet:ck,packedOpSnippet:ck,supportsComplex:!0,cpuKernelImpl:bv}),pk={kernelName:h.Add,backendName:"webgl",kernelFunc:hk};class dk{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class fk{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const mk={kernelName:h.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Tw({inputs:{x:s[0]},backend:r});if(s.length>(0,h.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>(0,h.upcastType)(e,t))),i=s.map((e=>e.shape)),o=(0,h.env)().getBool("WEBGL_PACK")?new fk(s[0].shape,i):new dk(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},gk={kernelName:h.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=h.util.parseAxisParam(a,s.shape);let l=u;const c=h.backend_util.getAxesPermutation(l,o);let p=s;null!=c&&(p=ek({inputs:{x:s},backend:n,attrs:{perm:c}}),l=h.backend_util.getInnerMostAxes(l.length,o)),h.backend_util.assertAxesAreInnerMostDims("all",l,o);const[d,f]=h.backend_util.computeOutAndReduceShapes(p.shape,l),m=Gw({inputs:{x:p},backend:n,attrs:{shape:[-1,h.util.sizeFromShape(f)]}}),g=Xw(m,m.dtype,"all",n);let y;return y=Gw(i?{inputs:{x:g},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(p),y}},yk={kernelName:h.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=h.util.parseAxisParam(a,s.shape);let l=u;const c=h.backend_util.getAxesPermutation(l,o);let p=s;null!=c&&(p=ek({inputs:{x:s},backend:n,attrs:{perm:c}}),l=h.backend_util.getInnerMostAxes(l.length,o)),h.backend_util.assertAxesAreInnerMostDims("any",l,o);const[d,f]=h.backend_util.computeOutAndReduceShapes(p.shape,l),m=Gw({inputs:{x:p},backend:n,attrs:{shape:[-1,h.util.sizeFromShape(f)]}}),g=Xw(m,m.dtype,"any",n);let y;return y=Gw(i?{inputs:{x:g},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(p),y}};class bk{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class xk{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,h.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=Qx(o),l=uw("coords",o);let c,p;if(1===a){p=o+1;const e=Qx(p);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else p=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((e=>"int "+e)),g=uw("sourceLocR",p-1).concat("inIdx.r"),y=uw("sourceLocG",p-1).concat("inIdx.g"),b=uw("sourceLocB",p-1).concat("inIdx.b"),x=uw("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function vk(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=h.backend_util.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new bk(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const p=vk(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function wk(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],i=h.backend_util.computeOptimalWindowSize(a),o=new xk(s,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=wk(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function kk(e,t,n,r){const s=[n];if(h.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,h.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=h.backend_util.computeOutAndReduceShapes(i.shape,s),l=h.util.sizeFromShape(u),c=Gw({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const p=vk(e,c,r);n.push(p);const d=Gw({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return wk(e,t,r)}const Sk={kernelName:h.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=h.util.parseAxisParam(a,s.shape);const o=h.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=ek({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=h.backend_util.getInnerMostAxes(i.length,u.shape.length)),h.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=kk(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Ik={kernelName:h.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=h.util.parseAxisParam(a,s.shape);const o=h.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=ek({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=h.backend_util.getInnerMostAxes(i.length,u.shape.length)),h.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=kk(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Nk=Mw({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Tk={kernelName:h.Asin,backendName:"webgl",kernelFunc:Nk},Ck=Mw({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),_k={kernelName:h.Asinh,backendName:"webgl",kernelFunc:Ck},Ek=Mw({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),$k={kernelName:h.Atan,backendName:"webgl",kernelFunc:Ek},Ak=zw({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Rk={kernelName:h.Atan2,backendName:"webgl",kernelFunc:Ak},Dk=Mw({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Fk={kernelName:h.Atanh,backendName:"webgl",kernelFunc:Dk};class Ok{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Mk{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const zk={kernelName:h.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Ox(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=h.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&h.util.arraysEqual(l.inShape,l.outShape))return Tw({inputs:{x:s},backend:n});const c=new Ok(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},Lk={kernelName:h.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=h.backend_util.computePool3DInfo(s.shape,a,i,[1,1,1],o,u,l),p=new Mk(c,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class Bk{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Pk{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Vk={kernelName:h.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,p=h.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new Pk(p);return n.runWebGLProgram(d,[s],i.dtype)}},Wk={kernelName:h.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Ox([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=h.backend_util.computePool2DInfo(i.shape,o,u,1,l),p=new Bk(c);return n.runWebGLProgram(p,[s],i.dtype)}},Uk={kernelName:h.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return nk({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class Gk{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],h.backend_util.assertAndGetBroadcastShape(e,t),h.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(h.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(h.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class jk{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],h.backend_util.assertAndGetBroadcastShape(e,t),h.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(h.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(h.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Hk={kernelName:h.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;h.util.assert(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h.util.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h.util.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let p=null;null!=o&&(p=o.shape,l.push(o));const d=(0,h.env)().getBool("WEBGL_PACK_NORMALIZATION")?new jk(r.shape,s.shape,a.shape,c,p,u):new Gk(r.shape,s.shape,a.shape,c,p,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class qk{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Qx(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Xk.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Xk[t]} = start[${t}] + coords.${Xk[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Xk=["x","y","z","w","u","v"];class Kk{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Qx(this.rank),n=uw("coords",this.rank),r=uw("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Yk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=h.slice_util.parseSliceParams(s,a,i);if(h.slice_util.assertParamsValid(s,o,u),0===h.util.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=qv(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=h.slice_util.isSliceContinous(s.shape,o,u);if(l||!c){const e=(0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kk(u):new qk(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=h.slice_util.computeFlatOffset(t,h.util.computeStrides(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const Zk={kernelName:h.Slice,backendName:"webgl",kernelFunc:Yk},Qk={kernelName:h.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;h.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=h.backend_util.getReshaped(s.shape,a,o),l=h.backend_util.getPermuted(u.length,a.length),c=h.backend_util.getReshapedPermuted(s.shape,a,o),p=h.backend_util.getSliceBeginCoords(i,a.length),d=h.backend_util.getSliceSize(c,i,a.length),f=[],m=Gw({inputs:{x:s},backend:n,attrs:{shape:u}}),g=ek({inputs:{x:m},backend:n,attrs:{perm:l}}),y=Gw({inputs:{x:g},backend:n,attrs:{shape:c}}),b=Yk({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Jk={kernelName:h.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=xv(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},eS={kernelName:h.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=h.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},tS=zw({opSnippet:"return float(a != b);",cpuKernelImpl:Pv,dtype:"bool"}),nS={kernelName:h.NotEqual,backendName:"webgl",kernelFunc:tS};function rS(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tw({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const sS={kernelName:h.Real,backendName:"webgl",kernelFunc:rS},aS={kernelName:h.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return Tw({inputs:{x:a},backend:r});const t=h.zeros(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=_w({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=rS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!h.util.hasEncodingLoss(a.dtype,i)){const e=Tw({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new mw(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",h.util.getTypedArrayFromDType("bool",1)),t=tS({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},iS="return ceil(x);",oS=Mw({opSnippet:iS,packedOpSnippet:iS,cpuKernelImpl:wv}),uS={kernelName:h.Ceil,backendName:"webgl",kernelFunc:oS};class lS{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class cS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const hS={kernelName:h.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=(0,h.env)().getBool("WEBGL_PACK_CLIP")?new cS(s.shape):new lS(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class pS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function dS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const fS={kernelName:h.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new pS(r.shape),i=[dS(r,s.complexTensorInfos.real),dS(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class mS{constructor(e){this.outputShape=[],this.outputShape=h.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class gS{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=h.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=Qx(r),a=uw("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let p=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];p+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${yS(i,u,t)}),\n            vec2(${yS(l,u,t)}));\n        }`}const d=o.length,f=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${yS(i,u,f)}),\n          vec2(${yS(l,u,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function yS(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function bS(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tw({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const xS={kernelName:h.Imag,backendName:"webgl",kernelFunc:bS};function vS(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>rS({inputs:{input:e},backend:n}))),s=e.map((e=>bS({inputs:{input:e},backend:n}))),a=vS(r,t,n),i=vS(s,t,n),o=_w({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=h.util.sizeFromShape(e.shape.slice(t));return Gw({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=h.backend_util.computeOutShape(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=kv(a,i,r,o),l=h.backend_util.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=(0,h.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){const r=[];for(let s=0;s<e.length;s+=a){const i=e.slice(s,s+a);r.push(vS(i,t,n))}const s=vS(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return s}if((0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new gS(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:i,outShape:o}=function(e,t,n){const r=h.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Gw({inputs:{x:e},attrs:{shape:[-1,h.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new mS(i.map((e=>e.shape))),l=n.runWebGLProgram(u,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Gw({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function wS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=h.util.parseAxisParam(s,t[0].shape)[0],i=h.backend_util.computeOutShape(t.map((e=>e.shape)),a);if(0===h.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>h.util.sizeFromShape(e.shape)>0));if(1===o.length)return Tw({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return h.backend_util.assertParamsConsistent(u,a),vS(o,a,n)}const kS={kernelName:h.Concat,backendName:"webgl",kernelFunc:wS};class SS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class IS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=sv(this.outputShape.length);const{dataFormat:n}=t,r=zx(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function TS(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function CS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=a){const e=TS(a.shape,f);null!=e&&(a=Gw({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=TS(s.shape,f);null!=e&&(s=Gw({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==p&&1!==d||!(c>1e3))&&l.isPacked&&f&&null!=l.texture&&u[2]%2!=0&&h.util.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,h.util.assert(Ex(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const f=Gw({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=nk({a:p,b:f,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(y.dataId);h.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,b.shape=n.outShape,m=Tw({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const u=n.outHeight*n.outWidth,l=Gw({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=Gw({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=nk({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=Gw({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function _S({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=u*l*c,y=d*p,b=[n.batchSize,g,y],x=[];if(null!=a){const e=TS(a.shape,m);null!=e&&(a=Gw({inputs:{x:a},backend:r,attrs:{shape:e}}),x.push(a))}if(null!=s){const e=TS(s.shape,m);null!=e&&(s=Gw({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const v=Gw({inputs:{x:t},backend:r,attrs:{shape:[1,g,h.util.sizeFromShape(t.shape)/g]}});x.push(v);const w=new NS(b,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(w,[e],"float32",k),I=Gw({inputs:{x:S},backend:r,attrs:{shape:b}});x.push(S),x.push(I);const N=null!=s,T=null!=a,C="leakyrelu"===o,_=o?Lw(o,!0):null,E=new Bw(m?I.shape:v.shape,m?v.shape:I.shape,m?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],!0,!1,N,_,T,C),$=m?[I,v]:[v,I];if(s&&$.push(s),T&&$.push(a),C){const e=r.makeTensorInfo([],"float32",h.util.createScalarValue(i,"float32"));$.push(e),x.push(e)}const A=r.runWebGLProgram(E,$,"float32"),R=Gw({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});x.push(A);for(const e of x)r.disposeIntermediateTensorInfo(e);return R}const ES={kernelName:h.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,p=h.backend_util.convertConv2DDataFormat(u),d=h.backend_util.computeConv2DInfo(s.shape,a.shape,i,l,o,c,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,h.env)().getBool("WEBGL_CONV_IM2COL"))f=_S({x:s,filter:a,convInfo:d,backend:n});else{const e=new SS(d);f=n.runWebGLProgram(e,[s,a],"float32")}else f=CS({x:s,filter:a,convInfo:d,backend:n});const m=Gw({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class $S{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const FS={kernelName:h.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,p=h.backend_util.convertConv2DDataFormat(u),d=h.backend_util.computeConv2DInfo(s.shape,c,i,1,o,l,!1,p),f=new $S(d);return n.runWebGLProgram(f,[s,a],"float32")}},OS={kernelName:h.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=h.backend_util.convertConv2DDataFormat(l),d=h.backend_util.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),f=new AS(d);return n.runWebGLProgram(f,[s,a],"float32")}},MS={kernelName:h.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=h.backend_util.computeConv3DInfo(s.shape,a.shape,i,u,o),c=new IS(l);return n.runWebGLProgram(c,[s,a],"float32")}},zS={kernelName:h.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=h.backend_util.computeConv3DInfo(s.shape,u,i,1,o),c=new RS(l);return n.runWebGLProgram(c,[s,a],"float32")}},LS={kernelName:h.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=h.backend_util.computeConv3DInfo(u,a.shape,o,1,i),c=new DS(l);return n.runWebGLProgram(c,[s,a],"float32")}},BS=Mw({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),PS={kernelName:h.Cos,backendName:"webgl",kernelFunc:BS},VS=Mw({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),WS={kernelName:h.Cosh,backendName:"webgl",kernelFunc:VS};class US{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const GS={kernelName:h.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new US(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var jS;!function(e){e.Prod="*",e.Sum="+"}(jS||(jS={}));class HS{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===jS.Prod?"1.0":"0.0",i=n?a:`getX(${qS(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Qx(s)} coords = getOutputCoords();\n        int end = ${XS(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${XS(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${qS(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function qS(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XS(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function KS(e,t,n,r,s,a){const i=t.shape.length,o=h.backend_util.getAxesPermutation([r],i);let u=t;null!=o&&(u=ek({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=h.backend_util.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let p=Tw({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new HS(e,u.shape,!1,a),s=[[t]],i=p;p=n.runWebGLProgram(r,[p],p.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new HS(e,u.shape,s,a),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=ek({inputs:{x:p},backend:n,attrs:{perm:h.backend_util.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}const YS={kernelName:h.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return KS(jS.Prod,s,n,a,i,o)}},ZS={kernelName:h.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return KS(jS.Sum,s,n,a,i,o)}},QS={kernelName:h.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=xv(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=vv(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class JS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const eI={kernelName:h.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new JS("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class tI{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=sv(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class nI{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=sv(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?h.util.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const rI={kernelName:h.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const p=h.backend_util.computeConv2DInfo(s.shape,a.shape,i,c,o,l,!0);let d;d=(0,h.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new nI(p):new tI(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",f)}};class sI{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aI{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iI={kernelName:h.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,p=h.backend_util.computeConv2DInfo(s.shape,c,i,o,u,l,!0),d=new sI(p);return n.runWebGLProgram(d,[s,a],"float32")}},oI={kernelName:h.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,p=h.backend_util.computeConv2DInfo(c,a.shape,i,o,u,l,!0),d=new aI(p);return n.runWebGLProgram(d,[s,a],"float32")}};class uI{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const lI={kernelName:h.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=h.util.sizeFromShape(r.shape),i=Gw({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new uI(a),u=n.runWebGLProgram(o,[i],i.dtype),l=Gw({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class cI{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const hI={kernelName:h.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=h.backend_util.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",u);let c;const p=new cI(l);c=n.runWebGLProgram(p,[s,a],"float32");const d=Gw({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},pI={kernelName:h.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=h.backend_util.decodeEinsumEquation(s,a.length);h.backend_util.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=h.backend_util.getEinsumComputePath(o,u),p=c.length;let d=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=h.backend_util.getEinsumPermutation(f,u[t]);let s;h.backend_util.isIdentityPermutation(e)?s=a[t]:(s=ek({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);h.util.arraysEqual(s.shape,i)||(s=Gw({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===d?d=s:(d=Ww({inputs:{a:s,b:d},backend:n}),m.push(d))}e<p-1&&(l[e]>=0&&(d=Qw({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},dI=Mw({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),fI={kernelName:h.Elu,backendName:"webgl",kernelFunc:dI},mI={kernelName:h.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=(0,h.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nw("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Iw("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},gI=zw({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Sv}),yI={kernelName:h.Equal,backendName:"webgl",kernelFunc:gI},bI=Mw({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${h.backend_util.ERF_P};\n  float a1 = ${h.backend_util.ERF_A1};\n  float a2 = ${h.backend_util.ERF_A2};\n  float a3 = ${h.backend_util.ERF_A3};\n  float a4 = ${h.backend_util.ERF_A4};\n  float a5 = ${h.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),xI={kernelName:h.Erf,backendName:"webgl",kernelFunc:bI},vI=Mw({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Iv,dtype:"float32"}),wI={kernelName:h.Exp,backendName:"webgl",kernelFunc:vI};function kI(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(h.util.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),Gw({inputs:{x:a},backend:r,attrs:{shape:o}})}const SI={kernelName:h.ExpandDims,backendName:"webgl",kernelFunc:kI},II="return exp(x) - 1.0;",NI=Mw({opSnippet:II,packedOpSnippet:II,cpuKernelImpl:Nv}),TI={kernelName:h.Expm1,backendName:"webgl",kernelFunc:NI};class CI{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function _I(e,t,n){const r=n.texData.get(e.dataId),s=h.util.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=Gw({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new CI("real",o,t),l=new CI("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),f=_w({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=Gw({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const EI={kernelName:h.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _I(r,!1,n)}};class $I{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function AI(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||h.util.inferDtype(s),"string"===a){const e=h.util.getArrayFromDType(a,h.util.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new $I(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const RI={kernelName:h.Fill,backendName:"webgl",kernelFunc:AI};class DI{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const FI={kernelName:h.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new DI(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},OI="return floor(x);",MI=Mw({opSnippet:OI,packedOpSnippet:OI,cpuKernelImpl:Tv}),zI={kernelName:h.Floor,backendName:"webgl",kernelFunc:MI},LI=zw({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),BI={kernelName:h.FloorDiv,backendName:"webgl",kernelFunc:LI};class PI{constructor(e){this.variableNames=["A"];const t=zx(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class VI{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=zx(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const WI={kernelName:h.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],p=[l,u,a];(o||i)&&(null==UI&&(UI=document.createElement("canvas").getContext("2d")),UI.canvas.width=u,UI.canvas.height=l,UI.drawImage(s,0,0,u,l),s=UI.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=ox.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=(0,h.env)().getBool("WEBGL_PACK")?new VI(p):new PI(p),m=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),m}};let UI;const GI={kernelName:h.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,g=h.backend_util.convertConv2DDataFormat(c),y=h.backend_util.computeConv2DInfo(s.shape,a.shape,u,p,l,d,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,h.env)().getBool("WEBGL_CONV_IM2COL"))b=_S({x:s,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});else{const e=null!=i,t=null!=o,r="leakyrelu"===f,u=f?Lw(f,!1):null,l=new SS(y,e,u,t,r),p=[s,a],d=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Gw({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(e&&p.push(d(i,c)),t&&p.push(d(o,c)),r){const e=n.makeTensorInfo([],"float32",h.util.createScalarValue(m,"float32"));p.push(e),x.push(e)}b=n.runWebGLProgram(l,p,"float32")}else b=CS({x:s,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});const v=Gw({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},jI={kernelName:h.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=[];let g=c;null==g&&(g=[1,1]),h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const y=h.backend_util.computeConv2DInfo(s.shape,a.shape,u,g,l,p,!0),b=(0,h.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?Lw(d,b):null,v=[s,a],w=null!=i,k=null!=o,S="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),S){const e=n.makeTensorInfo([],"float32",h.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let I;I=b?new nI(y,w,x,k,S):new tI(y,w,x,k,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(I,v,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class HI{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=Qx(t.length),a=Qx(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=Qx(r.length),u=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${u};\n            flattenIndex += index * ${i};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const qI={kernelName:h.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=h.util.sizeFromShape(r.shape),[u,l,c,p]=h.backend_util.prepareAndValidate(r,s),d=Gw({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=Gw({inputs:{x:r},backend:n,attrs:{shape:[h.util.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Cv(e,t,r.dtype,l,i,c,p,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const m=new HI(i,p,[l,c],r.shape),g=n.runWebGLProgram(m,[f,d],f.dtype),y=Gw({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class XI{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Qx(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function KI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=h.util.parseAxisParam(i,s.shape)[0];if((0,h.env)().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];h.util.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=h.backend_util.segment_util.collectGatherOpShapeInfo(s,a,u,o),c=h.util.sizeFromShape(a.shape),p=[],d=Gw({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Gw({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(f);const m=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),r=_v(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const g=new XI(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);p.push(y);const b=Gw({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const YI={kernelName:h.GatherV2,backendName:"webgl",kernelFunc:KI},ZI=zw({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Ev,dtype:"bool"}),QI={kernelName:h.Greater,backendName:"webgl",kernelFunc:ZI},JI=zw({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:$v}),eN={kernelName:h.GreaterEqual,backendName:"webgl",kernelFunc:JI},tN={kernelName:h.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _I(r,!0,n)}},nN=Mw({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),rN={kernelName:h.IsFinite,backendName:"webgl",kernelFunc:nN},sN=Mw({opSnippet:"return float(isinf(x));",dtype:"bool"}),aN={kernelName:h.IsInf,backendName:"webgl",kernelFunc:sN},iN=Mw({opSnippet:"return float(isnan(x));",dtype:"bool"}),oN={kernelName:h.IsNan,backendName:"webgl",kernelFunc:iN},uN=zw({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Av,dtype:"bool"}),lN={kernelName:h.Less,backendName:"webgl",kernelFunc:uN},cN=zw({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Rv,dtype:"bool"}),hN={kernelName:h.LessEqual,backendName:"webgl",kernelFunc:cN},pN={kernelName:h.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Dv(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},dN=Mw({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Fv}),fN={kernelName:h.Log,backendName:"webgl",kernelFunc:dN},mN=Mw({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),gN={kernelName:h.Log1p,backendName:"webgl",kernelFunc:mN},yN=zw({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),bN={kernelName:h.LogicalAnd,backendName:"webgl",kernelFunc:yN},xN=Mw({opSnippet:"return float(!(x >= 1.0));"}),vN={kernelName:h.LogicalNot,backendName:"webgl",kernelFunc:xN},wN=zw({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),kN={kernelName:h.LogicalOr,backendName:"webgl",kernelFunc:wN};class SN{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class IN{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const NN={kernelName:h.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=(0,h.env)().getBool("WEBGL_PACK_NORMALIZATION")?new IN(s.shape,a,i,o,u):new SN(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class TN{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const CN={kernelName:h.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new TN(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function _N(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=h.util.parseAxisParam(a,s.shape);let l=u;const c=h.backend_util.getAxesPermutation(l,o),p=null!=c,d=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=aw(e,s.shape,s.dtype,c,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=Zw(s,c,n);l=h.backend_util.getInnerMostAxes(l.length,o)}h.backend_util.assertAxesAreInnerMostDims("max",l,o);const[m,g]=h.backend_util.computeOutAndReduceShapes(f.shape,l);let y,b=m;if(i&&(b=h.backend_util.expandShapeToKeepDim(m,u)),d){const e=n.texData.get(f.dataId).values,t=Ov(e,h.util.sizeFromShape(g),b,s.dtype);y=n.makeTensorInfo(b,s.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const s=h.util.sizeFromShape(t),a=Gw({inputs:{x:e},attrs:{shape:[h.util.sizeFromShape(e.shape)/s,s]},backend:r}),i=Xw(a,e.dtype,"max",r),o=Gw({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const EN={kernelName:h.Max,backendName:"webgl",kernelFunc:_N},$N=zw({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Mv}),AN={kernelName:h.Maximum,backendName:"webgl",kernelFunc:$N},RN={kernelName:h.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Ox(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=h.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&h.util.arraysEqual(l.inShape,l.outShape))return Tw({inputs:{x:s},backend:n});const c=new Ok(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},DN={kernelName:h.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=h.backend_util.computePool3DInfo(s.shape,a,i,[1,1,1],o,l,u),p=new Mk(c,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class FN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ON{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MN={kernelName:h.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,p=h.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new Mk(p,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new ON(p),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},zN={kernelName:h.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Ox([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,d=h.backend_util.computePool2DInfo(o.shape,u,l,1,c,p),f=new Ok(d,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),g=new FN(d),y=n.runWebGLProgram(g,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}},LN={kernelName:h.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;h.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];h.util.assert(h.backend_util.eitherStridesOrDilationsAreOne(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=h.backend_util.computePool2DInfo(r.shape,s,a,l,i),[p,d]=function(e,t,n,r){let s=new Ok(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new Ok(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[p,d]}},BN={kernelName:h.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=h.util.parseAxisParam(a,r.shape);let l=u;const c=h.backend_util.getAxesPermutation(l,o),p=null!=c,d=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(d){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=aw(e,r.shape,r.dtype,c,t);m=i.makeTensorInfo(t,r.dtype),i.texData.get(m.dataId).values=n}else m=Zw(r,c,i);f.push(m),l=h.backend_util.getInnerMostAxes(l.length,o)}h.backend_util.assertAxesAreInnerMostDims("sum",l,o);const[g,y]=h.backend_util.computeOutAndReduceShapes(m.shape,l);let b=g;s&&(b=h.backend_util.expandShapeToKeepDim(g,u));const x=function(e,t,n,r){const s=h.util.sizeFromShape(t),a=Gw({inputs:{x:e},attrs:{shape:[h.util.sizeFromShape(e.shape)/s,s]},backend:r}),i=Xw(a,"float32","mean",r),o=Gw({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return x}},PN={kernelName:h.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=h.util.parseAxisParam(a,s.shape);let l=u;const c=h.backend_util.getAxesPermutation(l,o);let p=s;null!=c&&(p=ek({inputs:{x:s},backend:n,attrs:{perm:c}}),l=h.backend_util.getInnerMostAxes(l.length,s.shape.length)),h.backend_util.assertAxesAreInnerMostDims("min",l,o);const[d,f]=h.backend_util.computeOutAndReduceShapes(p.shape,l),m=Gw({inputs:{x:p},backend:n,attrs:{shape:[-1,h.util.sizeFromShape(f)]}}),g=Xw(m,m.dtype,"min",n);let y;return y=Gw(i?{inputs:{x:g},backend:n,attrs:{shape:h.backend_util.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(p),y}},VN=zw({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zv}),WN={kernelName:h.Minimum,backendName:"webgl",kernelFunc:VN};class UN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Qx(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class GN{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Qx(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=uw("rc",r),u=uw("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const jN={kernelName:h.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=(0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GN(r.shape,s,a):new UN(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},HN=zw({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qN={kernelName:h.Mod,backendName:"webgl",kernelFunc:HN};class XN{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const KN=zw({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),YN={kernelName:h.RealDiv,backendName:"webgl",kernelFunc:KN},ZN="return a - b;",QN=zw({opSnippet:ZN,packedOpSnippet:ZN,supportsComplex:!0,cpuKernelImpl:nw}),JN={kernelName:h.Sub,backendName:"webgl",kernelFunc:QN};function eT(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=h.util.parseAxisParam([a],s.shape),o=_N({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=h.backend_util.expandShapeToKeepDim(o.shape,i),l=Gw({inputs:{x:o},backend:n,attrs:{shape:u}}),c=QN({inputs:{a:s,b:l},backend:n}),p=vI({inputs:{x:c},backend:n}),d=Qw({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=Gw({inputs:{x:d},backend:n,attrs:{shape:u}}),m=KN({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const tT={kernelName:h.Softmax,backendName:"webgl",kernelFunc:eT},nT={kernelName:h.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:eT({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new XN(l,c,a),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},rT={kernelName:h.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=Bv(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=(0,h.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bw(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new mw(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},sT=h.kernel_impls.nonMaxSuppressionV3Impl,aT={kernelName:h.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){h.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=sT(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},iT=h.kernel_impls.nonMaxSuppressionV4Impl,oT={kernelName:h.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){h.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:f}=iT(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},uT=h.kernel_impls.nonMaxSuppressionV5Impl,lT={kernelName:h.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){h.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),d=i,f=o,m=u,g=l,{selectedIndices:y,selectedScores:b}=uT(c,p,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class cT{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const hT={kernelName:h.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,u=h.util.sizeFromShape(s.shape),l=new cT(u,a,i,o),c=Gw({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=Gw({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(p),d}};function pT(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=rS({inputs:{input:r},backend:n}),t=pT({inputs:{x:e},backend:n}),s=bS({inputs:{input:r},backend:n}),a=pT({inputs:{x:s},backend:n}),i=_w({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return AI({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const dT={kernelName:h.ZerosLike,backendName:"webgl",kernelFunc:pT},fT={kernelName:h.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=rS({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=bS({inputs:{input:s},backend:r}),i=pT({inputs:{x:a},backend:r}),o=_w({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return AI({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},mT={kernelName:h.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return kI({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{h.util.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),h.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=wS({inputs:t.map((e=>{const t=kI({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class gT{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Qx(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Qx(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=uw("rc",r),u=uw("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const bT=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===h.util.sizeFromShape(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return AI({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=(0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yT(s.shape,a,i):new gT(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},xT={kernelName:h.PadV2,backendName:"webgl",kernelFunc:bT},vT=zw({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),wT={kernelName:h.Pow,backendName:"webgl",kernelFunc:vT},kT={kernelName:h.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=h.util.parseAxisParam(a,s.shape);let c=l;const p=h.backend_util.getAxesPermutation(c,o);let d,f=s;if(null!=p&&(f=ek({inputs:{x:s},backend:n,attrs:{perm:p}}),c=h.backend_util.getInnerMostAxes(c.length,o),u.push(f)),h.backend_util.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:s}=Vv(f.shape,f.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=h.backend_util.computeOutAndReduceShapes(f.shape,c),r=h.util.sizeFromShape(t),a=Gw({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Xw(a,(0,h.sumOutType)(s.dtype),"prod",n);d=Gw({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=h.backend_util.expandShapeToKeepDim(d.shape,l);d=Gw({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ST=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=Wv(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},IT={kernelName:h.Range,backendName:"webgl",kernelFunc:ST},NT=Mw({opSnippet:"return 1.0 / x;"}),TT={kernelName:h.Reciprocal,backendName:"webgl",kernelFunc:NT},CT=Mw({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_T={kernelName:h.Relu,backendName:"webgl",kernelFunc:CT},ET=Mw({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$T={kernelName:h.Relu6,backendName:"webgl",kernelFunc:ET};class AT{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class RT{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const DT={kernelName:h.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=(0,h.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RT(s.shape,u,l,a,i):new AT(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class FT{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const OT={kernelName:h.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new FT(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class MT{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class zT{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const LT={kernelName:h.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=(0,h.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zT(s.shape,u,l,a,i):new MT(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class BT{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const PT={kernelName:h.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new BT(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class VT{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=Qx(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class WT{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=uw("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Qx(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const UT={kernelName:h.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=h.util.parseAxisParam(a,s.shape);if(0===i)return Tw({inputs:{x:s},backend:n});const u=(0,h.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WT(s.shape,o):new VT(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class GT{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const jT={kernelName:h.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new GT(r.shape,a),[l,c]=h.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),p=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,p)}},HT=Mw({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qT={kernelName:h.Round,backendName:"webgl",kernelFunc:HT},XT=Mw({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Uv}),KT={kernelName:h.Rsqrt,backendName:"webgl",kernelFunc:XT};class YT{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=Qx(s.length),u=Qx(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const ZT={kernelName:h.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=h.backend_util.calculateShapes(a,s,i),d=[p/l,l];if(0===p)return n.makeTensorInfo(i,s.dtype);const f=Gw({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),m=Gw({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new YT(u,o,f.shape.length,m.shape.length,c,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Gw({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class QT{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,h.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const JT={kernelName:h.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new QT(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class eC{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=Qx(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const tC={kernelName:h.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new eC(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],(0,h.upcastType)(s.dtype,a.dtype))}},nC=Mw({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${h.backend_util.SELU_SCALEALPHA};\n  float scale = ${h.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),rC={kernelName:h.Selu,backendName:"webgl",kernelFunc:nC},sC=Mw({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jv}),aC={kernelName:h.Sigmoid,backendName:"webgl",kernelFunc:sC},iC=Mw({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),oC={kernelName:h.Sign,backendName:"webgl",kernelFunc:iC},uC=Mw({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),lC={kernelName:h.Sin,backendName:"webgl",kernelFunc:uC},cC=Mw({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),hC={kernelName:h.Sinh,backendName:"webgl",kernelFunc:cC},pC=Mw({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),dC={kernelName:h.Softplus,backendName:"webgl",kernelFunc:pC},fC={kernelName:h.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;h.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=bT({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=h.backend_util.getReshaped(c.shape,a,o,!1),d=h.backend_util.getPermuted(p.length,a.length,!1),f=h.backend_util.getReshapedPermuted(c.shape,a,o,!1),m=Gw({inputs:{x:c},backend:n,attrs:{shape:p}}),g=ek({inputs:{x:m},backend:n,attrs:{perm:d}}),y=Gw({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(c),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},mC={kernelName:h.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=Xv(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},gC={kernelName:h.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=Kv(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},yC={kernelName:h.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=Yv(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},bC={kernelName:h.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=Yv(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},xC={kernelName:h.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=h.backend_util.calculateShapes(a,s,o);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=h.util.decodeString(n.readSync(i.dataId)[0]),f=Gv(e,t,o,d,c,l,u,p,r,!1);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new YT(l,u,s.shape.length,a.shape.length,p,[d,1],!1),m=n.runWebGLProgram(f,[a,s,i],a.dtype),g=Gw({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},vC={kernelName:h.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=h.util.parseAxisParam(i,s.shape)[0],u=h.backend_util.prepareSplitSize(s,a,o),l=s.shape.length,c=new Array(l).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[o]=e;const r=Yk({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},wC="return sqrt(x);",kC=Mw({opSnippet:wC,packedOpSnippet:wC,cpuKernelImpl:Zv}),SC={kernelName:h.Sqrt,backendName:"webgl",kernelFunc:kC},IC=Mw({opSnippet:"return x * x;"}),NC={kernelName:h.Square,backendName:"webgl",kernelFunc:IC},TC="return (a - b) * (a - b);",CC=zw({opSnippet:TC,packedOpSnippet:TC}),_C={kernelName:h.SquaredDifference,backendName:"webgl",kernelFunc:CC},EC={kernelName:h.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new mw(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class $C{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=Qx(n.length),a=Qx(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const AC={kernelName:h.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=h.slice_util.sliceInfo(s.shape,a,i,o,u,l,c,p,d);let k;if(g)k=Gw({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){h.util.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=h.slice_util.computeOutShape(x,v,w),t=Yk({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=Gw({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,h.buffer)(s.shape,s.dtype,e),r=Qv(f,t,w,x);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new $C(x,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}const S=Gw({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}},RC={kernelName:h.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Jv(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},DC={kernelName:h.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=ew(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},FC={kernelName:h.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=tw(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},OC=Mw({opSnippet:"return tan(x);"}),MC={kernelName:h.Tan,backendName:"webgl",kernelFunc:OC},zC=Mw({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),LC={kernelName:h.Tanh,backendName:"webgl",kernelFunc:zC};class BC{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Qx(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function PC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>h.util.decodeString(e))):e,r=(0,h.buffer)(s.shape,s.dtype,t),i=rw(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new BC(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const VC={kernelName:h.Tile,backendName:"webgl",kernelFunc:PC};class WC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class UC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function GC(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function jC(e){let t=1;for(;t<e;)t*=2;return t}const HC={kernelName:h.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=(0,h.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,h.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=sw(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,AI({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),d=null!==p&&p.isPacked,f=d?n.unpackTensor(s):s,m=h.util.sizeFromShape(l)/c,g=Gw({inputs:{x:f},attrs:{shape:[m,c]},backend:n});d&&GC(n,f);const y=jC(a),b=jC(c);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,r)=>{const s=v(),a=new WC(r),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,s,"int32",i),GC(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=v(),r=new UC([m,e/2]),s=[[c],[null===x?1:0],[y]],a=x;x=n.runWebGLProgram(r,t,"int32",s),GC(n,a);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=Yk({inputs:{x},backend:n,attrs:{begin:0,size:[m,a]}}),GC(n,k);let S=KI({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});GC(n,g);const I=l.slice(0,-1);I.push(a),k=x,x=Gw({inputs:{x},attrs:{shape:I},backend:n}),GC(n,k);const N=S;return S=Gw({inputs:{x:S},attrs:{shape:I},backend:n}),GC(n,N),[S,x]}};class qC{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const XC={kernelName:h.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=new qC(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},KC={kernelName:h.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Ox(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=iw(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},YC={kernelName:h.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=Yk({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=Gw({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class ZC{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const QC=[rk,ak,ok,lk,pk,mk,gk,yk,Sk,Ik,Tk,_k,$k,Rk,Fk,zk,Lk,Vk,Wk,Uk,Hk,Qk,Jk,eS,aS,uS,hS,Ew,fS,kS,ES,FS,OS,MS,zS,LS,PS,WS,GS,YS,ZS,QS,eI,rI,iI,oI,lI,hI,pI,fI,mI,yI,xI,wI,SI,TI,EI,RI,FI,zI,BI,WI,GI,jI,qI,YI,QI,eN,Cw,tN,xS,rN,aN,oN,Rw,lN,hN,pN,fN,gN,bN,vN,kN,NN,CN,EN,AN,RN,DN,MN,zN,LN,BN,PN,WN,jN,qN,nT,Uw,rT,aT,oT,lT,nS,hT,fT,mT,xT,wT,Ow,kT,IT,sS,YN,TT,_T,$T,jw,DT,OT,LT,PT,UT,jT,qT,KT,ZT,JT,tC,rC,aC,oC,lC,hC,Zk,tT,dC,fC,mC,gC,yC,bC,xC,vC,SC,NC,_C,EC,AC,RC,DC,FC,JN,Jw,MC,LC,VC,HC,XC,tk,KC,YC,{kernelName:h.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=h.backend_util.getAxesPermutation([l],o);let p=s;null!=c&&(p=ek({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(p),l=h.backend_util.getInnerMostAxes(1,o)[0]);const d=h.backend_util.segment_util.computeOutShape(p.shape,l,i),f=h.util.sizeFromShape([p.shape[l]]),m=Gw({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=(0,h.sumOutType)(s.dtype),y=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=h.backend_util.segment_util.segOpComputeOptimalWindowSize(o,a),c=new ZC({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),p=n.compileAndRun(c,[e,r],s);if(u.push(p),p.shape[1]===a)return p;const d=ST({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=PC({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(f),y(p,t,f,s,a)},b=Gw({inputs:{x:y(m,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let x=b;if(null!=c){u.push(b);const e=h.backend_util.getUndoAxesPermutation(c);x=ek({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},dT];for(const e of QC)(0,h.registerKernel)(e);const JC={"tfjs-core":h.version_core,"tfjs-backend-cpu":"3.19.0","tfjs-backend-webgl":"3.19.0","tfjs-data":Up,"tfjs-layers":vo,"tfjs-converter":Mh.version_converter,tfjs:"3.19.0"}},7664:(e,t,n)=>{"use strict";function r(e,...t){return(...n)=>e(...t,...n)}function s(e){return function(...t){var n=t.pop();return e.call(this,t,n)}}n.r(t),n.d(t,{default:()=>ft,apply:()=>r,applyEach:()=>E,applyEachSeries:()=>R,asyncify:()=>c,auto:()=>O,autoInject:()=>V,cargo:()=>j,cargoQueue:()=>H,compose:()=>K,concat:()=>Q,concatLimit:()=>Z,concatSeries:()=>J,constant:()=>ee,detect:()=>ne,detectLimit:()=>re,detectSeries:()=>se,dir:()=>ie,doUntil:()=>ue,doWhilst:()=>oe,each:()=>ce,eachLimit:()=>he,eachOf:()=>C,eachOfLimit:()=>I,eachOfSeries:()=>$,eachSeries:()=>pe,ensureAsync:()=>de,every:()=>fe,everyLimit:()=>me,everySeries:()=>ge,filter:()=>ve,filterLimit:()=>we,filterSeries:()=>ke,forever:()=>Se,groupBy:()=>Ne,groupByLimit:()=>Ie,groupBySeries:()=>Te,log:()=>Ce,map:()=>_,mapLimit:()=>Y,mapSeries:()=>A,mapValues:()=>Ee,mapValuesLimit:()=>_e,mapValuesSeries:()=>$e,memoize:()=>Ae,nextTick:()=>Re,parallel:()=>Fe,parallelLimit:()=>Oe,priorityQueue:()=>Pe,queue:()=>Me,race:()=>Ve,reduce:()=>q,reduceRight:()=>We,reflect:()=>Ue,reflectAll:()=>Ge,reject:()=>He,rejectLimit:()=>qe,rejectSeries:()=>Xe,retry:()=>Ye,retryable:()=>Qe,seq:()=>X,series:()=>Je,setImmediate:()=>l,some:()=>et,someLimit:()=>tt,someSeries:()=>nt,sortBy:()=>rt,timeout:()=>st,times:()=>it,timesLimit:()=>at,timesSeries:()=>ot,transform:()=>ut,tryEach:()=>lt,unmemoize:()=>ct,until:()=>pt,waterfall:()=>dt,whilst:()=>ht,all:()=>fe,allLimit:()=>me,allSeries:()=>ge,any:()=>et,anyLimit:()=>tt,anySeries:()=>nt,find:()=>ne,findLimit:()=>re,findSeries:()=>se,flatMap:()=>Q,flatMapLimit:()=>Z,flatMapSeries:()=>J,forEach:()=>ce,forEachSeries:()=>pe,forEachLimit:()=>he,forEachOf:()=>C,forEachOfSeries:()=>$,forEachOfLimit:()=>I,inject:()=>q,foldl:()=>q,foldr:()=>We,select:()=>ve,selectLimit:()=>we,selectSeries:()=>ke,wrapSync:()=>c,during:()=>ht,doDuring:()=>oe});var a="function"==typeof setImmediate&&setImmediate,i="object"==typeof process&&"function"==typeof process.nextTick;function o(e){setTimeout(e,0)}function u(e){return(t,...n)=>e((()=>t(...n)))}var l=u(a?setImmediate:i?process.nextTick:o);function c(e){return d(e)?function(...t){const n=t.pop();return h(e.apply(this,t),n)}:s((function(t,n){var r;try{r=e.apply(this,t)}catch(e){return n(e)}if(r&&"function"==typeof r.then)return h(r,n);n(null,r)}))}function h(e,t){return e.then((e=>{p(t,null,e)}),(e=>{p(t,e&&e.message?e:new Error(e))}))}function p(e,t,n){try{e(t,n)}catch(e){l((e=>{throw e}),e)}}function d(e){return"AsyncFunction"===e[Symbol.toStringTag]}function f(e){if("function"!=typeof e)throw new Error("expected a function");return d(e)?c(e):e}function m(e,t=e.length){if(!t)throw new Error("arity is undefined");return function(...n){return"function"==typeof n[t-1]?e.apply(this,n):new Promise(((r,s)=>{n[t-1]=(e,...t)=>{if(e)return s(e);r(t.length>1?t:t[0])},e.apply(this,n)}))}}function g(e){return function(t,...n){return m((function(r){var s=this;return e(t,((e,t)=>{f(e).apply(s,n.concat(t))}),r)}))}}function y(e,t,n,r){t=t||[];var s=[],a=0,i=f(n);return e(t,((e,t,n)=>{var r=a++;i(e,((e,t)=>{s[r]=t,n(e)}))}),(e=>{r(e,s)}))}function b(e){return e&&"number"==typeof e.length&&e.length>=0&&e.length%1==0}const x={};function v(e){function t(...t){if(null!==e){var n=e;e=null,n.apply(this,t)}}return Object.assign(t,e),t}function w(e){return function(...t){if(null===e)throw new Error("Callback was already called.");var n=e;e=null,n.apply(this,t)}}function k(e,t,n,r){let s=!1,a=!1,i=!1,o=0,u=0;function l(){o>=t||i||s||(i=!0,e.next().then((({value:e,done:t})=>{if(!a&&!s){if(i=!1,t)return s=!0,void(o<=0&&r(null));o++,n(e,u,c),u++,l()}})).catch(h))}function c(e,t){if(o-=1,!a)return e?h(e):!1===e?(s=!0,void(a=!0)):t===x||s&&o<=0?(s=!0,r(null)):void l()}function h(e){a||(i=!1,s=!0,r(e))}l()}var S=e=>(t,n,r)=>{if(r=v(r),e<=0)throw new RangeError("concurrency limit cannot be less than 1");if(!t)return r(null);if("AsyncGenerator"===t[Symbol.toStringTag])return k(t,e,n,r);if(function(e){return"function"==typeof e[Symbol.asyncIterator]}(t))return k(t[Symbol.asyncIterator](),e,n,r);var s=function(e){if(b(e))return function(e){var t=-1,n=e.length;return function(){return++t<n?{value:e[t],key:t}:null}}(e);var t,n,r,s,a=function(e){return e[Symbol.iterator]&&e[Symbol.iterator]()}(e);return a?function(e){var t=-1;return function(){var n=e.next();return n.done?null:(t++,{value:n.value,key:t})}}(a):(n=(t=e)?Object.keys(t):[],r=-1,s=n.length,function(){var e=n[++r];return r<s?{value:t[e],key:e}:null})}(t),a=!1,i=!1,o=0,u=!1;function l(e,t){if(!i)if(o-=1,e)a=!0,r(e);else if(!1===e)a=!0,i=!0;else{if(t===x||a&&o<=0)return a=!0,r(null);u||c()}}function c(){for(u=!0;o<e&&!a;){var t=s();if(null===t)return a=!0,void(o<=0&&r(null));o+=1,n(t.value,t.key,w(l))}u=!1}c()},I=m((function(e,t,n,r){return S(t)(e,f(n),r)}),4);function N(e,t,n){n=v(n);var r=0,s=0,{length:a}=e,i=!1;function o(e,t){!1===e&&(i=!0),!0!==i&&(e?n(e):++s!==a&&t!==x||n(null))}for(0===a&&n(null);r<a;r++)t(e[r],r,w(o))}function T(e,t,n){return I(e,1/0,t,n)}var C=m((function(e,t,n){return(b(e)?N:T)(e,f(t),n)}),3),_=m((function(e,t,n){return y(C,e,t,n)}),3),E=g(_),$=m((function(e,t,n){return I(e,1,t,n)}),3),A=m((function(e,t,n){return y($,e,t,n)}),3),R=g(A);const D=Symbol("promiseCallback");function F(){let e,t;function n(n,...r){if(n)return t(n);e(r.length>1?r:r[0])}return n[D]=new Promise(((n,r)=>{e=n,t=r})),n}function O(e,t,n){"number"!=typeof t&&(n=t,t=null),n=v(n||F());var r=Object.keys(e).length;if(!r)return n(null);t||(t=r);var s={},a=0,i=!1,o=!1,u=Object.create(null),l=[],c=[],h={};function p(e,t){l.push((()=>function(e,t){if(!o){var r=w(((t,...r)=>{if(a--,!1!==t)if(r.length<2&&([r]=r),t){var l={};if(Object.keys(s).forEach((e=>{l[e]=s[e]})),l[e]=r,o=!0,u=Object.create(null),i)return;n(t,l)}else s[e]=r,(u[e]||[]).forEach((e=>e())),d();else i=!0}));a++;var l=f(t[t.length-1]);t.length>1?l(s,r):l(r)}}(e,t)))}function d(){if(!i){if(0===l.length&&0===a)return n(null,s);for(;l.length&&a<t;)l.shift()()}}function m(t){var n=[];return Object.keys(e).forEach((r=>{const s=e[r];Array.isArray(s)&&s.indexOf(t)>=0&&n.push(r)})),n}return Object.keys(e).forEach((t=>{var n=e[t];if(!Array.isArray(n))return p(t,[n]),void c.push(t);var r=n.slice(0,n.length-1),s=r.length;if(0===s)return p(t,n),void c.push(t);h[t]=s,r.forEach((a=>{if(!e[a])throw new Error("async.auto task `"+t+"` has a non-existent dependency `"+a+"` in "+r.join(", "));var i,o;(o=u[i=a])||(o=u[i]=[]),o.push((()=>{0==--s&&p(t,n)}))}))})),function(){for(var e=0;c.length;)e++,m(c.pop()).forEach((e=>{0==--h[e]&&c.push(e)}));if(e!==r)throw new Error("async.auto cannot execute tasks due to a recursive dependency")}(),d(),n[D]}var M=/^(?:async\s+)?(?:function)?\s*\w*\s*\(\s*([^)]+)\s*\)(?:\s*{)/,z=/^(?:async\s+)?\(?\s*([^)=]+)\s*\)?(?:\s*=>)/,L=/,/,B=/(=.+)?(\s*)$/,P=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;function V(e,t){var n={};return Object.keys(e).forEach((t=>{var r,s=e[t],a=d(s),i=!a&&1===s.length||a&&0===s.length;if(Array.isArray(s))r=[...s],s=r.pop(),n[t]=r.concat(r.length>0?o:s);else if(i)n[t]=s;else{if(r=function(e){const t=e.toString().replace(P,"");let n=t.match(M);if(n||(n=t.match(z)),!n)throw new Error("could not parse args in autoInject\nSource:\n"+t);let[,r]=n;return r.replace(/\s/g,"").split(L).map((e=>e.replace(B,"").trim()))}(s),0===s.length&&!a&&0===r.length)throw new Error("autoInject task functions require explicit parameters.");a||r.pop(),n[t]=r.concat(o)}function o(e,t){var n=r.map((t=>e[t]));n.push(t),f(s)(...n)}})),O(n,t)}class W{constructor(){this.head=this.tail=null,this.length=0}removeLink(e){return e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev,e.prev=e.next=null,this.length-=1,e}empty(){for(;this.head;)this.shift();return this}insertAfter(e,t){t.prev=e,t.next=e.next,e.next?e.next.prev=t:this.tail=t,e.next=t,this.length+=1}insertBefore(e,t){t.prev=e.prev,t.next=e,e.prev?e.prev.next=t:this.head=t,e.prev=t,this.length+=1}unshift(e){this.head?this.insertBefore(this.head,e):U(this,e)}push(e){this.tail?this.insertAfter(this.tail,e):U(this,e)}shift(){return this.head&&this.removeLink(this.head)}pop(){return this.tail&&this.removeLink(this.tail)}toArray(){return[...this]}*[Symbol.iterator](){for(var e=this.head;e;)yield e.data,e=e.next}remove(e){for(var t=this.head;t;){var{next:n}=t;e(t)&&this.removeLink(t),t=n}return this}}function U(e,t){e.length=1,e.head=e.tail=t}function G(e,t,n){if(null==t)t=1;else if(0===t)throw new RangeError("Concurrency must not be zero");var r=f(e),s=0,a=[];const i={error:[],drain:[],saturated:[],unsaturated:[],empty:[]};function o(e,t){return e?t?void(i[e]=i[e].filter((e=>e!==t))):i[e]=[]:Object.keys(i).forEach((e=>i[e]=[]))}function u(e,...t){i[e].forEach((e=>e(...t)))}var c=!1;function h(e,t,n,r){if(null!=r&&"function"!=typeof r)throw new Error("task callback must be a function");var s,a;function i(e,...t){return e?n?a(e):s():t.length<=1?s(t[0]):void s(t)}y.started=!0;var o={data:e,callback:n?i:r||i};if(t?y._tasks.unshift(o):y._tasks.push(o),c||(c=!0,l((()=>{c=!1,y.process()}))),n||!r)return new Promise(((e,t)=>{s=e,a=t}))}function p(e){return function(t,...n){s-=1;for(var r=0,i=e.length;r<i;r++){var o=e[r],l=a.indexOf(o);0===l?a.shift():l>0&&a.splice(l,1),o.callback(t,...n),null!=t&&u("error",t,o.data)}s<=y.concurrency-y.buffer&&u("unsaturated"),y.idle()&&u("drain"),y.process()}}function d(e){return!(0!==e.length||!y.idle()||(l((()=>u("drain"))),0))}const m=e=>t=>{if(!t)return new Promise(((t,n)=>{!function(e,r){const s=(...r)=>{o(e,s),((e,r)=>{if(e)return n(e);t(r)})(...r)};i[e].push(s)}(e)}));o(e),function(e,t){i[e].push(t)}(e,t)};var g=!1,y={_tasks:new W,*[Symbol.iterator](){yield*y._tasks[Symbol.iterator]()},concurrency:t,payload:n,buffer:t/4,started:!1,paused:!1,push(e,t){if(Array.isArray(e)){if(d(e))return;return e.map((e=>h(e,!1,!1,t)))}return h(e,!1,!1,t)},pushAsync(e,t){if(Array.isArray(e)){if(d(e))return;return e.map((e=>h(e,!1,!0,t)))}return h(e,!1,!0,t)},kill(){o(),y._tasks.empty()},unshift(e,t){if(Array.isArray(e)){if(d(e))return;return e.map((e=>h(e,!0,!1,t)))}return h(e,!0,!1,t)},unshiftAsync(e,t){if(Array.isArray(e)){if(d(e))return;return e.map((e=>h(e,!0,!0,t)))}return h(e,!0,!0,t)},remove(e){y._tasks.remove(e)},process(){if(!g){for(g=!0;!y.paused&&s<y.concurrency&&y._tasks.length;){var e=[],t=[],n=y._tasks.length;y.payload&&(n=Math.min(n,y.payload));for(var i=0;i<n;i++){var o=y._tasks.shift();e.push(o),a.push(o),t.push(o.data)}s+=1,0===y._tasks.length&&u("empty"),s===y.concurrency&&u("saturated");var l=w(p(e));r(t,l)}g=!1}},length:()=>y._tasks.length,running:()=>s,workersList:()=>a,idle:()=>y._tasks.length+s===0,pause(){y.paused=!0},resume(){!1!==y.paused&&(y.paused=!1,l(y.process))}};return Object.defineProperties(y,{saturated:{writable:!1,value:m("saturated")},unsaturated:{writable:!1,value:m("unsaturated")},empty:{writable:!1,value:m("empty")},drain:{writable:!1,value:m("drain")},error:{writable:!1,value:m("error")}}),y}function j(e,t){return G(e,1,t)}function H(e,t,n){return G(e,t,n)}var q=m((function(e,t,n,r){r=v(r);var s=f(n);return $(e,((e,n,r)=>{s(t,e,((e,n)=>{t=n,r(e)}))}),(e=>r(e,t)))}),4);function X(...e){var t=e.map(f);return function(...e){var n=this,r=e[e.length-1];return"function"==typeof r?e.pop():r=F(),q(t,e,((e,t,r)=>{t.apply(n,e.concat(((e,...t)=>{r(e,t)})))}),((e,t)=>r(e,...t))),r[D]}}function K(...e){return X(...e.reverse())}var Y=m((function(e,t,n,r){return y(S(t),e,n,r)}),4),Z=m((function(e,t,n,r){var s=f(n);return Y(e,t,((e,t)=>{s(e,((e,...n)=>e?t(e):t(e,n)))}),((e,t)=>{for(var n=[],s=0;s<t.length;s++)t[s]&&(n=n.concat(...t[s]));return r(e,n)}))}),4),Q=m((function(e,t,n){return Z(e,1/0,t,n)}),3),J=m((function(e,t,n){return Z(e,1,t,n)}),3);function ee(...e){return function(...t){return t.pop()(null,...e)}}function te(e,t){return(n,r,s,a)=>{var i,o=!1;const u=f(s);n(r,((n,r,s)=>{u(n,((r,a)=>r||!1===r?s(r):e(a)&&!i?(o=!0,i=t(!0,n),s(null,x)):void s()))}),(e=>{if(e)return a(e);a(null,o?i:t(!1))}))}}var ne=m((function(e,t,n){return te((e=>e),((e,t)=>t))(C,e,t,n)}),3),re=m((function(e,t,n,r){return te((e=>e),((e,t)=>t))(S(t),e,n,r)}),4),se=m((function(e,t,n){return te((e=>e),((e,t)=>t))(S(1),e,t,n)}),3);function ae(e){return(t,...n)=>f(t)(...n,((t,...n)=>{"object"==typeof console&&(t?console.error&&console.error(t):console[e]&&n.forEach((t=>console[e](t))))}))}var ie=ae("dir"),oe=m((function(e,t,n){n=w(n);var r,s=f(e),a=f(t);function i(e,...t){if(e)return n(e);!1!==e&&(r=t,a(...t,o))}function o(e,t){return e?n(e):!1!==e?t?void s(i):n(null,...r):void 0}return o(null,!0)}),3);function ue(e,t,n){const r=f(t);return oe(e,((...e)=>{const t=e.pop();r(...e,((e,n)=>t(e,!n)))}),n)}function le(e){return(t,n,r)=>e(t,r)}var ce=m((function(e,t,n){return C(e,le(f(t)),n)}),3),he=m((function(e,t,n,r){return S(t)(e,le(f(n)),r)}),4),pe=m((function(e,t,n){return he(e,1,t,n)}),3);function de(e){return d(e)?e:function(...t){var n=t.pop(),r=!0;t.push(((...e)=>{r?l((()=>n(...e))):n(...e)})),e.apply(this,t),r=!1}}var fe=m((function(e,t,n){return te((e=>!e),(e=>!e))(C,e,t,n)}),3),me=m((function(e,t,n,r){return te((e=>!e),(e=>!e))(S(t),e,n,r)}),4),ge=m((function(e,t,n){return te((e=>!e),(e=>!e))($,e,t,n)}),3);function ye(e,t,n,r){var s=new Array(t.length);e(t,((e,t,r)=>{n(e,((e,n)=>{s[t]=!!n,r(e)}))}),(e=>{if(e)return r(e);for(var n=[],a=0;a<t.length;a++)s[a]&&n.push(t[a]);r(null,n)}))}function be(e,t,n,r){var s=[];e(t,((e,t,r)=>{n(e,((n,a)=>{if(n)return r(n);a&&s.push({index:t,value:e}),r(n)}))}),(e=>{if(e)return r(e);r(null,s.sort(((e,t)=>e.index-t.index)).map((e=>e.value)))}))}function xe(e,t,n,r){return(b(t)?ye:be)(e,t,f(n),r)}var ve=m((function(e,t,n){return xe(C,e,t,n)}),3),we=m((function(e,t,n,r){return xe(S(t),e,n,r)}),4),ke=m((function(e,t,n){return xe($,e,t,n)}),3),Se=m((function(e,t){var n=w(t),r=f(de(e));return function e(t){if(t)return n(t);!1!==t&&r(e)}()}),2),Ie=m((function(e,t,n,r){var s=f(n);return Y(e,t,((e,t)=>{s(e,((n,r)=>n?t(n):t(n,{key:r,val:e})))}),((e,t)=>{for(var n={},{hasOwnProperty:s}=Object.prototype,a=0;a<t.length;a++)if(t[a]){var{key:i}=t[a],{val:o}=t[a];s.call(n,i)?n[i].push(o):n[i]=[o]}return r(e,n)}))}),4);function Ne(e,t,n){return Ie(e,1/0,t,n)}function Te(e,t,n){return Ie(e,1,t,n)}var Ce=ae("log"),_e=m((function(e,t,n,r){r=v(r);var s={},a=f(n);return S(t)(e,((e,t,n)=>{a(e,t,((e,r)=>{if(e)return n(e);s[t]=r,n(e)}))}),(e=>r(e,s)))}),4);function Ee(e,t,n){return _e(e,1/0,t,n)}function $e(e,t,n){return _e(e,1,t,n)}function Ae(e,t=(e=>e)){var n=Object.create(null),r=Object.create(null),a=f(e),i=s(((e,s)=>{var i=t(...e);i in n?l((()=>s(null,...n[i]))):i in r?r[i].push(s):(r[i]=[s],a(...e,((e,...t)=>{e||(n[i]=t);var s=r[i];delete r[i];for(var a=0,o=s.length;a<o;a++)s[a](e,...t)})))}));return i.memo=n,i.unmemoized=e,i}var Re=u(i?process.nextTick:a?setImmediate:o),De=m(((e,t,n)=>{var r=b(t)?[]:{};e(t,((e,t,n)=>{f(e)(((e,...s)=>{s.length<2&&([s]=s),r[t]=s,n(e)}))}),(e=>n(e,r)))}),3);function Fe(e,t){return De(C,e,t)}function Oe(e,t,n){return De(S(t),e,n)}function Me(e,t){var n=f(e);return G(((e,t)=>{n(e[0],t)}),t,1)}class ze{constructor(){this.heap=[],this.pushCount=Number.MIN_SAFE_INTEGER}get length(){return this.heap.length}empty(){return this.heap=[],this}percUp(e){let t;for(;e>0&&Be(this.heap[e],this.heap[t=Le(e)]);){let n=this.heap[e];this.heap[e]=this.heap[t],this.heap[t]=n,e=t}}percDown(e){let t;for(;(t=1+(e<<1))<this.heap.length&&(t+1<this.heap.length&&Be(this.heap[t+1],this.heap[t])&&(t+=1),!Be(this.heap[e],this.heap[t]));){let n=this.heap[e];this.heap[e]=this.heap[t],this.heap[t]=n,e=t}}push(e){e.pushCount=++this.pushCount,this.heap.push(e),this.percUp(this.heap.length-1)}unshift(e){return this.heap.push(e)}shift(){let[e]=this.heap;return this.heap[0]=this.heap[this.heap.length-1],this.heap.pop(),this.percDown(0),e}toArray(){return[...this]}*[Symbol.iterator](){for(let e=0;e<this.heap.length;e++)yield this.heap[e].data}remove(e){let t=0;for(let n=0;n<this.heap.length;n++)e(this.heap[n])||(this.heap[t]=this.heap[n],t++);this.heap.splice(t);for(let e=Le(this.heap.length-1);e>=0;e--)this.percDown(e);return this}}function Le(e){return(e+1>>1)-1}function Be(e,t){return e.priority!==t.priority?e.priority<t.priority:e.pushCount<t.pushCount}function Pe(e,t){var n=Me(e,t);return n._tasks=new ze,n.push=function(e,t=0,r=(()=>{})){if("function"!=typeof r)throw new Error("task callback must be a function");if(n.started=!0,Array.isArray(e)||(e=[e]),0===e.length&&n.idle())return l((()=>n.drain()));for(var s=0,a=e.length;s<a;s++){var i={data:e[s],priority:t,callback:r};n._tasks.push(i)}l(n.process)},delete n.unshift,n}var Ve=m((function(e,t){if(t=v(t),!Array.isArray(e))return t(new TypeError("First argument to race must be an array of functions"));if(!e.length)return t();for(var n=0,r=e.length;n<r;n++)f(e[n])(t)}),2);function We(e,t,n,r){var s=[...e].reverse();return q(s,t,n,r)}function Ue(e){var t=f(e);return s((function(e,n){return e.push(((e,...t)=>{let r={};if(e&&(r.error=e),t.length>0){var s=t;t.length<=1&&([s]=t),r.value=s}n(null,r)})),t.apply(this,e)}))}function Ge(e){var t;return Array.isArray(e)?t=e.map(Ue):(t={},Object.keys(e).forEach((n=>{t[n]=Ue.call(this,e[n])}))),t}function je(e,t,n,r){const s=f(n);return xe(e,t,((e,t)=>{s(e,((e,n)=>{t(e,!n)}))}),r)}var He=m((function(e,t,n){return je(C,e,t,n)}),3),qe=m((function(e,t,n,r){return je(S(t),e,n,r)}),4),Xe=m((function(e,t,n){return je($,e,t,n)}),3);function Ke(e){return function(){return e}}function Ye(e,t,n){var r={times:5,intervalFunc:Ke(0)};if(arguments.length<3&&"function"==typeof e?(n=t||F(),t=e):(Ze(r,e),n=n||F()),"function"!=typeof t)throw new Error("Invalid arguments for async.retry");var s=f(t),a=1;function i(){s(((e,...t)=>{!1!==e&&(e&&a++<r.times&&("function"!=typeof r.errorFilter||r.errorFilter(e))?setTimeout(i,r.intervalFunc(a-1)):n(e,...t))}))}return i(),n[D]}function Ze(e,t){if("object"==typeof t)e.times=+t.times||5,e.intervalFunc="function"==typeof t.interval?t.interval:Ke(+t.interval||0),e.errorFilter=t.errorFilter;else{if("number"!=typeof t&&"string"!=typeof t)throw new Error("Invalid arguments for async.retry");e.times=+t||5}}function Qe(e,t){t||(t=e,e=null);let n=e&&e.arity||t.length;d(t)&&(n+=1);var r=f(t);return s(((t,s)=>{function a(e){r(...t,e)}return(t.length<n-1||null==s)&&(t.push(s),s=F()),e?Ye(e,a,s):Ye(a,s),s[D]}))}function Je(e,t){return De($,e,t)}var et=m((function(e,t,n){return te(Boolean,(e=>e))(C,e,t,n)}),3),tt=m((function(e,t,n,r){return te(Boolean,(e=>e))(S(t),e,n,r)}),4),nt=m((function(e,t,n){return te(Boolean,(e=>e))($,e,t,n)}),3),rt=m((function(e,t,n){var r=f(t);return _(e,((e,t)=>{r(e,((n,r)=>{if(n)return t(n);t(n,{value:e,criteria:r})}))}),((e,t)=>{if(e)return n(e);n(null,t.sort(s).map((e=>e.value)))}));function s(e,t){var n=e.criteria,r=t.criteria;return n<r?-1:n>r?1:0}}),3);function st(e,t,n){var r=f(e);return s(((s,a)=>{var i,o=!1;s.push(((...e)=>{o||(a(...e),clearTimeout(i))})),i=setTimeout((function(){var t=e.name||"anonymous",r=new Error('Callback function "'+t+'" timed out.');r.code="ETIMEDOUT",n&&(r.info=n),o=!0,a(r)}),t),r(...s)}))}function at(e,t,n,r){var s=f(n);return Y(function(e){for(var t=Array(e);e--;)t[e]=e;return t}(e),t,s,r)}function it(e,t,n){return at(e,1/0,t,n)}function ot(e,t,n){return at(e,1,t,n)}function ut(e,t,n,r){arguments.length<=3&&"function"==typeof t&&(r=n,n=t,t=Array.isArray(e)?[]:{}),r=v(r||F());var s=f(n);return C(e,((e,n,r)=>{s(t,e,n,r)}),(e=>r(e,t))),r[D]}var lt=m((function(e,t){var n,r=null;return pe(e,((e,t)=>{f(e)(((e,...s)=>{if(!1===e)return t(e);s.length<2?[n]=s:n=s,r=e,t(e?null:{})}))}),(()=>t(r,n)))}));function ct(e){return(...t)=>(e.unmemoized||e)(...t)}var ht=m((function(e,t,n){n=w(n);var r=f(t),s=f(e),a=[];function i(e,...t){if(e)return n(e);a=t,!1!==e&&s(o)}function o(e,t){return e?n(e):!1!==e?t?void r(i):n(null,...a):void 0}return s(o)}),3);function pt(e,t,n){const r=f(e);return ht((e=>r(((t,n)=>e(t,!n)))),t,n)}var dt=m((function(e,t){if(t=v(t),!Array.isArray(e))return t(new Error("First argument to waterfall must be an array of functions"));if(!e.length)return t();var n=0;function r(t){f(e[n++])(...t,w(s))}function s(s,...a){if(!1!==s)return s||n===e.length?t(s,...a):void r(a)}r([])}));const ft={apply:r,applyEach:E,applyEachSeries:R,asyncify:c,auto:O,autoInject:V,cargo:j,cargoQueue:H,compose:K,concat:Q,concatLimit:Z,concatSeries:J,constant:ee,detect:ne,detectLimit:re,detectSeries:se,dir:ie,doUntil:ue,doWhilst:oe,each:ce,eachLimit:he,eachOf:C,eachOfLimit:I,eachOfSeries:$,eachSeries:pe,ensureAsync:de,every:fe,everyLimit:me,everySeries:ge,filter:ve,filterLimit:we,filterSeries:ke,forever:Se,groupBy:Ne,groupByLimit:Ie,groupBySeries:Te,log:Ce,map:_,mapLimit:Y,mapSeries:A,mapValues:Ee,mapValuesLimit:_e,mapValuesSeries:$e,memoize:Ae,nextTick:Re,parallel:Fe,parallelLimit:Oe,priorityQueue:Pe,queue:Me,race:Ve,reduce:q,reduceRight:We,reflect:Ue,reflectAll:Ge,reject:He,rejectLimit:qe,rejectSeries:Xe,retry:Ye,retryable:Qe,seq:X,series:Je,setImmediate:l,some:et,someLimit:tt,someSeries:nt,sortBy:rt,timeout:st,times:it,timesLimit:at,timesSeries:ot,transform:ut,tryEach:lt,unmemoize:ct,until:pt,waterfall:dt,whilst:ht,all:fe,allLimit:me,allSeries:ge,any:et,anyLimit:tt,anySeries:nt,find:ne,findLimit:re,findSeries:se,flatMap:Q,flatMapLimit:Z,flatMapSeries:J,forEach:ce,forEachSeries:pe,forEachLimit:he,forEachOf:C,forEachOfSeries:$,forEachOfLimit:I,inject:q,foldl:q,foldr:We,select:ve,selectLimit:we,selectSeries:ke,wrapSync:c,during:ht,doDuring:oe}},9669:(e,t,n)=>{e.exports=n(1609)},5448:(e,t,n)=>{"use strict";var r=n(4867),s=n(6026),a=n(4372),i=n(5327),o=n(4097),u=n(4109),l=n(7985),c=n(5061);e.exports=function(e){return new Promise((function(t,n){var h=e.data,p=e.headers;r.isFormData(h)&&delete p["Content-Type"];var d=new XMLHttpRequest;if(e.auth){var f=e.auth.username||"",m=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";p.Authorization="Basic "+btoa(f+":"+m)}var g=o(e.baseURL,e.url);if(d.open(e.method.toUpperCase(),i(g,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,d.onreadystatechange=function(){if(d&&4===d.readyState&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in d?u(d.getAllResponseHeaders()):null,a={data:e.responseType&&"text"!==e.responseType?d.response:d.responseText,status:d.status,statusText:d.statusText,headers:r,config:e,request:d};s(t,n,a),d=null}},d.onabort=function(){d&&(n(c("Request aborted",e,"ECONNABORTED",d)),d=null)},d.onerror=function(){n(c("Network Error",e,null,d)),d=null},d.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(c(t,e,"ECONNABORTED",d)),d=null},r.isStandardBrowserEnv()){var y=(e.withCredentials||l(g))&&e.xsrfCookieName?a.read(e.xsrfCookieName):void 0;y&&(p[e.xsrfHeaderName]=y)}if("setRequestHeader"in d&&r.forEach(p,(function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete p[t]:d.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(d.withCredentials=!!e.withCredentials),e.responseType)try{d.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&d.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){d&&(d.abort(),n(e),d=null)})),h||(h=null),d.send(h)}))}},1609:(e,t,n)=>{"use strict";var r=n(4867),s=n(1849),a=n(321),i=n(7185);function o(e){var t=new a(e),n=s(a.prototype.request,t);return r.extend(n,a.prototype,t),r.extend(n,t),n}var u=o(n(5655));u.Axios=a,u.create=function(e){return o(i(u.defaults,e))},u.Cancel=n(5263),u.CancelToken=n(4972),u.isCancel=n(6502),u.all=function(e){return Promise.all(e)},u.spread=n(8713),u.isAxiosError=n(6268),e.exports=u,e.exports.default=u},5263:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},4972:(e,t,n)=>{"use strict";var r=n(5263);function s(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}s.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},s.source=function(){var e;return{token:new s((function(t){e=t})),cancel:e}},e.exports=s},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(4867),s=n(5327),a=n(782),i=n(3572),o=n(7185);function u(e){this.defaults=e,this.interceptors={request:new a,response:new a}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=o(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[i,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},u.prototype.getUri=function(e){return e=o(this.defaults,e),s(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,n){return this.request(o(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,n,r){return this.request(o(r||{},{method:e,url:t,data:n}))}})),e.exports=u},782:(e,t,n)=>{"use strict";var r=n(4867);function s(){this.handlers=[]}s.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},s.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},s.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=s},4097:(e,t,n)=>{"use strict";var r=n(1793),s=n(7303);e.exports=function(e,t){return e&&!r(t)?s(e,t):t}},5061:(e,t,n)=>{"use strict";var r=n(481);e.exports=function(e,t,n,s,a){var i=new Error(e);return r(i,t,n,s,a)}},3572:(e,t,n)=>{"use strict";var r=n(4867),s=n(8527),a=n(6502),i=n(5655);function o(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return o(e),e.headers=e.headers||{},e.data=s(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||i.adapter)(e).then((function(t){return o(e),t.data=s(t.data,t.headers,e.transformResponse),t}),(function(t){return a(t)||(o(e),t&&t.response&&(t.response.data=s(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},481:e=>{"use strict";e.exports=function(e,t,n,r,s){return e.config=t,n&&(e.code=n),e.request=r,e.response=s,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},7185:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){t=t||{};var n={},s=["url","method","data"],a=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],o=["validateStatus"];function u(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function l(s){r.isUndefined(t[s])?r.isUndefined(e[s])||(n[s]=u(void 0,e[s])):n[s]=u(e[s],t[s])}r.forEach(s,(function(e){r.isUndefined(t[e])||(n[e]=u(void 0,t[e]))})),r.forEach(a,l),r.forEach(i,(function(s){r.isUndefined(t[s])?r.isUndefined(e[s])||(n[s]=u(void 0,e[s])):n[s]=u(void 0,t[s])})),r.forEach(o,(function(r){r in t?n[r]=u(e[r],t[r]):r in e&&(n[r]=u(void 0,e[r]))}));var c=s.concat(a).concat(i).concat(o),h=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===c.indexOf(e)}));return r.forEach(h,l),n}},6026:(e,t,n)=>{"use strict";var r=n(5061);e.exports=function(e,t,n){var s=n.config.validateStatus;n.status&&s&&!s(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},8527:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},5655:(e,t,n)=>{"use strict";var r=n(4867),s=n(6016),a={"Content-Type":"application/x-www-form-urlencoded"};function i(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var o,u={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(o=n(5448)),o),transformRequest:[function(e,t){return s(t,"Accept"),s(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(i(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(i(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(a)})),e.exports=u},1849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},5327:(e,t,n)=>{"use strict";var r=n(4867);function s(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var a;if(n)a=n(t);else if(r.isURLSearchParams(t))a=t.toString();else{var i=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),i.push(s(t)+"="+s(e))})))})),a=i.join("&")}if(a){var o=e.indexOf("#");-1!==o&&(e=e.slice(0,o)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},7303:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},4372:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,s,a,i){var o=[];o.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&o.push("expires="+new Date(n).toGMTString()),r.isString(s)&&o.push("path="+s),r.isString(a)&&o.push("domain="+a),!0===i&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},6268:e=>{"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},7985:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function s(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=s(window.location.href),function(t){var n=r.isString(t)?s(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},6016:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},4109:(e,t,n)=>{"use strict";var r=n(4867),s=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,a,i={};return e?(r.forEach(e.split("\n"),(function(e){if(a=e.indexOf(":"),t=r.trim(e.substr(0,a)).toLowerCase(),n=r.trim(e.substr(a+1)),t){if(i[t]&&s.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([n]):i[t]?i[t]+", "+n:n}})),i):i}},8713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},4867:(e,t,n)=>{"use strict";var r=n(1849),s=Object.prototype.toString;function a(e){return"[object Array]"===s.call(e)}function i(e){return void 0===e}function o(e){return null!==e&&"object"==typeof e}function u(e){if("[object Object]"!==s.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function l(e){return"[object Function]"===s.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),a(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.call(null,e[s],s,e)}e.exports={isArray:a,isArrayBuffer:function(e){return"[object ArrayBuffer]"===s.call(e)},isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:o,isPlainObject:u,isUndefined:i,isDate:function(e){return"[object Date]"===s.call(e)},isFile:function(e){return"[object File]"===s.call(e)},isBlob:function(e){return"[object Blob]"===s.call(e)},isFunction:l,isStream:function(e){return o(e)&&l(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var t={};function n(n,r){u(t[r])&&u(n)?t[r]=e(t[r],n):u(n)?t[r]=e({},n):a(n)?t[r]=n.slice():t[r]=n}for(var r=0,s=arguments.length;r<s;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,(function(t,s){e[s]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},6486:function(e,t,n){var r;e=n.nmd(e),function(){var s,a="Expected a function",i="__lodash_hash_undefined__",o="__lodash_placeholder__",u=32,l=128,c=1/0,h=9007199254740991,p=NaN,d=4294967295,f=[["ary",l],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",u],["partialRight",64],["rearg",256]],m="[object Arguments]",g="[object Array]",y="[object Boolean]",b="[object Date]",x="[object Error]",v="[object Function]",w="[object GeneratorFunction]",k="[object Map]",S="[object Number]",I="[object Object]",N="[object Promise]",T="[object RegExp]",C="[object Set]",_="[object String]",E="[object Symbol]",$="[object WeakMap]",A="[object ArrayBuffer]",R="[object DataView]",D="[object Float32Array]",F="[object Float64Array]",O="[object Int8Array]",M="[object Int16Array]",z="[object Int32Array]",L="[object Uint8Array]",B="[object Uint8ClampedArray]",P="[object Uint16Array]",V="[object Uint32Array]",W=/\b__p \+= '';/g,U=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,j=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,q=RegExp(j.source),X=RegExp(H.source),K=/<%-([\s\S]+?)%>/g,Y=/<%([\s\S]+?)%>/g,Z=/<%=([\s\S]+?)%>/g,Q=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,J=/^\w*$/,ee=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,te=/[\\^$.*+?()[\]{}|]/g,ne=RegExp(te.source),re=/^\s+/,se=/\s/,ae=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,ie=/\{\n\/\* \[wrapped with (.+)\] \*/,oe=/,? & /,ue=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,le=/[()=,{}\[\]\/\s]/,ce=/\\(\\)?/g,he=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,pe=/\w*$/,de=/^[-+]0x[0-9a-f]+$/i,fe=/^0b[01]+$/i,me=/^\[object .+?Constructor\]$/,ge=/^0o[0-7]+$/i,ye=/^(?:0|[1-9]\d*)$/,be=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,xe=/($^)/,ve=/['\n\r\u2028\u2029\\]/g,we="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",ke="a-z\\xdf-\\xf6\\xf8-\\xff",Se="A-Z\\xc0-\\xd6\\xd8-\\xde",Ie="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Ne="["+Ie+"]",Te="["+we+"]",Ce="\\d+",_e="["+ke+"]",Ee="[^\\ud800-\\udfff"+Ie+Ce+"\\u2700-\\u27bf"+ke+Se+"]",$e="\\ud83c[\\udffb-\\udfff]",Ae="[^\\ud800-\\udfff]",Re="(?:\\ud83c[\\udde6-\\uddff]){2}",De="[\\ud800-\\udbff][\\udc00-\\udfff]",Fe="["+Se+"]",Oe="(?:"+_e+"|"+Ee+")",Me="(?:"+Fe+"|"+Ee+")",ze="(?:['’](?:d|ll|m|re|s|t|ve))?",Le="(?:['’](?:D|LL|M|RE|S|T|VE))?",Be="(?:"+Te+"|"+$e+")?",Pe="[\\ufe0e\\ufe0f]?",Ve=Pe+Be+"(?:\\u200d(?:"+[Ae,Re,De].join("|")+")"+Pe+Be+")*",We="(?:"+["[\\u2700-\\u27bf]",Re,De].join("|")+")"+Ve,Ue="(?:"+[Ae+Te+"?",Te,Re,De,"[\\ud800-\\udfff]"].join("|")+")",Ge=RegExp("['’]","g"),je=RegExp(Te,"g"),He=RegExp($e+"(?="+$e+")|"+Ue+Ve,"g"),qe=RegExp([Fe+"?"+_e+"+"+ze+"(?="+[Ne,Fe,"$"].join("|")+")",Me+"+"+Le+"(?="+[Ne,Fe+Oe,"$"].join("|")+")",Fe+"?"+Oe+"+"+ze,Fe+"+"+Le,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ce,We].join("|"),"g"),Xe=RegExp("[\\u200d\\ud800-\\udfff"+we+"\\ufe0e\\ufe0f]"),Ke=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Ye=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Ze=-1,Qe={};Qe[D]=Qe[F]=Qe[O]=Qe[M]=Qe[z]=Qe[L]=Qe[B]=Qe[P]=Qe[V]=!0,Qe[m]=Qe[g]=Qe[A]=Qe[y]=Qe[R]=Qe[b]=Qe[x]=Qe[v]=Qe[k]=Qe[S]=Qe[I]=Qe[T]=Qe[C]=Qe[_]=Qe[$]=!1;var Je={};Je[m]=Je[g]=Je[A]=Je[R]=Je[y]=Je[b]=Je[D]=Je[F]=Je[O]=Je[M]=Je[z]=Je[k]=Je[S]=Je[I]=Je[T]=Je[C]=Je[_]=Je[E]=Je[L]=Je[B]=Je[P]=Je[V]=!0,Je[x]=Je[v]=Je[$]=!1;var et={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},tt=parseFloat,nt=parseInt,rt="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,st="object"==typeof self&&self&&self.Object===Object&&self,at=rt||st||Function("return this")(),it=t&&!t.nodeType&&t,ot=it&&e&&!e.nodeType&&e,ut=ot&&ot.exports===it,lt=ut&&rt.process,ct=function(){try{return ot&&ot.require&&ot.require("util").types||lt&&lt.binding&&lt.binding("util")}catch(e){}}(),ht=ct&&ct.isArrayBuffer,pt=ct&&ct.isDate,dt=ct&&ct.isMap,ft=ct&&ct.isRegExp,mt=ct&&ct.isSet,gt=ct&&ct.isTypedArray;function yt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function bt(e,t,n,r){for(var s=-1,a=null==e?0:e.length;++s<a;){var i=e[s];t(r,i,n(i),e)}return r}function xt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function vt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function wt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function kt(e,t){for(var n=-1,r=null==e?0:e.length,s=0,a=[];++n<r;){var i=e[n];t(i,n,e)&&(a[s++]=i)}return a}function St(e,t){return!(null==e||!e.length)&&Dt(e,t,0)>-1}function It(e,t,n){for(var r=-1,s=null==e?0:e.length;++r<s;)if(n(t,e[r]))return!0;return!1}function Nt(e,t){for(var n=-1,r=null==e?0:e.length,s=Array(r);++n<r;)s[n]=t(e[n],n,e);return s}function Tt(e,t){for(var n=-1,r=t.length,s=e.length;++n<r;)e[s+n]=t[n];return e}function Ct(e,t,n,r){var s=-1,a=null==e?0:e.length;for(r&&a&&(n=e[++s]);++s<a;)n=t(n,e[s],s,e);return n}function _t(e,t,n,r){var s=null==e?0:e.length;for(r&&s&&(n=e[--s]);s--;)n=t(n,e[s],s,e);return n}function Et(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var $t=zt("length");function At(e,t,n){var r;return n(e,(function(e,n,s){if(t(e,n,s))return r=n,!1})),r}function Rt(e,t,n,r){for(var s=e.length,a=n+(r?1:-1);r?a--:++a<s;)if(t(e[a],a,e))return a;return-1}function Dt(e,t,n){return t==t?function(e,t,n){for(var r=n-1,s=e.length;++r<s;)if(e[r]===t)return r;return-1}(e,t,n):Rt(e,Ot,n)}function Ft(e,t,n,r){for(var s=n-1,a=e.length;++s<a;)if(r(e[s],t))return s;return-1}function Ot(e){return e!=e}function Mt(e,t){var n=null==e?0:e.length;return n?Pt(e,t)/n:p}function zt(e){return function(t){return null==t?s:t[e]}}function Lt(e){return function(t){return null==e?s:e[t]}}function Bt(e,t,n,r,s){return s(e,(function(e,s,a){n=r?(r=!1,e):t(n,e,s,a)})),n}function Pt(e,t){for(var n,r=-1,a=e.length;++r<a;){var i=t(e[r]);i!==s&&(n=n===s?i:n+i)}return n}function Vt(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function Wt(e){return e?e.slice(0,on(e)+1).replace(re,""):e}function Ut(e){return function(t){return e(t)}}function Gt(e,t){return Nt(t,(function(t){return e[t]}))}function jt(e,t){return e.has(t)}function Ht(e,t){for(var n=-1,r=e.length;++n<r&&Dt(t,e[n],0)>-1;);return n}function qt(e,t){for(var n=e.length;n--&&Dt(t,e[n],0)>-1;);return n}function Xt(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var Kt=Lt({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),Yt=Lt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Zt(e){return"\\"+et[e]}function Qt(e){return Xe.test(e)}function Jt(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function en(e,t){return function(n){return e(t(n))}}function tn(e,t){for(var n=-1,r=e.length,s=0,a=[];++n<r;){var i=e[n];i!==t&&i!==o||(e[n]=o,a[s++]=n)}return a}function nn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function rn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function sn(e){return Qt(e)?function(e){for(var t=He.lastIndex=0;He.test(e);)++t;return t}(e):$t(e)}function an(e){return Qt(e)?function(e){return e.match(He)||[]}(e):function(e){return e.split("")}(e)}function on(e){for(var t=e.length;t--&&se.test(e.charAt(t)););return t}var un=Lt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),ln=function e(t){var n,r=(t=null==t?at:ln.defaults(at.Object(),t,ln.pick(at,Ye))).Array,se=t.Date,we=t.Error,ke=t.Function,Se=t.Math,Ie=t.Object,Ne=t.RegExp,Te=t.String,Ce=t.TypeError,_e=r.prototype,Ee=ke.prototype,$e=Ie.prototype,Ae=t["__core-js_shared__"],Re=Ee.toString,De=$e.hasOwnProperty,Fe=0,Oe=(n=/[^.]+$/.exec(Ae&&Ae.keys&&Ae.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Me=$e.toString,ze=Re.call(Ie),Le=at._,Be=Ne("^"+Re.call(De).replace(te,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pe=ut?t.Buffer:s,Ve=t.Symbol,We=t.Uint8Array,Ue=Pe?Pe.allocUnsafe:s,He=en(Ie.getPrototypeOf,Ie),Xe=Ie.create,et=$e.propertyIsEnumerable,rt=_e.splice,st=Ve?Ve.isConcatSpreadable:s,it=Ve?Ve.iterator:s,ot=Ve?Ve.toStringTag:s,lt=function(){try{var e=la(Ie,"defineProperty");return e({},"",{}),e}catch(e){}}(),ct=t.clearTimeout!==at.clearTimeout&&t.clearTimeout,$t=se&&se.now!==at.Date.now&&se.now,Lt=t.setTimeout!==at.setTimeout&&t.setTimeout,cn=Se.ceil,hn=Se.floor,pn=Ie.getOwnPropertySymbols,dn=Pe?Pe.isBuffer:s,fn=t.isFinite,mn=_e.join,gn=en(Ie.keys,Ie),yn=Se.max,bn=Se.min,xn=se.now,vn=t.parseInt,wn=Se.random,kn=_e.reverse,Sn=la(t,"DataView"),In=la(t,"Map"),Nn=la(t,"Promise"),Tn=la(t,"Set"),Cn=la(t,"WeakMap"),_n=la(Ie,"create"),En=Cn&&new Cn,$n={},An=La(Sn),Rn=La(In),Dn=La(Nn),Fn=La(Tn),On=La(Cn),Mn=Ve?Ve.prototype:s,zn=Mn?Mn.valueOf:s,Ln=Mn?Mn.toString:s;function Bn(e){if(to(e)&&!Gi(e)&&!(e instanceof Un)){if(e instanceof Wn)return e;if(De.call(e,"__wrapped__"))return Ba(e)}return new Wn(e)}var Pn=function(){function e(){}return function(t){if(!eo(t))return{};if(Xe)return Xe(t);e.prototype=t;var n=new e;return e.prototype=s,n}}();function Vn(){}function Wn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=s}function Un(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=d,this.__views__=[]}function Gn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function jn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Hn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function qn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Hn;++t<n;)this.add(e[t])}function Xn(e){var t=this.__data__=new jn(e);this.size=t.size}function Kn(e,t){var n=Gi(e),r=!n&&Ui(e),s=!n&&!r&&Xi(e),a=!n&&!r&&!s&&lo(e),i=n||r||s||a,o=i?Vt(e.length,Te):[],u=o.length;for(var l in e)!t&&!De.call(e,l)||i&&("length"==l||s&&("offset"==l||"parent"==l)||a&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||ga(l,u))||o.push(l);return o}function Yn(e){var t=e.length;return t?e[Hr(0,t-1)]:s}function Zn(e,t){return Da(Cs(e),ir(t,0,e.length))}function Qn(e){return Da(Cs(e))}function Jn(e,t,n){(n!==s&&!Pi(e[t],n)||n===s&&!(t in e))&&sr(e,t,n)}function er(e,t,n){var r=e[t];De.call(e,t)&&Pi(r,n)&&(n!==s||t in e)||sr(e,t,n)}function tr(e,t){for(var n=e.length;n--;)if(Pi(e[n][0],t))return n;return-1}function nr(e,t,n,r){return hr(e,(function(e,s,a){t(r,e,n(e),a)})),r}function rr(e,t){return e&&_s(t,Ro(t),e)}function sr(e,t,n){"__proto__"==t&&lt?lt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function ar(e,t){for(var n=-1,a=t.length,i=r(a),o=null==e;++n<a;)i[n]=o?s:Co(e,t[n]);return i}function ir(e,t,n){return e==e&&(n!==s&&(e=e<=n?e:n),t!==s&&(e=e>=t?e:t)),e}function or(e,t,n,r,a,i){var o,u=1&t,l=2&t,c=4&t;if(n&&(o=a?n(e,r,a,i):n(e)),o!==s)return o;if(!eo(e))return e;var h=Gi(e);if(h){if(o=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&De.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!u)return Cs(e,o)}else{var p=pa(e),d=p==v||p==w;if(Xi(e))return ws(e,u);if(p==I||p==m||d&&!a){if(o=l||d?{}:fa(e),!u)return l?function(e,t){return _s(e,ha(e),t)}(e,function(e,t){return e&&_s(t,Do(t),e)}(o,e)):function(e,t){return _s(e,ca(e),t)}(e,rr(o,e))}else{if(!Je[p])return a?e:{};o=function(e,t,n){var r,s=e.constructor;switch(t){case A:return ks(e);case y:case b:return new s(+e);case R:return function(e,t){var n=t?ks(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case D:case F:case O:case M:case z:case L:case B:case P:case V:return Ss(e,n);case k:return new s;case S:case _:return new s(e);case T:return function(e){var t=new e.constructor(e.source,pe.exec(e));return t.lastIndex=e.lastIndex,t}(e);case C:return new s;case E:return r=e,zn?Ie(zn.call(r)):{}}}(e,p,u)}}i||(i=new Xn);var f=i.get(e);if(f)return f;i.set(e,o),io(e)?e.forEach((function(r){o.add(or(r,t,n,r,e,i))})):no(e)&&e.forEach((function(r,s){o.set(s,or(r,t,n,s,e,i))}));var g=h?s:(c?l?na:ta:l?Do:Ro)(e);return xt(g||e,(function(r,s){g&&(r=e[s=r]),er(o,s,or(r,t,n,s,e,i))})),o}function ur(e,t,n){var r=n.length;if(null==e)return!r;for(e=Ie(e);r--;){var a=n[r],i=t[a],o=e[a];if(o===s&&!(a in e)||!i(o))return!1}return!0}function lr(e,t,n){if("function"!=typeof e)throw new Ce(a);return Ea((function(){e.apply(s,n)}),t)}function cr(e,t,n,r){var s=-1,a=St,i=!0,o=e.length,u=[],l=t.length;if(!o)return u;n&&(t=Nt(t,Ut(n))),r?(a=It,i=!1):t.length>=200&&(a=jt,i=!1,t=new qn(t));e:for(;++s<o;){var c=e[s],h=null==n?c:n(c);if(c=r||0!==c?c:0,i&&h==h){for(var p=l;p--;)if(t[p]===h)continue e;u.push(c)}else a(t,h,r)||u.push(c)}return u}Bn.templateSettings={escape:K,evaluate:Y,interpolate:Z,variable:"",imports:{_:Bn}},Bn.prototype=Vn.prototype,Bn.prototype.constructor=Bn,Wn.prototype=Pn(Vn.prototype),Wn.prototype.constructor=Wn,Un.prototype=Pn(Vn.prototype),Un.prototype.constructor=Un,Gn.prototype.clear=function(){this.__data__=_n?_n(null):{},this.size=0},Gn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Gn.prototype.get=function(e){var t=this.__data__;if(_n){var n=t[e];return n===i?s:n}return De.call(t,e)?t[e]:s},Gn.prototype.has=function(e){var t=this.__data__;return _n?t[e]!==s:De.call(t,e)},Gn.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=_n&&t===s?i:t,this},jn.prototype.clear=function(){this.__data__=[],this.size=0},jn.prototype.delete=function(e){var t=this.__data__,n=tr(t,e);return!(n<0||(n==t.length-1?t.pop():rt.call(t,n,1),--this.size,0))},jn.prototype.get=function(e){var t=this.__data__,n=tr(t,e);return n<0?s:t[n][1]},jn.prototype.has=function(e){return tr(this.__data__,e)>-1},jn.prototype.set=function(e,t){var n=this.__data__,r=tr(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},Hn.prototype.clear=function(){this.size=0,this.__data__={hash:new Gn,map:new(In||jn),string:new Gn}},Hn.prototype.delete=function(e){var t=oa(this,e).delete(e);return this.size-=t?1:0,t},Hn.prototype.get=function(e){return oa(this,e).get(e)},Hn.prototype.has=function(e){return oa(this,e).has(e)},Hn.prototype.set=function(e,t){var n=oa(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},qn.prototype.add=qn.prototype.push=function(e){return this.__data__.set(e,i),this},qn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.clear=function(){this.__data__=new jn,this.size=0},Xn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Xn.prototype.get=function(e){return this.__data__.get(e)},Xn.prototype.has=function(e){return this.__data__.has(e)},Xn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof jn){var r=n.__data__;if(!In||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new Hn(r)}return n.set(e,t),this.size=n.size,this};var hr=As(xr),pr=As(vr,!0);function dr(e,t){var n=!0;return hr(e,(function(e,r,s){return n=!!t(e,r,s)})),n}function fr(e,t,n){for(var r=-1,a=e.length;++r<a;){var i=e[r],o=t(i);if(null!=o&&(u===s?o==o&&!uo(o):n(o,u)))var u=o,l=i}return l}function mr(e,t){var n=[];return hr(e,(function(e,r,s){t(e,r,s)&&n.push(e)})),n}function gr(e,t,n,r,s){var a=-1,i=e.length;for(n||(n=ma),s||(s=[]);++a<i;){var o=e[a];t>0&&n(o)?t>1?gr(o,t-1,n,r,s):Tt(s,o):r||(s[s.length]=o)}return s}var yr=Rs(),br=Rs(!0);function xr(e,t){return e&&yr(e,t,Ro)}function vr(e,t){return e&&br(e,t,Ro)}function wr(e,t){return kt(t,(function(t){return Zi(e[t])}))}function kr(e,t){for(var n=0,r=(t=ys(t,e)).length;null!=e&&n<r;)e=e[za(t[n++])];return n&&n==r?e:s}function Sr(e,t,n){var r=t(e);return Gi(e)?r:Tt(r,n(e))}function Ir(e){return null==e?e===s?"[object Undefined]":"[object Null]":ot&&ot in Ie(e)?function(e){var t=De.call(e,ot),n=e[ot];try{e[ot]=s;var r=!0}catch(e){}var a=Me.call(e);return r&&(t?e[ot]=n:delete e[ot]),a}(e):function(e){return Me.call(e)}(e)}function Nr(e,t){return e>t}function Tr(e,t){return null!=e&&De.call(e,t)}function Cr(e,t){return null!=e&&t in Ie(e)}function _r(e,t,n){for(var a=n?It:St,i=e[0].length,o=e.length,u=o,l=r(o),c=1/0,h=[];u--;){var p=e[u];u&&t&&(p=Nt(p,Ut(t))),c=bn(p.length,c),l[u]=!n&&(t||i>=120&&p.length>=120)?new qn(u&&p):s}p=e[0];var d=-1,f=l[0];e:for(;++d<i&&h.length<c;){var m=p[d],g=t?t(m):m;if(m=n||0!==m?m:0,!(f?jt(f,g):a(h,g,n))){for(u=o;--u;){var y=l[u];if(!(y?jt(y,g):a(e[u],g,n)))continue e}f&&f.push(g),h.push(m)}}return h}function Er(e,t,n){var r=null==(e=Na(e,t=ys(t,e)))?e:e[za(Ya(t))];return null==r?s:yt(r,e,n)}function $r(e){return to(e)&&Ir(e)==m}function Ar(e,t,n,r,a){return e===t||(null==e||null==t||!to(e)&&!to(t)?e!=e&&t!=t:function(e,t,n,r,a,i){var o=Gi(e),u=Gi(t),l=o?g:pa(e),c=u?g:pa(t),h=(l=l==m?I:l)==I,p=(c=c==m?I:c)==I,d=l==c;if(d&&Xi(e)){if(!Xi(t))return!1;o=!0,h=!1}if(d&&!h)return i||(i=new Xn),o||lo(e)?Js(e,t,n,r,a,i):function(e,t,n,r,s,a,i){switch(n){case R:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case A:return!(e.byteLength!=t.byteLength||!a(new We(e),new We(t)));case y:case b:case S:return Pi(+e,+t);case x:return e.name==t.name&&e.message==t.message;case T:case _:return e==t+"";case k:var o=Jt;case C:var u=1&r;if(o||(o=nn),e.size!=t.size&&!u)return!1;var l=i.get(e);if(l)return l==t;r|=2,i.set(e,t);var c=Js(o(e),o(t),r,s,a,i);return i.delete(e),c;case E:if(zn)return zn.call(e)==zn.call(t)}return!1}(e,t,l,n,r,a,i);if(!(1&n)){var f=h&&De.call(e,"__wrapped__"),v=p&&De.call(t,"__wrapped__");if(f||v){var w=f?e.value():e,N=v?t.value():t;return i||(i=new Xn),a(w,N,n,r,i)}}return!!d&&(i||(i=new Xn),function(e,t,n,r,a,i){var o=1&n,u=ta(e),l=u.length;if(l!=ta(t).length&&!o)return!1;for(var c=l;c--;){var h=u[c];if(!(o?h in t:De.call(t,h)))return!1}var p=i.get(e),d=i.get(t);if(p&&d)return p==t&&d==e;var f=!0;i.set(e,t),i.set(t,e);for(var m=o;++c<l;){var g=e[h=u[c]],y=t[h];if(r)var b=o?r(y,g,h,t,e,i):r(g,y,h,e,t,i);if(!(b===s?g===y||a(g,y,n,r,i):b)){f=!1;break}m||(m="constructor"==h)}if(f&&!m){var x=e.constructor,v=t.constructor;x==v||!("constructor"in e)||!("constructor"in t)||"function"==typeof x&&x instanceof x&&"function"==typeof v&&v instanceof v||(f=!1)}return i.delete(e),i.delete(t),f}(e,t,n,r,a,i))}(e,t,n,r,Ar,a))}function Rr(e,t,n,r){var a=n.length,i=a,o=!r;if(null==e)return!i;for(e=Ie(e);a--;){var u=n[a];if(o&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++a<i;){var l=(u=n[a])[0],c=e[l],h=u[1];if(o&&u[2]){if(c===s&&!(l in e))return!1}else{var p=new Xn;if(r)var d=r(c,h,l,e,t,p);if(!(d===s?Ar(h,c,3,r,p):d))return!1}}return!0}function Dr(e){return!(!eo(e)||(t=e,Oe&&Oe in t))&&(Zi(e)?Be:me).test(La(e));var t}function Fr(e){return"function"==typeof e?e:null==e?su:"object"==typeof e?Gi(e)?Br(e[0],e[1]):Lr(e):du(e)}function Or(e){if(!wa(e))return gn(e);var t=[];for(var n in Ie(e))De.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Mr(e,t){return e<t}function zr(e,t){var n=-1,s=Hi(e)?r(e.length):[];return hr(e,(function(e,r,a){s[++n]=t(e,r,a)})),s}function Lr(e){var t=ua(e);return 1==t.length&&t[0][2]?Sa(t[0][0],t[0][1]):function(n){return n===e||Rr(n,e,t)}}function Br(e,t){return ba(e)&&ka(t)?Sa(za(e),t):function(n){var r=Co(n,e);return r===s&&r===t?_o(n,e):Ar(t,r,3)}}function Pr(e,t,n,r,a){e!==t&&yr(t,(function(i,o){if(a||(a=new Xn),eo(i))!function(e,t,n,r,a,i,o){var u=Ca(e,n),l=Ca(t,n),c=o.get(l);if(c)Jn(e,n,c);else{var h=i?i(u,l,n+"",e,t,o):s,p=h===s;if(p){var d=Gi(l),f=!d&&Xi(l),m=!d&&!f&&lo(l);h=l,d||f||m?Gi(u)?h=u:qi(u)?h=Cs(u):f?(p=!1,h=ws(l,!0)):m?(p=!1,h=Ss(l,!0)):h=[]:so(l)||Ui(l)?(h=u,Ui(u)?h=bo(u):eo(u)&&!Zi(u)||(h=fa(l))):p=!1}p&&(o.set(l,h),a(h,l,r,i,o),o.delete(l)),Jn(e,n,h)}}(e,t,o,n,Pr,r,a);else{var u=r?r(Ca(e,o),i,o+"",e,t,a):s;u===s&&(u=i),Jn(e,o,u)}}),Do)}function Vr(e,t){var n=e.length;if(n)return ga(t+=t<0?n:0,n)?e[t]:s}function Wr(e,t,n){t=t.length?Nt(t,(function(e){return Gi(e)?function(t){return kr(t,1===e.length?e[0]:e)}:e})):[su];var r=-1;t=Nt(t,Ut(ia()));var s=zr(e,(function(e,n,s){var a=Nt(t,(function(t){return t(e)}));return{criteria:a,index:++r,value:e}}));return function(e,t){var r=e.length;for(e.sort((function(e,t){return function(e,t,n){for(var r=-1,s=e.criteria,a=t.criteria,i=s.length,o=n.length;++r<i;){var u=Is(s[r],a[r]);if(u)return r>=o?u:u*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}));r--;)e[r]=e[r].value;return e}(s)}function Ur(e,t,n){for(var r=-1,s=t.length,a={};++r<s;){var i=t[r],o=kr(e,i);n(o,i)&&Zr(a,ys(i,e),o)}return a}function Gr(e,t,n,r){var s=r?Ft:Dt,a=-1,i=t.length,o=e;for(e===t&&(t=Cs(t)),n&&(o=Nt(e,Ut(n)));++a<i;)for(var u=0,l=t[a],c=n?n(l):l;(u=s(o,c,u,r))>-1;)o!==e&&rt.call(o,u,1),rt.call(e,u,1);return e}function jr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var s=t[n];if(n==r||s!==a){var a=s;ga(s)?rt.call(e,s,1):ls(e,s)}}return e}function Hr(e,t){return e+hn(wn()*(t-e+1))}function qr(e,t){var n="";if(!e||t<1||t>h)return n;do{t%2&&(n+=e),(t=hn(t/2))&&(e+=e)}while(t);return n}function Xr(e,t){return $a(Ia(e,t,su),e+"")}function Kr(e){return Yn(Vo(e))}function Yr(e,t){var n=Vo(e);return Da(n,ir(t,0,n.length))}function Zr(e,t,n,r){if(!eo(e))return e;for(var a=-1,i=(t=ys(t,e)).length,o=i-1,u=e;null!=u&&++a<i;){var l=za(t[a]),c=n;if("__proto__"===l||"constructor"===l||"prototype"===l)return e;if(a!=o){var h=u[l];(c=r?r(h,l,u):s)===s&&(c=eo(h)?h:ga(t[a+1])?[]:{})}er(u,l,c),u=u[l]}return e}var Qr=En?function(e,t){return En.set(e,t),e}:su,Jr=lt?function(e,t){return lt(e,"toString",{configurable:!0,enumerable:!1,value:tu(t),writable:!0})}:su;function es(e){return Da(Vo(e))}function ts(e,t,n){var s=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(n=n>a?a:n)<0&&(n+=a),a=t>n?0:n-t>>>0,t>>>=0;for(var i=r(a);++s<a;)i[s]=e[s+t];return i}function ns(e,t){var n;return hr(e,(function(e,r,s){return!(n=t(e,r,s))})),!!n}function rs(e,t,n){var r=0,s=null==e?r:e.length;if("number"==typeof t&&t==t&&s<=2147483647){for(;r<s;){var a=r+s>>>1,i=e[a];null!==i&&!uo(i)&&(n?i<=t:i<t)?r=a+1:s=a}return s}return ss(e,t,su,n)}function ss(e,t,n,r){var a=0,i=null==e?0:e.length;if(0===i)return 0;for(var o=(t=n(t))!=t,u=null===t,l=uo(t),c=t===s;a<i;){var h=hn((a+i)/2),p=n(e[h]),d=p!==s,f=null===p,m=p==p,g=uo(p);if(o)var y=r||m;else y=c?m&&(r||d):u?m&&d&&(r||!f):l?m&&d&&!f&&(r||!g):!f&&!g&&(r?p<=t:p<t);y?a=h+1:i=h}return bn(i,4294967294)}function as(e,t){for(var n=-1,r=e.length,s=0,a=[];++n<r;){var i=e[n],o=t?t(i):i;if(!n||!Pi(o,u)){var u=o;a[s++]=0===i?0:i}}return a}function is(e){return"number"==typeof e?e:uo(e)?p:+e}function os(e){if("string"==typeof e)return e;if(Gi(e))return Nt(e,os)+"";if(uo(e))return Ln?Ln.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function us(e,t,n){var r=-1,s=St,a=e.length,i=!0,o=[],u=o;if(n)i=!1,s=It;else if(a>=200){var l=t?null:qs(e);if(l)return nn(l);i=!1,s=jt,u=new qn}else u=t?[]:o;e:for(;++r<a;){var c=e[r],h=t?t(c):c;if(c=n||0!==c?c:0,i&&h==h){for(var p=u.length;p--;)if(u[p]===h)continue e;t&&u.push(h),o.push(c)}else s(u,h,n)||(u!==o&&u.push(h),o.push(c))}return o}function ls(e,t){return null==(e=Na(e,t=ys(t,e)))||delete e[za(Ya(t))]}function cs(e,t,n,r){return Zr(e,t,n(kr(e,t)),r)}function hs(e,t,n,r){for(var s=e.length,a=r?s:-1;(r?a--:++a<s)&&t(e[a],a,e););return n?ts(e,r?0:a,r?a+1:s):ts(e,r?a+1:0,r?s:a)}function ps(e,t){var n=e;return n instanceof Un&&(n=n.value()),Ct(t,(function(e,t){return t.func.apply(t.thisArg,Tt([e],t.args))}),n)}function ds(e,t,n){var s=e.length;if(s<2)return s?us(e[0]):[];for(var a=-1,i=r(s);++a<s;)for(var o=e[a],u=-1;++u<s;)u!=a&&(i[a]=cr(i[a]||o,e[u],t,n));return us(gr(i,1),t,n)}function fs(e,t,n){for(var r=-1,a=e.length,i=t.length,o={};++r<a;){var u=r<i?t[r]:s;n(o,e[r],u)}return o}function ms(e){return qi(e)?e:[]}function gs(e){return"function"==typeof e?e:su}function ys(e,t){return Gi(e)?e:ba(e,t)?[e]:Ma(xo(e))}var bs=Xr;function xs(e,t,n){var r=e.length;return n=n===s?r:n,!t&&n>=r?e:ts(e,t,n)}var vs=ct||function(e){return at.clearTimeout(e)};function ws(e,t){if(t)return e.slice();var n=e.length,r=Ue?Ue(n):new e.constructor(n);return e.copy(r),r}function ks(e){var t=new e.constructor(e.byteLength);return new We(t).set(new We(e)),t}function Ss(e,t){var n=t?ks(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function Is(e,t){if(e!==t){var n=e!==s,r=null===e,a=e==e,i=uo(e),o=t!==s,u=null===t,l=t==t,c=uo(t);if(!u&&!c&&!i&&e>t||i&&o&&l&&!u&&!c||r&&o&&l||!n&&l||!a)return 1;if(!r&&!i&&!c&&e<t||c&&n&&a&&!r&&!i||u&&n&&a||!o&&a||!l)return-1}return 0}function Ns(e,t,n,s){for(var a=-1,i=e.length,o=n.length,u=-1,l=t.length,c=yn(i-o,0),h=r(l+c),p=!s;++u<l;)h[u]=t[u];for(;++a<o;)(p||a<i)&&(h[n[a]]=e[a]);for(;c--;)h[u++]=e[a++];return h}function Ts(e,t,n,s){for(var a=-1,i=e.length,o=-1,u=n.length,l=-1,c=t.length,h=yn(i-u,0),p=r(h+c),d=!s;++a<h;)p[a]=e[a];for(var f=a;++l<c;)p[f+l]=t[l];for(;++o<u;)(d||a<i)&&(p[f+n[o]]=e[a++]);return p}function Cs(e,t){var n=-1,s=e.length;for(t||(t=r(s));++n<s;)t[n]=e[n];return t}function _s(e,t,n,r){var a=!n;n||(n={});for(var i=-1,o=t.length;++i<o;){var u=t[i],l=r?r(n[u],e[u],u,n,e):s;l===s&&(l=e[u]),a?sr(n,u,l):er(n,u,l)}return n}function Es(e,t){return function(n,r){var s=Gi(n)?bt:nr,a=t?t():{};return s(n,e,ia(r,2),a)}}function $s(e){return Xr((function(t,n){var r=-1,a=n.length,i=a>1?n[a-1]:s,o=a>2?n[2]:s;for(i=e.length>3&&"function"==typeof i?(a--,i):s,o&&ya(n[0],n[1],o)&&(i=a<3?s:i,a=1),t=Ie(t);++r<a;){var u=n[r];u&&e(t,u,r,i)}return t}))}function As(e,t){return function(n,r){if(null==n)return n;if(!Hi(n))return e(n,r);for(var s=n.length,a=t?s:-1,i=Ie(n);(t?a--:++a<s)&&!1!==r(i[a],a,i););return n}}function Rs(e){return function(t,n,r){for(var s=-1,a=Ie(t),i=r(t),o=i.length;o--;){var u=i[e?o:++s];if(!1===n(a[u],u,a))break}return t}}function Ds(e){return function(t){var n=Qt(t=xo(t))?an(t):s,r=n?n[0]:t.charAt(0),a=n?xs(n,1).join(""):t.slice(1);return r[e]()+a}}function Fs(e){return function(t){return Ct(Qo(Go(t).replace(Ge,"")),e,"")}}function Os(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Pn(e.prototype),r=e.apply(n,t);return eo(r)?r:n}}function Ms(e){return function(t,n,r){var a=Ie(t);if(!Hi(t)){var i=ia(n,3);t=Ro(t),n=function(e){return i(a[e],e,a)}}var o=e(t,n,r);return o>-1?a[i?t[o]:o]:s}}function zs(e){return ea((function(t){var n=t.length,r=n,i=Wn.prototype.thru;for(e&&t.reverse();r--;){var o=t[r];if("function"!=typeof o)throw new Ce(a);if(i&&!u&&"wrapper"==sa(o))var u=new Wn([],!0)}for(r=u?r:n;++r<n;){var l=sa(o=t[r]),c="wrapper"==l?ra(o):s;u=c&&xa(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?u[sa(c[0])].apply(u,c[3]):1==o.length&&xa(o)?u[l]():u.thru(o)}return function(){var e=arguments,r=e[0];if(u&&1==e.length&&Gi(r))return u.plant(r).value();for(var s=0,a=n?t[s].apply(this,e):r;++s<n;)a=t[s].call(this,a);return a}}))}function Ls(e,t,n,a,i,o,u,c,h,p){var d=t&l,f=1&t,m=2&t,g=24&t,y=512&t,b=m?s:Os(e);return function s(){for(var l=arguments.length,x=r(l),v=l;v--;)x[v]=arguments[v];if(g)var w=aa(s),k=Xt(x,w);if(a&&(x=Ns(x,a,i,g)),o&&(x=Ts(x,o,u,g)),l-=k,g&&l<p){var S=tn(x,w);return js(e,t,Ls,s.placeholder,n,x,S,c,h,p-l)}var I=f?n:this,N=m?I[e]:e;return l=x.length,c?x=Ta(x,c):y&&l>1&&x.reverse(),d&&h<l&&(x.length=h),this&&this!==at&&this instanceof s&&(N=b||Os(N)),N.apply(I,x)}}function Bs(e,t){return function(n,r){return function(e,t,n,r){return xr(e,(function(e,s,a){t(r,n(e),s,a)})),r}(n,e,t(r),{})}}function Ps(e,t){return function(n,r){var a;if(n===s&&r===s)return t;if(n!==s&&(a=n),r!==s){if(a===s)return r;"string"==typeof n||"string"==typeof r?(n=os(n),r=os(r)):(n=is(n),r=is(r)),a=e(n,r)}return a}}function Vs(e){return ea((function(t){return t=Nt(t,Ut(ia())),Xr((function(n){var r=this;return e(t,(function(e){return yt(e,r,n)}))}))}))}function Ws(e,t){var n=(t=t===s?" ":os(t)).length;if(n<2)return n?qr(t,e):t;var r=qr(t,cn(e/sn(t)));return Qt(t)?xs(an(r),0,e).join(""):r.slice(0,e)}function Us(e){return function(t,n,a){return a&&"number"!=typeof a&&ya(t,n,a)&&(n=a=s),t=fo(t),n===s?(n=t,t=0):n=fo(n),function(e,t,n,s){for(var a=-1,i=yn(cn((t-e)/(n||1)),0),o=r(i);i--;)o[s?i:++a]=e,e+=n;return o}(t,n,a=a===s?t<n?1:-1:fo(a),e)}}function Gs(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=yo(t),n=yo(n)),e(t,n)}}function js(e,t,n,r,a,i,o,l,c,h){var p=8&t;t|=p?u:64,4&(t&=~(p?64:u))||(t&=-4);var d=[e,t,a,p?i:s,p?o:s,p?s:i,p?s:o,l,c,h],f=n.apply(s,d);return xa(e)&&_a(f,d),f.placeholder=r,Aa(f,e,t)}function Hs(e){var t=Se[e];return function(e,n){if(e=yo(e),(n=null==n?0:bn(mo(n),292))&&fn(e)){var r=(xo(e)+"e").split("e");return+((r=(xo(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var qs=Tn&&1/nn(new Tn([,-0]))[1]==c?function(e){return new Tn(e)}:lu;function Xs(e){return function(t){var n=pa(t);return n==k?Jt(t):n==C?rn(t):function(e,t){return Nt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Ks(e,t,n,i,c,h,p,d){var f=2&t;if(!f&&"function"!=typeof e)throw new Ce(a);var m=i?i.length:0;if(m||(t&=-97,i=c=s),p=p===s?p:yn(mo(p),0),d=d===s?d:mo(d),m-=c?c.length:0,64&t){var g=i,y=c;i=c=s}var b=f?s:ra(e),x=[e,t,n,i,c,g,y,h,p,d];if(b&&function(e,t){var n=e[1],r=t[1],s=n|r,a=s<131,i=r==l&&8==n||r==l&&256==n&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!a&&!i)return e;1&r&&(e[2]=t[2],s|=1&n?0:4);var u=t[3];if(u){var c=e[3];e[3]=c?Ns(c,u,t[4]):u,e[4]=c?tn(e[3],o):t[4]}(u=t[5])&&(c=e[5],e[5]=c?Ts(c,u,t[6]):u,e[6]=c?tn(e[5],o):t[6]),(u=t[7])&&(e[7]=u),r&l&&(e[8]=null==e[8]?t[8]:bn(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=s}(x,b),e=x[0],t=x[1],n=x[2],i=x[3],c=x[4],!(d=x[9]=x[9]===s?f?0:e.length:yn(x[9]-m,0))&&24&t&&(t&=-25),t&&1!=t)v=8==t||16==t?function(e,t,n){var a=Os(e);return function i(){for(var o=arguments.length,u=r(o),l=o,c=aa(i);l--;)u[l]=arguments[l];var h=o<3&&u[0]!==c&&u[o-1]!==c?[]:tn(u,c);return(o-=h.length)<n?js(e,t,Ls,i.placeholder,s,u,h,s,s,n-o):yt(this&&this!==at&&this instanceof i?a:e,this,u)}}(e,t,d):t!=u&&33!=t||c.length?Ls.apply(s,x):function(e,t,n,s){var a=1&t,i=Os(e);return function t(){for(var o=-1,u=arguments.length,l=-1,c=s.length,h=r(c+u),p=this&&this!==at&&this instanceof t?i:e;++l<c;)h[l]=s[l];for(;u--;)h[l++]=arguments[++o];return yt(p,a?n:this,h)}}(e,t,n,i);else var v=function(e,t,n){var r=1&t,s=Os(e);return function t(){return(this&&this!==at&&this instanceof t?s:e).apply(r?n:this,arguments)}}(e,t,n);return Aa((b?Qr:_a)(v,x),e,t)}function Ys(e,t,n,r){return e===s||Pi(e,$e[n])&&!De.call(r,n)?t:e}function Zs(e,t,n,r,a,i){return eo(e)&&eo(t)&&(i.set(t,e),Pr(e,t,s,Zs,i),i.delete(t)),e}function Qs(e){return so(e)?s:e}function Js(e,t,n,r,a,i){var o=1&n,u=e.length,l=t.length;if(u!=l&&!(o&&l>u))return!1;var c=i.get(e),h=i.get(t);if(c&&h)return c==t&&h==e;var p=-1,d=!0,f=2&n?new qn:s;for(i.set(e,t),i.set(t,e);++p<u;){var m=e[p],g=t[p];if(r)var y=o?r(g,m,p,t,e,i):r(m,g,p,e,t,i);if(y!==s){if(y)continue;d=!1;break}if(f){if(!Et(t,(function(e,t){if(!jt(f,t)&&(m===e||a(m,e,n,r,i)))return f.push(t)}))){d=!1;break}}else if(m!==g&&!a(m,g,n,r,i)){d=!1;break}}return i.delete(e),i.delete(t),d}function ea(e){return $a(Ia(e,s,ja),e+"")}function ta(e){return Sr(e,Ro,ca)}function na(e){return Sr(e,Do,ha)}var ra=En?function(e){return En.get(e)}:lu;function sa(e){for(var t=e.name+"",n=$n[t],r=De.call($n,t)?n.length:0;r--;){var s=n[r],a=s.func;if(null==a||a==e)return s.name}return t}function aa(e){return(De.call(Bn,"placeholder")?Bn:e).placeholder}function ia(){var e=Bn.iteratee||au;return e=e===au?Fr:e,arguments.length?e(arguments[0],arguments[1]):e}function oa(e,t){var n,r,s=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?s["string"==typeof t?"string":"hash"]:s.map}function ua(e){for(var t=Ro(e),n=t.length;n--;){var r=t[n],s=e[r];t[n]=[r,s,ka(s)]}return t}function la(e,t){var n=function(e,t){return null==e?s:e[t]}(e,t);return Dr(n)?n:s}var ca=pn?function(e){return null==e?[]:(e=Ie(e),kt(pn(e),(function(t){return et.call(e,t)})))}:gu,ha=pn?function(e){for(var t=[];e;)Tt(t,ca(e)),e=He(e);return t}:gu,pa=Ir;function da(e,t,n){for(var r=-1,s=(t=ys(t,e)).length,a=!1;++r<s;){var i=za(t[r]);if(!(a=null!=e&&n(e,i)))break;e=e[i]}return a||++r!=s?a:!!(s=null==e?0:e.length)&&Ji(s)&&ga(i,s)&&(Gi(e)||Ui(e))}function fa(e){return"function"!=typeof e.constructor||wa(e)?{}:Pn(He(e))}function ma(e){return Gi(e)||Ui(e)||!!(st&&e&&e[st])}function ga(e,t){var n=typeof e;return!!(t=null==t?h:t)&&("number"==n||"symbol"!=n&&ye.test(e))&&e>-1&&e%1==0&&e<t}function ya(e,t,n){if(!eo(n))return!1;var r=typeof t;return!!("number"==r?Hi(n)&&ga(t,n.length):"string"==r&&t in n)&&Pi(n[t],e)}function ba(e,t){if(Gi(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!uo(e))||J.test(e)||!Q.test(e)||null!=t&&e in Ie(t)}function xa(e){var t=sa(e),n=Bn[t];if("function"!=typeof n||!(t in Un.prototype))return!1;if(e===n)return!0;var r=ra(n);return!!r&&e===r[0]}(Sn&&pa(new Sn(new ArrayBuffer(1)))!=R||In&&pa(new In)!=k||Nn&&pa(Nn.resolve())!=N||Tn&&pa(new Tn)!=C||Cn&&pa(new Cn)!=$)&&(pa=function(e){var t=Ir(e),n=t==I?e.constructor:s,r=n?La(n):"";if(r)switch(r){case An:return R;case Rn:return k;case Dn:return N;case Fn:return C;case On:return $}return t});var va=Ae?Zi:yu;function wa(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||$e)}function ka(e){return e==e&&!eo(e)}function Sa(e,t){return function(n){return null!=n&&n[e]===t&&(t!==s||e in Ie(n))}}function Ia(e,t,n){return t=yn(t===s?e.length-1:t,0),function(){for(var s=arguments,a=-1,i=yn(s.length-t,0),o=r(i);++a<i;)o[a]=s[t+a];a=-1;for(var u=r(t+1);++a<t;)u[a]=s[a];return u[t]=n(o),yt(e,this,u)}}function Na(e,t){return t.length<2?e:kr(e,ts(t,0,-1))}function Ta(e,t){for(var n=e.length,r=bn(t.length,n),a=Cs(e);r--;){var i=t[r];e[r]=ga(i,n)?a[i]:s}return e}function Ca(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var _a=Ra(Qr),Ea=Lt||function(e,t){return at.setTimeout(e,t)},$a=Ra(Jr);function Aa(e,t,n){var r=t+"";return $a(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(ae,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return xt(f,(function(n){var r="_."+n[0];t&n[1]&&!St(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(ie);return t?t[1].split(oe):[]}(r),n)))}function Ra(e){var t=0,n=0;return function(){var r=xn(),a=16-(r-n);if(n=r,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(s,arguments)}}function Da(e,t){var n=-1,r=e.length,a=r-1;for(t=t===s?r:t;++n<t;){var i=Hr(n,a),o=e[i];e[i]=e[n],e[n]=o}return e.length=t,e}var Fa,Oa,Ma=(Fa=Fi((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(ee,(function(e,n,r,s){t.push(r?s.replace(ce,"$1"):n||e)})),t}),(function(e){return 500===Oa.size&&Oa.clear(),e})),Oa=Fa.cache,Fa);function za(e){if("string"==typeof e||uo(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function La(e){if(null!=e){try{return Re.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ba(e){if(e instanceof Un)return e.clone();var t=new Wn(e.__wrapped__,e.__chain__);return t.__actions__=Cs(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Pa=Xr((function(e,t){return qi(e)?cr(e,gr(t,1,qi,!0)):[]})),Va=Xr((function(e,t){var n=Ya(t);return qi(n)&&(n=s),qi(e)?cr(e,gr(t,1,qi,!0),ia(n,2)):[]})),Wa=Xr((function(e,t){var n=Ya(t);return qi(n)&&(n=s),qi(e)?cr(e,gr(t,1,qi,!0),s,n):[]}));function Ua(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=null==n?0:mo(n);return s<0&&(s=yn(r+s,0)),Rt(e,ia(t,3),s)}function Ga(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=r-1;return n!==s&&(a=mo(n),a=n<0?yn(r+a,0):bn(a,r-1)),Rt(e,ia(t,3),a,!0)}function ja(e){return null!=e&&e.length?gr(e,1):[]}function Ha(e){return e&&e.length?e[0]:s}var qa=Xr((function(e){var t=Nt(e,ms);return t.length&&t[0]===e[0]?_r(t):[]})),Xa=Xr((function(e){var t=Ya(e),n=Nt(e,ms);return t===Ya(n)?t=s:n.pop(),n.length&&n[0]===e[0]?_r(n,ia(t,2)):[]})),Ka=Xr((function(e){var t=Ya(e),n=Nt(e,ms);return(t="function"==typeof t?t:s)&&n.pop(),n.length&&n[0]===e[0]?_r(n,s,t):[]}));function Ya(e){var t=null==e?0:e.length;return t?e[t-1]:s}var Za=Xr(Qa);function Qa(e,t){return e&&e.length&&t&&t.length?Gr(e,t):e}var Ja=ea((function(e,t){var n=null==e?0:e.length,r=ar(e,t);return jr(e,Nt(t,(function(e){return ga(e,n)?+e:e})).sort(Is)),r}));function ei(e){return null==e?e:kn.call(e)}var ti=Xr((function(e){return us(gr(e,1,qi,!0))})),ni=Xr((function(e){var t=Ya(e);return qi(t)&&(t=s),us(gr(e,1,qi,!0),ia(t,2))})),ri=Xr((function(e){var t=Ya(e);return t="function"==typeof t?t:s,us(gr(e,1,qi,!0),s,t)}));function si(e){if(!e||!e.length)return[];var t=0;return e=kt(e,(function(e){if(qi(e))return t=yn(e.length,t),!0})),Vt(t,(function(t){return Nt(e,zt(t))}))}function ai(e,t){if(!e||!e.length)return[];var n=si(e);return null==t?n:Nt(n,(function(e){return yt(t,s,e)}))}var ii=Xr((function(e,t){return qi(e)?cr(e,t):[]})),oi=Xr((function(e){return ds(kt(e,qi))})),ui=Xr((function(e){var t=Ya(e);return qi(t)&&(t=s),ds(kt(e,qi),ia(t,2))})),li=Xr((function(e){var t=Ya(e);return t="function"==typeof t?t:s,ds(kt(e,qi),s,t)})),ci=Xr(si),hi=Xr((function(e){var t=e.length,n=t>1?e[t-1]:s;return n="function"==typeof n?(e.pop(),n):s,ai(e,n)}));function pi(e){var t=Bn(e);return t.__chain__=!0,t}function di(e,t){return t(e)}var fi=ea((function(e){var t=e.length,n=t?e[0]:0,r=this.__wrapped__,a=function(t){return ar(t,e)};return!(t>1||this.__actions__.length)&&r instanceof Un&&ga(n)?((r=r.slice(n,+n+(t?1:0))).__actions__.push({func:di,args:[a],thisArg:s}),new Wn(r,this.__chain__).thru((function(e){return t&&!e.length&&e.push(s),e}))):this.thru(a)})),mi=Es((function(e,t,n){De.call(e,n)?++e[n]:sr(e,n,1)})),gi=Ms(Ua),yi=Ms(Ga);function bi(e,t){return(Gi(e)?xt:hr)(e,ia(t,3))}function xi(e,t){return(Gi(e)?vt:pr)(e,ia(t,3))}var vi=Es((function(e,t,n){De.call(e,n)?e[n].push(t):sr(e,n,[t])})),wi=Xr((function(e,t,n){var s=-1,a="function"==typeof t,i=Hi(e)?r(e.length):[];return hr(e,(function(e){i[++s]=a?yt(t,e,n):Er(e,t,n)})),i})),ki=Es((function(e,t,n){sr(e,n,t)}));function Si(e,t){return(Gi(e)?Nt:zr)(e,ia(t,3))}var Ii=Es((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]})),Ni=Xr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&ya(e,t[0],t[1])?t=[]:n>2&&ya(t[0],t[1],t[2])&&(t=[t[0]]),Wr(e,gr(t,1),[])})),Ti=$t||function(){return at.Date.now()};function Ci(e,t,n){return t=n?s:t,t=e&&null==t?e.length:t,Ks(e,l,s,s,s,s,t)}function _i(e,t){var n;if("function"!=typeof t)throw new Ce(a);return e=mo(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=s),n}}var Ei=Xr((function(e,t,n){var r=1;if(n.length){var s=tn(n,aa(Ei));r|=u}return Ks(e,r,t,n,s)})),$i=Xr((function(e,t,n){var r=3;if(n.length){var s=tn(n,aa($i));r|=u}return Ks(t,r,e,n,s)}));function Ai(e,t,n){var r,i,o,u,l,c,h=0,p=!1,d=!1,f=!0;if("function"!=typeof e)throw new Ce(a);function m(t){var n=r,a=i;return r=i=s,h=t,u=e.apply(a,n)}function g(e){return h=e,l=Ea(b,t),p?m(e):u}function y(e){var n=e-c;return c===s||n>=t||n<0||d&&e-h>=o}function b(){var e=Ti();if(y(e))return x(e);l=Ea(b,function(e){var n=t-(e-c);return d?bn(n,o-(e-h)):n}(e))}function x(e){return l=s,f&&r?m(e):(r=i=s,u)}function v(){var e=Ti(),n=y(e);if(r=arguments,i=this,c=e,n){if(l===s)return g(c);if(d)return vs(l),l=Ea(b,t),m(c)}return l===s&&(l=Ea(b,t)),u}return t=yo(t)||0,eo(n)&&(p=!!n.leading,o=(d="maxWait"in n)?yn(yo(n.maxWait)||0,t):o,f="trailing"in n?!!n.trailing:f),v.cancel=function(){l!==s&&vs(l),h=0,r=c=i=l=s},v.flush=function(){return l===s?u:x(Ti())},v}var Ri=Xr((function(e,t){return lr(e,1,t)})),Di=Xr((function(e,t,n){return lr(e,yo(t)||0,n)}));function Fi(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new Ce(a);var n=function(){var r=arguments,s=t?t.apply(this,r):r[0],a=n.cache;if(a.has(s))return a.get(s);var i=e.apply(this,r);return n.cache=a.set(s,i)||a,i};return n.cache=new(Fi.Cache||Hn),n}function Oi(e){if("function"!=typeof e)throw new Ce(a);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Fi.Cache=Hn;var Mi=bs((function(e,t){var n=(t=1==t.length&&Gi(t[0])?Nt(t[0],Ut(ia())):Nt(gr(t,1),Ut(ia()))).length;return Xr((function(r){for(var s=-1,a=bn(r.length,n);++s<a;)r[s]=t[s].call(this,r[s]);return yt(e,this,r)}))})),zi=Xr((function(e,t){var n=tn(t,aa(zi));return Ks(e,u,s,t,n)})),Li=Xr((function(e,t){var n=tn(t,aa(Li));return Ks(e,64,s,t,n)})),Bi=ea((function(e,t){return Ks(e,256,s,s,s,t)}));function Pi(e,t){return e===t||e!=e&&t!=t}var Vi=Gs(Nr),Wi=Gs((function(e,t){return e>=t})),Ui=$r(function(){return arguments}())?$r:function(e){return to(e)&&De.call(e,"callee")&&!et.call(e,"callee")},Gi=r.isArray,ji=ht?Ut(ht):function(e){return to(e)&&Ir(e)==A};function Hi(e){return null!=e&&Ji(e.length)&&!Zi(e)}function qi(e){return to(e)&&Hi(e)}var Xi=dn||yu,Ki=pt?Ut(pt):function(e){return to(e)&&Ir(e)==b};function Yi(e){if(!to(e))return!1;var t=Ir(e);return t==x||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!so(e)}function Zi(e){if(!eo(e))return!1;var t=Ir(e);return t==v||t==w||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Qi(e){return"number"==typeof e&&e==mo(e)}function Ji(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=h}function eo(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function to(e){return null!=e&&"object"==typeof e}var no=dt?Ut(dt):function(e){return to(e)&&pa(e)==k};function ro(e){return"number"==typeof e||to(e)&&Ir(e)==S}function so(e){if(!to(e)||Ir(e)!=I)return!1;var t=He(e);if(null===t)return!0;var n=De.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Re.call(n)==ze}var ao=ft?Ut(ft):function(e){return to(e)&&Ir(e)==T},io=mt?Ut(mt):function(e){return to(e)&&pa(e)==C};function oo(e){return"string"==typeof e||!Gi(e)&&to(e)&&Ir(e)==_}function uo(e){return"symbol"==typeof e||to(e)&&Ir(e)==E}var lo=gt?Ut(gt):function(e){return to(e)&&Ji(e.length)&&!!Qe[Ir(e)]},co=Gs(Mr),ho=Gs((function(e,t){return e<=t}));function po(e){if(!e)return[];if(Hi(e))return oo(e)?an(e):Cs(e);if(it&&e[it])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[it]());var t=pa(e);return(t==k?Jt:t==C?nn:Vo)(e)}function fo(e){return e?(e=yo(e))===c||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function mo(e){var t=fo(e),n=t%1;return t==t?n?t-n:t:0}function go(e){return e?ir(mo(e),0,d):0}function yo(e){if("number"==typeof e)return e;if(uo(e))return p;if(eo(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=eo(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=Wt(e);var n=fe.test(e);return n||ge.test(e)?nt(e.slice(2),n?2:8):de.test(e)?p:+e}function bo(e){return _s(e,Do(e))}function xo(e){return null==e?"":os(e)}var vo=$s((function(e,t){if(wa(t)||Hi(t))_s(t,Ro(t),e);else for(var n in t)De.call(t,n)&&er(e,n,t[n])})),wo=$s((function(e,t){_s(t,Do(t),e)})),ko=$s((function(e,t,n,r){_s(t,Do(t),e,r)})),So=$s((function(e,t,n,r){_s(t,Ro(t),e,r)})),Io=ea(ar),No=Xr((function(e,t){e=Ie(e);var n=-1,r=t.length,a=r>2?t[2]:s;for(a&&ya(t[0],t[1],a)&&(r=1);++n<r;)for(var i=t[n],o=Do(i),u=-1,l=o.length;++u<l;){var c=o[u],h=e[c];(h===s||Pi(h,$e[c])&&!De.call(e,c))&&(e[c]=i[c])}return e})),To=Xr((function(e){return e.push(s,Zs),yt(Oo,s,e)}));function Co(e,t,n){var r=null==e?s:kr(e,t);return r===s?n:r}function _o(e,t){return null!=e&&da(e,t,Cr)}var Eo=Bs((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Me.call(t)),e[t]=n}),tu(su)),$o=Bs((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Me.call(t)),De.call(e,t)?e[t].push(n):e[t]=[n]}),ia),Ao=Xr(Er);function Ro(e){return Hi(e)?Kn(e):Or(e)}function Do(e){return Hi(e)?Kn(e,!0):function(e){if(!eo(e))return function(e){var t=[];if(null!=e)for(var n in Ie(e))t.push(n);return t}(e);var t=wa(e),n=[];for(var r in e)("constructor"!=r||!t&&De.call(e,r))&&n.push(r);return n}(e)}var Fo=$s((function(e,t,n){Pr(e,t,n)})),Oo=$s((function(e,t,n,r){Pr(e,t,n,r)})),Mo=ea((function(e,t){var n={};if(null==e)return n;var r=!1;t=Nt(t,(function(t){return t=ys(t,e),r||(r=t.length>1),t})),_s(e,na(e),n),r&&(n=or(n,7,Qs));for(var s=t.length;s--;)ls(n,t[s]);return n})),zo=ea((function(e,t){return null==e?{}:function(e,t){return Ur(e,t,(function(t,n){return _o(e,n)}))}(e,t)}));function Lo(e,t){if(null==e)return{};var n=Nt(na(e),(function(e){return[e]}));return t=ia(t),Ur(e,n,(function(e,n){return t(e,n[0])}))}var Bo=Xs(Ro),Po=Xs(Do);function Vo(e){return null==e?[]:Gt(e,Ro(e))}var Wo=Fs((function(e,t,n){return t=t.toLowerCase(),e+(n?Uo(t):t)}));function Uo(e){return Zo(xo(e).toLowerCase())}function Go(e){return(e=xo(e))&&e.replace(be,Kt).replace(je,"")}var jo=Fs((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),Ho=Fs((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),qo=Ds("toLowerCase"),Xo=Fs((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()})),Ko=Fs((function(e,t,n){return e+(n?" ":"")+Zo(t)})),Yo=Fs((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),Zo=Ds("toUpperCase");function Qo(e,t,n){return e=xo(e),(t=n?s:t)===s?function(e){return Ke.test(e)}(e)?function(e){return e.match(qe)||[]}(e):function(e){return e.match(ue)||[]}(e):e.match(t)||[]}var Jo=Xr((function(e,t){try{return yt(e,s,t)}catch(e){return Yi(e)?e:new we(e)}})),eu=ea((function(e,t){return xt(t,(function(t){t=za(t),sr(e,t,Ei(e[t],e))})),e}));function tu(e){return function(){return e}}var nu=zs(),ru=zs(!0);function su(e){return e}function au(e){return Fr("function"==typeof e?e:or(e,1))}var iu=Xr((function(e,t){return function(n){return Er(n,e,t)}})),ou=Xr((function(e,t){return function(n){return Er(e,n,t)}}));function uu(e,t,n){var r=Ro(t),s=wr(t,r);null!=n||eo(t)&&(s.length||!r.length)||(n=t,t=e,e=this,s=wr(t,Ro(t)));var a=!(eo(n)&&"chain"in n&&!n.chain),i=Zi(e);return xt(s,(function(n){var r=t[n];e[n]=r,i&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__),s=n.__actions__=Cs(this.__actions__);return s.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Tt([this.value()],arguments))})})),e}function lu(){}var cu=Vs(Nt),hu=Vs(wt),pu=Vs(Et);function du(e){return ba(e)?zt(za(e)):function(e){return function(t){return kr(t,e)}}(e)}var fu=Us(),mu=Us(!0);function gu(){return[]}function yu(){return!1}var bu,xu=Ps((function(e,t){return e+t}),0),vu=Hs("ceil"),wu=Ps((function(e,t){return e/t}),1),ku=Hs("floor"),Su=Ps((function(e,t){return e*t}),1),Iu=Hs("round"),Nu=Ps((function(e,t){return e-t}),0);return Bn.after=function(e,t){if("function"!=typeof t)throw new Ce(a);return e=mo(e),function(){if(--e<1)return t.apply(this,arguments)}},Bn.ary=Ci,Bn.assign=vo,Bn.assignIn=wo,Bn.assignInWith=ko,Bn.assignWith=So,Bn.at=Io,Bn.before=_i,Bn.bind=Ei,Bn.bindAll=eu,Bn.bindKey=$i,Bn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Gi(e)?e:[e]},Bn.chain=pi,Bn.chunk=function(e,t,n){t=(n?ya(e,t,n):t===s)?1:yn(mo(t),0);var a=null==e?0:e.length;if(!a||t<1)return[];for(var i=0,o=0,u=r(cn(a/t));i<a;)u[o++]=ts(e,i,i+=t);return u},Bn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,s=[];++t<n;){var a=e[t];a&&(s[r++]=a)}return s},Bn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=r(e-1),n=arguments[0],s=e;s--;)t[s-1]=arguments[s];return Tt(Gi(n)?Cs(n):[n],gr(t,1))},Bn.cond=function(e){var t=null==e?0:e.length,n=ia();return e=t?Nt(e,(function(e){if("function"!=typeof e[1])throw new Ce(a);return[n(e[0]),e[1]]})):[],Xr((function(n){for(var r=-1;++r<t;){var s=e[r];if(yt(s[0],this,n))return yt(s[1],this,n)}}))},Bn.conforms=function(e){return function(e){var t=Ro(e);return function(n){return ur(n,e,t)}}(or(e,1))},Bn.constant=tu,Bn.countBy=mi,Bn.create=function(e,t){var n=Pn(e);return null==t?n:rr(n,t)},Bn.curry=function e(t,n,r){var a=Ks(t,8,s,s,s,s,s,n=r?s:n);return a.placeholder=e.placeholder,a},Bn.curryRight=function e(t,n,r){var a=Ks(t,16,s,s,s,s,s,n=r?s:n);return a.placeholder=e.placeholder,a},Bn.debounce=Ai,Bn.defaults=No,Bn.defaultsDeep=To,Bn.defer=Ri,Bn.delay=Di,Bn.difference=Pa,Bn.differenceBy=Va,Bn.differenceWith=Wa,Bn.drop=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,(t=n||t===s?1:mo(t))<0?0:t,r):[]},Bn.dropRight=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,0,(t=r-(t=n||t===s?1:mo(t)))<0?0:t):[]},Bn.dropRightWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!0,!0):[]},Bn.dropWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!0):[]},Bn.fill=function(e,t,n,r){var a=null==e?0:e.length;return a?(n&&"number"!=typeof n&&ya(e,t,n)&&(n=0,r=a),function(e,t,n,r){var a=e.length;for((n=mo(n))<0&&(n=-n>a?0:a+n),(r=r===s||r>a?a:mo(r))<0&&(r+=a),r=n>r?0:go(r);n<r;)e[n++]=t;return e}(e,t,n,r)):[]},Bn.filter=function(e,t){return(Gi(e)?kt:mr)(e,ia(t,3))},Bn.flatMap=function(e,t){return gr(Si(e,t),1)},Bn.flatMapDeep=function(e,t){return gr(Si(e,t),c)},Bn.flatMapDepth=function(e,t,n){return n=n===s?1:mo(n),gr(Si(e,t),n)},Bn.flatten=ja,Bn.flattenDeep=function(e){return null!=e&&e.length?gr(e,c):[]},Bn.flattenDepth=function(e,t){return null!=e&&e.length?gr(e,t=t===s?1:mo(t)):[]},Bn.flip=function(e){return Ks(e,512)},Bn.flow=nu,Bn.flowRight=ru,Bn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var s=e[t];r[s[0]]=s[1]}return r},Bn.functions=function(e){return null==e?[]:wr(e,Ro(e))},Bn.functionsIn=function(e){return null==e?[]:wr(e,Do(e))},Bn.groupBy=vi,Bn.initial=function(e){return null!=e&&e.length?ts(e,0,-1):[]},Bn.intersection=qa,Bn.intersectionBy=Xa,Bn.intersectionWith=Ka,Bn.invert=Eo,Bn.invertBy=$o,Bn.invokeMap=wi,Bn.iteratee=au,Bn.keyBy=ki,Bn.keys=Ro,Bn.keysIn=Do,Bn.map=Si,Bn.mapKeys=function(e,t){var n={};return t=ia(t,3),xr(e,(function(e,r,s){sr(n,t(e,r,s),e)})),n},Bn.mapValues=function(e,t){var n={};return t=ia(t,3),xr(e,(function(e,r,s){sr(n,r,t(e,r,s))})),n},Bn.matches=function(e){return Lr(or(e,1))},Bn.matchesProperty=function(e,t){return Br(e,or(t,1))},Bn.memoize=Fi,Bn.merge=Fo,Bn.mergeWith=Oo,Bn.method=iu,Bn.methodOf=ou,Bn.mixin=uu,Bn.negate=Oi,Bn.nthArg=function(e){return e=mo(e),Xr((function(t){return Vr(t,e)}))},Bn.omit=Mo,Bn.omitBy=function(e,t){return Lo(e,Oi(ia(t)))},Bn.once=function(e){return _i(2,e)},Bn.orderBy=function(e,t,n,r){return null==e?[]:(Gi(t)||(t=null==t?[]:[t]),Gi(n=r?s:n)||(n=null==n?[]:[n]),Wr(e,t,n))},Bn.over=cu,Bn.overArgs=Mi,Bn.overEvery=hu,Bn.overSome=pu,Bn.partial=zi,Bn.partialRight=Li,Bn.partition=Ii,Bn.pick=zo,Bn.pickBy=Lo,Bn.property=du,Bn.propertyOf=function(e){return function(t){return null==e?s:kr(e,t)}},Bn.pull=Za,Bn.pullAll=Qa,Bn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,ia(n,2)):e},Bn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,s,n):e},Bn.pullAt=Ja,Bn.range=fu,Bn.rangeRight=mu,Bn.rearg=Bi,Bn.reject=function(e,t){return(Gi(e)?kt:mr)(e,Oi(ia(t,3)))},Bn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,s=[],a=e.length;for(t=ia(t,3);++r<a;){var i=e[r];t(i,r,e)&&(n.push(i),s.push(r))}return jr(e,s),n},Bn.rest=function(e,t){if("function"!=typeof e)throw new Ce(a);return Xr(e,t=t===s?t:mo(t))},Bn.reverse=ei,Bn.sampleSize=function(e,t,n){return t=(n?ya(e,t,n):t===s)?1:mo(t),(Gi(e)?Zn:Yr)(e,t)},Bn.set=function(e,t,n){return null==e?e:Zr(e,t,n)},Bn.setWith=function(e,t,n,r){return r="function"==typeof r?r:s,null==e?e:Zr(e,t,n,r)},Bn.shuffle=function(e){return(Gi(e)?Qn:es)(e)},Bn.slice=function(e,t,n){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&ya(e,t,n)?(t=0,n=r):(t=null==t?0:mo(t),n=n===s?r:mo(n)),ts(e,t,n)):[]},Bn.sortBy=Ni,Bn.sortedUniq=function(e){return e&&e.length?as(e):[]},Bn.sortedUniqBy=function(e,t){return e&&e.length?as(e,ia(t,2)):[]},Bn.split=function(e,t,n){return n&&"number"!=typeof n&&ya(e,t,n)&&(t=n=s),(n=n===s?d:n>>>0)?(e=xo(e))&&("string"==typeof t||null!=t&&!ao(t))&&!(t=os(t))&&Qt(e)?xs(an(e),0,n):e.split(t,n):[]},Bn.spread=function(e,t){if("function"!=typeof e)throw new Ce(a);return t=null==t?0:yn(mo(t),0),Xr((function(n){var r=n[t],s=xs(n,0,t);return r&&Tt(s,r),yt(e,this,s)}))},Bn.tail=function(e){var t=null==e?0:e.length;return t?ts(e,1,t):[]},Bn.take=function(e,t,n){return e&&e.length?ts(e,0,(t=n||t===s?1:mo(t))<0?0:t):[]},Bn.takeRight=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,(t=r-(t=n||t===s?1:mo(t)))<0?0:t,r):[]},Bn.takeRightWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!1,!0):[]},Bn.takeWhile=function(e,t){return e&&e.length?hs(e,ia(t,3)):[]},Bn.tap=function(e,t){return t(e),e},Bn.throttle=function(e,t,n){var r=!0,s=!0;if("function"!=typeof e)throw new Ce(a);return eo(n)&&(r="leading"in n?!!n.leading:r,s="trailing"in n?!!n.trailing:s),Ai(e,t,{leading:r,maxWait:t,trailing:s})},Bn.thru=di,Bn.toArray=po,Bn.toPairs=Bo,Bn.toPairsIn=Po,Bn.toPath=function(e){return Gi(e)?Nt(e,za):uo(e)?[e]:Cs(Ma(xo(e)))},Bn.toPlainObject=bo,Bn.transform=function(e,t,n){var r=Gi(e),s=r||Xi(e)||lo(e);if(t=ia(t,4),null==n){var a=e&&e.constructor;n=s?r?new a:[]:eo(e)&&Zi(a)?Pn(He(e)):{}}return(s?xt:xr)(e,(function(e,r,s){return t(n,e,r,s)})),n},Bn.unary=function(e){return Ci(e,1)},Bn.union=ti,Bn.unionBy=ni,Bn.unionWith=ri,Bn.uniq=function(e){return e&&e.length?us(e):[]},Bn.uniqBy=function(e,t){return e&&e.length?us(e,ia(t,2)):[]},Bn.uniqWith=function(e,t){return t="function"==typeof t?t:s,e&&e.length?us(e,s,t):[]},Bn.unset=function(e,t){return null==e||ls(e,t)},Bn.unzip=si,Bn.unzipWith=ai,Bn.update=function(e,t,n){return null==e?e:cs(e,t,gs(n))},Bn.updateWith=function(e,t,n,r){return r="function"==typeof r?r:s,null==e?e:cs(e,t,gs(n),r)},Bn.values=Vo,Bn.valuesIn=function(e){return null==e?[]:Gt(e,Do(e))},Bn.without=ii,Bn.words=Qo,Bn.wrap=function(e,t){return zi(gs(t),e)},Bn.xor=oi,Bn.xorBy=ui,Bn.xorWith=li,Bn.zip=ci,Bn.zipObject=function(e,t){return fs(e||[],t||[],er)},Bn.zipObjectDeep=function(e,t){return fs(e||[],t||[],Zr)},Bn.zipWith=hi,Bn.entries=Bo,Bn.entriesIn=Po,Bn.extend=wo,Bn.extendWith=ko,uu(Bn,Bn),Bn.add=xu,Bn.attempt=Jo,Bn.camelCase=Wo,Bn.capitalize=Uo,Bn.ceil=vu,Bn.clamp=function(e,t,n){return n===s&&(n=t,t=s),n!==s&&(n=(n=yo(n))==n?n:0),t!==s&&(t=(t=yo(t))==t?t:0),ir(yo(e),t,n)},Bn.clone=function(e){return or(e,4)},Bn.cloneDeep=function(e){return or(e,5)},Bn.cloneDeepWith=function(e,t){return or(e,5,t="function"==typeof t?t:s)},Bn.cloneWith=function(e,t){return or(e,4,t="function"==typeof t?t:s)},Bn.conformsTo=function(e,t){return null==t||ur(e,t,Ro(t))},Bn.deburr=Go,Bn.defaultTo=function(e,t){return null==e||e!=e?t:e},Bn.divide=wu,Bn.endsWith=function(e,t,n){e=xo(e),t=os(t);var r=e.length,a=n=n===s?r:ir(mo(n),0,r);return(n-=t.length)>=0&&e.slice(n,a)==t},Bn.eq=Pi,Bn.escape=function(e){return(e=xo(e))&&X.test(e)?e.replace(H,Yt):e},Bn.escapeRegExp=function(e){return(e=xo(e))&&ne.test(e)?e.replace(te,"\\$&"):e},Bn.every=function(e,t,n){var r=Gi(e)?wt:dr;return n&&ya(e,t,n)&&(t=s),r(e,ia(t,3))},Bn.find=gi,Bn.findIndex=Ua,Bn.findKey=function(e,t){return At(e,ia(t,3),xr)},Bn.findLast=yi,Bn.findLastIndex=Ga,Bn.findLastKey=function(e,t){return At(e,ia(t,3),vr)},Bn.floor=ku,Bn.forEach=bi,Bn.forEachRight=xi,Bn.forIn=function(e,t){return null==e?e:yr(e,ia(t,3),Do)},Bn.forInRight=function(e,t){return null==e?e:br(e,ia(t,3),Do)},Bn.forOwn=function(e,t){return e&&xr(e,ia(t,3))},Bn.forOwnRight=function(e,t){return e&&vr(e,ia(t,3))},Bn.get=Co,Bn.gt=Vi,Bn.gte=Wi,Bn.has=function(e,t){return null!=e&&da(e,t,Tr)},Bn.hasIn=_o,Bn.head=Ha,Bn.identity=su,Bn.includes=function(e,t,n,r){e=Hi(e)?e:Vo(e),n=n&&!r?mo(n):0;var s=e.length;return n<0&&(n=yn(s+n,0)),oo(e)?n<=s&&e.indexOf(t,n)>-1:!!s&&Dt(e,t,n)>-1},Bn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=null==n?0:mo(n);return s<0&&(s=yn(r+s,0)),Dt(e,t,s)},Bn.inRange=function(e,t,n){return t=fo(t),n===s?(n=t,t=0):n=fo(n),function(e,t,n){return e>=bn(t,n)&&e<yn(t,n)}(e=yo(e),t,n)},Bn.invoke=Ao,Bn.isArguments=Ui,Bn.isArray=Gi,Bn.isArrayBuffer=ji,Bn.isArrayLike=Hi,Bn.isArrayLikeObject=qi,Bn.isBoolean=function(e){return!0===e||!1===e||to(e)&&Ir(e)==y},Bn.isBuffer=Xi,Bn.isDate=Ki,Bn.isElement=function(e){return to(e)&&1===e.nodeType&&!so(e)},Bn.isEmpty=function(e){if(null==e)return!0;if(Hi(e)&&(Gi(e)||"string"==typeof e||"function"==typeof e.splice||Xi(e)||lo(e)||Ui(e)))return!e.length;var t=pa(e);if(t==k||t==C)return!e.size;if(wa(e))return!Or(e).length;for(var n in e)if(De.call(e,n))return!1;return!0},Bn.isEqual=function(e,t){return Ar(e,t)},Bn.isEqualWith=function(e,t,n){var r=(n="function"==typeof n?n:s)?n(e,t):s;return r===s?Ar(e,t,s,n):!!r},Bn.isError=Yi,Bn.isFinite=function(e){return"number"==typeof e&&fn(e)},Bn.isFunction=Zi,Bn.isInteger=Qi,Bn.isLength=Ji,Bn.isMap=no,Bn.isMatch=function(e,t){return e===t||Rr(e,t,ua(t))},Bn.isMatchWith=function(e,t,n){return n="function"==typeof n?n:s,Rr(e,t,ua(t),n)},Bn.isNaN=function(e){return ro(e)&&e!=+e},Bn.isNative=function(e){if(va(e))throw new we("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Dr(e)},Bn.isNil=function(e){return null==e},Bn.isNull=function(e){return null===e},Bn.isNumber=ro,Bn.isObject=eo,Bn.isObjectLike=to,Bn.isPlainObject=so,Bn.isRegExp=ao,Bn.isSafeInteger=function(e){return Qi(e)&&e>=-9007199254740991&&e<=h},Bn.isSet=io,Bn.isString=oo,Bn.isSymbol=uo,Bn.isTypedArray=lo,Bn.isUndefined=function(e){return e===s},Bn.isWeakMap=function(e){return to(e)&&pa(e)==$},Bn.isWeakSet=function(e){return to(e)&&"[object WeakSet]"==Ir(e)},Bn.join=function(e,t){return null==e?"":mn.call(e,t)},Bn.kebabCase=jo,Bn.last=Ya,Bn.lastIndexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=r;return n!==s&&(a=(a=mo(n))<0?yn(r+a,0):bn(a,r-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,a):Rt(e,Ot,a,!0)},Bn.lowerCase=Ho,Bn.lowerFirst=qo,Bn.lt=co,Bn.lte=ho,Bn.max=function(e){return e&&e.length?fr(e,su,Nr):s},Bn.maxBy=function(e,t){return e&&e.length?fr(e,ia(t,2),Nr):s},Bn.mean=function(e){return Mt(e,su)},Bn.meanBy=function(e,t){return Mt(e,ia(t,2))},Bn.min=function(e){return e&&e.length?fr(e,su,Mr):s},Bn.minBy=function(e,t){return e&&e.length?fr(e,ia(t,2),Mr):s},Bn.stubArray=gu,Bn.stubFalse=yu,Bn.stubObject=function(){return{}},Bn.stubString=function(){return""},Bn.stubTrue=function(){return!0},Bn.multiply=Su,Bn.nth=function(e,t){return e&&e.length?Vr(e,mo(t)):s},Bn.noConflict=function(){return at._===this&&(at._=Le),this},Bn.noop=lu,Bn.now=Ti,Bn.pad=function(e,t,n){e=xo(e);var r=(t=mo(t))?sn(e):0;if(!t||r>=t)return e;var s=(t-r)/2;return Ws(hn(s),n)+e+Ws(cn(s),n)},Bn.padEnd=function(e,t,n){e=xo(e);var r=(t=mo(t))?sn(e):0;return t&&r<t?e+Ws(t-r,n):e},Bn.padStart=function(e,t,n){e=xo(e);var r=(t=mo(t))?sn(e):0;return t&&r<t?Ws(t-r,n)+e:e},Bn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),vn(xo(e).replace(re,""),t||0)},Bn.random=function(e,t,n){if(n&&"boolean"!=typeof n&&ya(e,t,n)&&(t=n=s),n===s&&("boolean"==typeof t?(n=t,t=s):"boolean"==typeof e&&(n=e,e=s)),e===s&&t===s?(e=0,t=1):(e=fo(e),t===s?(t=e,e=0):t=fo(t)),e>t){var r=e;e=t,t=r}if(n||e%1||t%1){var a=wn();return bn(e+a*(t-e+tt("1e-"+((a+"").length-1))),t)}return Hr(e,t)},Bn.reduce=function(e,t,n){var r=Gi(e)?Ct:Bt,s=arguments.length<3;return r(e,ia(t,4),n,s,hr)},Bn.reduceRight=function(e,t,n){var r=Gi(e)?_t:Bt,s=arguments.length<3;return r(e,ia(t,4),n,s,pr)},Bn.repeat=function(e,t,n){return t=(n?ya(e,t,n):t===s)?1:mo(t),qr(xo(e),t)},Bn.replace=function(){var e=arguments,t=xo(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Bn.result=function(e,t,n){var r=-1,a=(t=ys(t,e)).length;for(a||(a=1,e=s);++r<a;){var i=null==e?s:e[za(t[r])];i===s&&(r=a,i=n),e=Zi(i)?i.call(e):i}return e},Bn.round=Iu,Bn.runInContext=e,Bn.sample=function(e){return(Gi(e)?Yn:Kr)(e)},Bn.size=function(e){if(null==e)return 0;if(Hi(e))return oo(e)?sn(e):e.length;var t=pa(e);return t==k||t==C?e.size:Or(e).length},Bn.snakeCase=Xo,Bn.some=function(e,t,n){var r=Gi(e)?Et:ns;return n&&ya(e,t,n)&&(t=s),r(e,ia(t,3))},Bn.sortedIndex=function(e,t){return rs(e,t)},Bn.sortedIndexBy=function(e,t,n){return ss(e,t,ia(n,2))},Bn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=rs(e,t);if(r<n&&Pi(e[r],t))return r}return-1},Bn.sortedLastIndex=function(e,t){return rs(e,t,!0)},Bn.sortedLastIndexBy=function(e,t,n){return ss(e,t,ia(n,2),!0)},Bn.sortedLastIndexOf=function(e,t){if(null!=e&&e.length){var n=rs(e,t,!0)-1;if(Pi(e[n],t))return n}return-1},Bn.startCase=Ko,Bn.startsWith=function(e,t,n){return e=xo(e),n=null==n?0:ir(mo(n),0,e.length),t=os(t),e.slice(n,n+t.length)==t},Bn.subtract=Nu,Bn.sum=function(e){return e&&e.length?Pt(e,su):0},Bn.sumBy=function(e,t){return e&&e.length?Pt(e,ia(t,2)):0},Bn.template=function(e,t,n){var r=Bn.templateSettings;n&&ya(e,t,n)&&(t=s),e=xo(e),t=ko({},t,r,Ys);var a,i,o=ko({},t.imports,r.imports,Ys),u=Ro(o),l=Gt(o,u),c=0,h=t.interpolate||xe,p="__p += '",d=Ne((t.escape||xe).source+"|"+h.source+"|"+(h===Z?he:xe).source+"|"+(t.evaluate||xe).source+"|$","g"),f="//# sourceURL="+(De.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Ze+"]")+"\n";e.replace(d,(function(t,n,r,s,o,u){return r||(r=s),p+=e.slice(c,u).replace(ve,Zt),n&&(a=!0,p+="' +\n__e("+n+") +\n'"),o&&(i=!0,p+="';\n"+o+";\n__p += '"),r&&(p+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=u+t.length,t})),p+="';\n";var m=De.call(t,"variable")&&t.variable;if(m){if(le.test(m))throw new we("Invalid `variable` option passed into `_.template`")}else p="with (obj) {\n"+p+"\n}\n";p=(i?p.replace(W,""):p).replace(U,"$1").replace(G,"$1;"),p="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var g=Jo((function(){return ke(u,f+"return "+p).apply(s,l)}));if(g.source=p,Yi(g))throw g;return g},Bn.times=function(e,t){if((e=mo(e))<1||e>h)return[];var n=d,r=bn(e,d);t=ia(t),e-=d;for(var s=Vt(r,t);++n<e;)t(n);return s},Bn.toFinite=fo,Bn.toInteger=mo,Bn.toLength=go,Bn.toLower=function(e){return xo(e).toLowerCase()},Bn.toNumber=yo,Bn.toSafeInteger=function(e){return e?ir(mo(e),-9007199254740991,h):0===e?e:0},Bn.toString=xo,Bn.toUpper=function(e){return xo(e).toUpperCase()},Bn.trim=function(e,t,n){if((e=xo(e))&&(n||t===s))return Wt(e);if(!e||!(t=os(t)))return e;var r=an(e),a=an(t);return xs(r,Ht(r,a),qt(r,a)+1).join("")},Bn.trimEnd=function(e,t,n){if((e=xo(e))&&(n||t===s))return e.slice(0,on(e)+1);if(!e||!(t=os(t)))return e;var r=an(e);return xs(r,0,qt(r,an(t))+1).join("")},Bn.trimStart=function(e,t,n){if((e=xo(e))&&(n||t===s))return e.replace(re,"");if(!e||!(t=os(t)))return e;var r=an(e);return xs(r,Ht(r,an(t))).join("")},Bn.truncate=function(e,t){var n=30,r="...";if(eo(t)){var a="separator"in t?t.separator:a;n="length"in t?mo(t.length):n,r="omission"in t?os(t.omission):r}var i=(e=xo(e)).length;if(Qt(e)){var o=an(e);i=o.length}if(n>=i)return e;var u=n-sn(r);if(u<1)return r;var l=o?xs(o,0,u).join(""):e.slice(0,u);if(a===s)return l+r;if(o&&(u+=l.length-u),ao(a)){if(e.slice(u).search(a)){var c,h=l;for(a.global||(a=Ne(a.source,xo(pe.exec(a))+"g")),a.lastIndex=0;c=a.exec(h);)var p=c.index;l=l.slice(0,p===s?u:p)}}else if(e.indexOf(os(a),u)!=u){var d=l.lastIndexOf(a);d>-1&&(l=l.slice(0,d))}return l+r},Bn.unescape=function(e){return(e=xo(e))&&q.test(e)?e.replace(j,un):e},Bn.uniqueId=function(e){var t=++Fe;return xo(e)+t},Bn.upperCase=Yo,Bn.upperFirst=Zo,Bn.each=bi,Bn.eachRight=xi,Bn.first=Ha,uu(Bn,(bu={},xr(Bn,(function(e,t){De.call(Bn.prototype,t)||(bu[t]=e)})),bu),{chain:!1}),Bn.VERSION="4.17.21",xt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Bn[e].placeholder=Bn})),xt(["drop","take"],(function(e,t){Un.prototype[e]=function(n){n=n===s?1:yn(mo(n),0);var r=this.__filtered__&&!t?new Un(this):this.clone();return r.__filtered__?r.__takeCount__=bn(n,r.__takeCount__):r.__views__.push({size:bn(n,d),type:e+(r.__dir__<0?"Right":"")}),r},Un.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),xt(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Un.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:ia(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),xt(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Un.prototype[e]=function(){return this[n](1).value()[0]}})),xt(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Un.prototype[e]=function(){return this.__filtered__?new Un(this):this[n](1)}})),Un.prototype.compact=function(){return this.filter(su)},Un.prototype.find=function(e){return this.filter(e).head()},Un.prototype.findLast=function(e){return this.reverse().find(e)},Un.prototype.invokeMap=Xr((function(e,t){return"function"==typeof e?new Un(this):this.map((function(n){return Er(n,e,t)}))})),Un.prototype.reject=function(e){return this.filter(Oi(ia(e)))},Un.prototype.slice=function(e,t){e=mo(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Un(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),t!==s&&(n=(t=mo(t))<0?n.dropRight(-t):n.take(t-e)),n)},Un.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Un.prototype.toArray=function(){return this.take(d)},xr(Un.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),a=Bn[r?"take"+("last"==t?"Right":""):t],i=r||/^find/.test(t);a&&(Bn.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,u=t instanceof Un,l=o[0],c=u||Gi(t),h=function(e){var t=a.apply(Bn,Tt([e],o));return r&&p?t[0]:t};c&&n&&"function"==typeof l&&1!=l.length&&(u=c=!1);var p=this.__chain__,d=!!this.__actions__.length,f=i&&!p,m=u&&!d;if(!i&&c){t=m?t:new Un(this);var g=e.apply(t,o);return g.__actions__.push({func:di,args:[h],thisArg:s}),new Wn(g,p)}return f&&m?e.apply(this,o):(g=this.thru(h),f?r?g.value()[0]:g.value():g)})})),xt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=_e[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);Bn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var s=this.value();return t.apply(Gi(s)?s:[],e)}return this[n]((function(n){return t.apply(Gi(n)?n:[],e)}))}})),xr(Un.prototype,(function(e,t){var n=Bn[t];if(n){var r=n.name+"";De.call($n,r)||($n[r]=[]),$n[r].push({name:t,func:n})}})),$n[Ls(s,2).name]=[{name:"wrapper",func:s}],Un.prototype.clone=function(){var e=new Un(this.__wrapped__);return e.__actions__=Cs(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Cs(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Cs(this.__views__),e},Un.prototype.reverse=function(){if(this.__filtered__){var e=new Un(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Un.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Gi(e),r=t<0,s=n?e.length:0,a=function(e,t,n){for(var r=-1,s=n.length;++r<s;){var a=n[r],i=a.size;switch(a.type){case"drop":e+=i;break;case"dropRight":t-=i;break;case"take":t=bn(t,e+i);break;case"takeRight":e=yn(e,t-i)}}return{start:e,end:t}}(0,s,this.__views__),i=a.start,o=a.end,u=o-i,l=r?o:i-1,c=this.__iteratees__,h=c.length,p=0,d=bn(u,this.__takeCount__);if(!n||!r&&s==u&&d==u)return ps(e,this.__actions__);var f=[];e:for(;u--&&p<d;){for(var m=-1,g=e[l+=t];++m<h;){var y=c[m],b=y.iteratee,x=y.type,v=b(g);if(2==x)g=v;else if(!v){if(1==x)continue e;break e}}f[p++]=g}return f},Bn.prototype.at=fi,Bn.prototype.chain=function(){return pi(this)},Bn.prototype.commit=function(){return new Wn(this.value(),this.__chain__)},Bn.prototype.next=function(){this.__values__===s&&(this.__values__=po(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?s:this.__values__[this.__index__++]}},Bn.prototype.plant=function(e){for(var t,n=this;n instanceof Vn;){var r=Ba(n);r.__index__=0,r.__values__=s,t?a.__wrapped__=r:t=r;var a=r;n=n.__wrapped__}return a.__wrapped__=e,t},Bn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Un){var t=e;return this.__actions__.length&&(t=new Un(this)),(t=t.reverse()).__actions__.push({func:di,args:[ei],thisArg:s}),new Wn(t,this.__chain__)}return this.thru(ei)},Bn.prototype.toJSON=Bn.prototype.valueOf=Bn.prototype.value=function(){return ps(this.__wrapped__,this.__actions__)},Bn.prototype.first=Bn.prototype.head,it&&(Bn.prototype[it]=function(){return this}),Bn}();at._=ln,(r=function(){return ln}.call(t,n,t,e))===s||(e.exports=r)}.call(this)},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));a=a.mul(p).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=s+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+s*p+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),s=n(8652),a=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(3906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},9100:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){void 0===e&&(e=!1);try{var t=[],n=navigator;for(var r in n){var s=n[r];"object"==typeof s&&(s=JSON.stringify(s)),t.push(r+":"+s)}return e?t:t.join(",")}catch(e){return""}}},310:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectDetection=t.load=t.version=void 0;var a=n(4618),i=n(1740),o=n(662);if(Object.defineProperty(t,"version",{enumerable:!0,get:function(){return o.version}}),void 0===u)var u={now:function(){return Date.now()}};t.load=function(e){return void 0===e&&(e={}),r(this,void 0,void 0,(function(){var t,n,r,a;return s(this,(function(s){switch(s.label){case 0:if(null==i)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");return t=e.base||"lite_mobilenet_v2",n=e.modelUrl,r=e.inputSize,[4,(a=new l(t,n)).load(t,r)];case 1:return s.sent(),[2,a]}}))}))};var l=function(){function e(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/"+this.getPrefix(e)+"/model.json"}return e.prototype.getPrefix=function(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e},e.prototype.load=function(e,t){return r(this,void 0,void 0,(function(){var n,r,o;return s(this,(function(s){switch(s.label){case 0:return n=this,[4,a.loadGraphModel(this.modelPath)];case 1:return n.model=s.sent(),r="yolov5s"===e?i.zeros([1,t,t,3],"float32"):i.zeros([1,300,300,3],"int32"),o=this.model.execute(r),[4,Promise.all(o.map((function(e){return e.data()})))];case 2:return s.sent(),o.map((function(e){return e.dispose()})),r.dispose(),[2]}}))}))},e.prototype.infer=function(e,t,n,a,o,l){return r(this,void 0,Promise,(function(){var r,c,h,p,d,f,m,g,y,b,x,v,w,k,S,I,N,T,C,_,E,$,A,R,D,F,O;return s(this,(function(s){if("yolov5s"===e){for(r=t.width||t.videoWidth||t.shape&&t.shape[1]||640,c=t.height||t.videoHeight||t.shape&&t.shape[0]||480,S=i.tidy((function(){var e;return e=t instanceof i.Tensor?t:i.browser.fromPixels(t),(e=i.div(e.resizeNearestNeighbor([l,l]).asType("float32"),255)).expandDims(0)})),T=u.now(),p=this.model.execute(S),h=u.now(),Math.round(1e3/(h-T)),f=0;f<p.length;f++)if(3==p[f].shape.length){d=f;break}return T=u.now(),m=p[d].dataSync(),h=u.now(),Math.round(1e3/(h-T)),T=u.now(),g=p[d].shape[1],y=p[d].shape[2]-5,b=this.calculateMaxScoresYolov5(m,g,y),h=u.now(),Math.round(1e3/(h-T)),T=u.now(),x=this.getConfidenceYoloV5(m,g,y),h=u.now(),Math.round(1e3/(h-T)),T=u.now(),v=this.getBoxesYoloV5(m,g,y,l),h=u.now(),Math.round(1e3/(h-T)),T=u.now(),S.dispose(),i.dispose(p),h=u.now(),Math.round(1e3/(h-T)),T=u.now(),D=i.getBackend(),i.setBackend("cpu"),w=i.tidy((function(){var e=i.tensor2d(v,[g,4]);return i.image.nonMaxSuppression(e,x,n,a,o)})),k=w.dataSync(),w.dispose(),h=u.now(),Math.round(1e3/(h-T)),i.setBackend(D),[2,this.buildDetectedObjects(r,c,v,x,k,b)]}return S=i.tidy((function(){return t instanceof i.Tensor||(t=i.browser.fromPixels(t)),t.expandDims(0)})),I=S.shape[1],N=S.shape[2],T=u.now(),C=this.model.execute(S),h=u.now(),_=C[0].dataSync(),E=C[1].dataSync(),S.dispose(),i.dispose(C),$=this.calculateMaxScores(_,C[0].shape[1],C[0].shape[2]),A=$[0],R=$[1],D=i.getBackend(),i.setBackend("cpu"),F=i.tidy((function(){var e=i.tensor2d(E,[C[1].shape[1],C[1].shape[3]]);return i.image.nonMaxSuppression(e,A,n,a,o)})),O=F.dataSync(),F.dispose(),i.setBackend(D),[2,this.buildDetectedObjects(N,I,E,A,O,R)]}))}))},e.prototype.buildDetectedObjects=function(e,t,n,r,s,a){for(var i=s.length,o=[],u=0;u<i;u++){for(var l=[],c=0;c<4;c++)l[c]=n[4*s[u]+c];var h=l[0]*t,p=l[1]*e,d=l[2]*t,f=l[3]*e;o.push({class:a[s[u]],confidence:r[s[u]],bbox:{x:(p+f)/2,y:(h+d)/2,width:f-p,height:d-h}})}return o},e.prototype.calculateMaxScores=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+u]>i&&(i=e[a*n+u],o=u);r[a]=i,s[a]=o}return[r,s]},e.prototype.calculateMaxScoresYolov5=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+5*(a+1)+u]>i&&(i=e[a*n+5*(a+1)+u],o=u);r[a]=i,s[a]=o}return s},e.prototype.getConfidenceYoloV5=function(e,t,n){for(var r=[],s=0;s<t;s++)r[s]=e[s*(n+5)+4];return r},e.prototype.getBoxesYoloV5=function(e,t,n,r){for(var s=[],a=0;a<t;a++){var i=e[a*(n+5)+0],o=e[a*(n+5)+1],u=e[a*(n+5)+2],l=e[a*(n+5)+3],c=(i-u/2)/r,h=(o-l/2)/r,p=(i+u/2)/r,d=(o+l/2)/r;s[4*a]=h,s[4*a+1]=c,s[4*a+2]=d,s[4*a+3]=p}return new Float32Array(s)},e.prototype.detect=function(e,t,n,a,i,o){return void 0===n&&(n=20),void 0===a&&(a=.5),void 0===i&&(i=.5),void 0===o&&(o=640),r(this,void 0,Promise,(function(){return s(this,(function(r){return[2,this.infer(e,t,n,a,i,o)]}))}))},e.prototype.dispose=function(){null!=this.model&&this.model.dispose()},e}();t.ObjectDetection=l},662:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="2.1.0"},3602:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.loadWeightsAsArrayBuffer=t.concatenateArrayBuffers=t.getModelArtifactsInfoForJSON=t.stringByteLength=t.parseUrl=t.JSONHandler=void 0;var s=function(){function e(e){this.json=e}return e.prototype.load=function(){return n(this,void 0,void 0,(function(){var e,t,n,s,a,i,o,u,l,c,h,p;return r(this,(function(r){switch(r.label){case 0:if(e=this.json,t=e.modelTopology,n=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata,null==t&&null==n)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==n?[3,2]:[4,this.loadWeights(n)];case 1:c=r.sent(),u=c[0],l=c[1],r.label=2;case 2:return h={modelTopology:t,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},(p=e.modelInitializer)&&(h.modelInitializer=p),[2,h]}}))}))},e.prototype.loadWeights=function(e){return n(this,void 0,Promise,(function(){var t,n,s,a,u,l,c,h,p,d,f,m,g,y,b,x,v,w,k,S;return r(this,(function(r){switch(r.label){case 0:for(Array.isArray(this.path)?this.path[1]:this.path,n=(t=["",""])[0],s=t[1],a=this.weightPathPrefix||n,u=[],l=0,c=e;l<c.length;l++)h=c[l],u.push.apply(u,h.weights);for(p=[],d=[],f=0,m=e;f<m.length;f++)for(g=m[f],y=0,b=g.paths;y<b.length;y++)x=b[y],null!=this.weightUrlConverter?d.push(this.weightUrlConverter(x)):p.push(a+x+s);return this.weightUrlConverter?(w=(v=p.push).apply,k=[p],[4,Promise.all(d)]):[3,2];case 1:w.apply(v,k.concat([r.sent()])),r.label=2;case 2:return[4,o(p,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 3:return S=r.sent(),[2,[u,i(S)]]}}))}))},e}();function a(e){return useNodeBuffer?Buffer.byteLength(e):new Blob([e]).size}function i(e){if(1===e.length)return e[0];var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function o(e,t){return n(this,void 0,Promise,(function(){var n,s,a,i,o,u,l,c,h;return r(this,(function(r){switch(r.label){case 0:return null==t&&(t={}),n=null==t.fetchFunc?fetch:t.fetchFunc,s=e.map((function(e){return n(e,t.requestInit,{isBinary:!0})})),a=0,i=.5,null!=t.onProgress?[3,2]:[4,Promise.all(s)];case 1:return o=r.sent(),[3,4];case 2:return[4,monitorPromisesProgress(s,t.onProgress,a,i)];case 3:o=r.sent(),r.label=4;case 4:return u=o.map((function(e){return e.arrayBuffer()})),l=.5,c=1,null!=t.onProgress?[3,6]:[4,Promise.all(u)];case 5:return h=r.sent(),[3,8];case 6:return[4,monitorPromisesProgress(u,t.onProgress,l,c)];case 7:h=r.sent(),r.label=8;case 8:return[2,h]}}))}))}t.JSONHandler=s,t.parseUrl=function(e){var t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]},t.stringByteLength=a,t.getModelArtifactsInfoForJSON=function(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:a(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:a(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}},t.concatenateArrayBuffers=i,t.loadWeightsAsArrayBuffer=o},3323:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectDetection=t.load=t.version=void 0;var a=n(4618),i=n(1740),o=n(401);if(Object.defineProperty(t,"version",{enumerable:!0,get:function(){return o.version}}),void 0===u)var u={now:function(){return Date.now()}};t.load=function(e){return void 0===e&&(e={}),r(this,void 0,void 0,(function(){var t,n,r,a;return s(this,(function(s){switch(s.label){case 0:if(null==i)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");return t=e.base||"lite_mobilenet_v2",n=e.modelUrl,r=e.inputSize,[4,(a=new l(t,n)).load(t,r)];case 1:return s.sent(),[2,a]}}))}))};var l=function(){function e(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/"+this.getPrefix(e)+"/model.json"}return e.prototype.getPrefix=function(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e},e.prototype.load=function(e,t){return r(this,void 0,void 0,(function(){var n,r,o;return s(this,(function(s){switch(s.label){case 0:return n=this,[4,a.loadGraphModel(this.modelPath)];case 1:return n.model=s.sent(),r="yolov5s"===e?i.zeros([1,t,t,3],"float32"):i.zeros([1,300,300,3],"int32"),[4,this.model.executeAsync(r)];case 2:return o=s.sent(),i.dispose(o),r.dispose(),[2]}}))}))},e.prototype.infer=function(e,t,n,a,o,l){return r(this,void 0,Promise,(function(){var r,c,h,p,d,f,m,g,y,b,x,v,w,k,S,I,N,T,C,_,E,$,A,R,D;return s(this,(function(s){return"yolov5s"===e?(r=t.width||t.videoWidth||t.shape&&t.shape[1]||640,c=t.height||t.videoHeight||t.shape&&t.shape[0]||480,w=i.tidy((function(){var e;return e=t instanceof i.Tensor?t:i.browser.fromPixels(t),(e=i.div(e.resizeNearestNeighbor([l,l]).asType("float32"),255)).expandDims(0)})),I=u.now(),p=this.model.execute(w),h=u.now(),Math.round(1e3/(h-I)),d=p.dataSync(),f=p.shape[1],m=p.shape[2]-5,g=this.calculateMaxScoresYolov5(d,f,m),h=u.now(),I=u.now(),y=this.getConfidenceYoloV5(d,f,m),I=u.now(),b=this.getBoxesYoloV5(d,f,m,l),w.dispose(),i.dispose(p),h=u.now(),I=u.now(),A=i.getBackend(),i.setBackend("cpu"),x=i.tidy((function(){var e=i.tensor2d(b,[f,4]);return i.image.nonMaxSuppression(e,y,n,a,o)})),v=x.dataSync(),x.dispose(),i.setBackend(A),[2,this.buildDetectedObjects(r,c,b,y,v,g)]):(w=i.tidy((function(){return t instanceof i.Tensor||(t=i.browser.fromPixels(t)),t.expandDims(0)})),k=w.shape[1],S=w.shape[2],I=u.now(),N=this.model.execute(w),h=u.now(),T=N[0].dataSync(),C=N[1].dataSync(),w.dispose(),i.dispose(N),_=this.calculateMaxScores(T,N[0].shape[1],N[0].shape[2]),E=_[0],$=_[1],A=i.getBackend(),i.setBackend("cpu"),R=i.tidy((function(){var e=i.tensor2d(C,[N[1].shape[1],N[1].shape[3]]);return i.image.nonMaxSuppression(e,E,n,a,o)})),D=R.dataSync(),R.dispose(),i.setBackend(A),[2,this.buildDetectedObjects(S,k,C,E,D,$)])}))}))},e.prototype.buildDetectedObjects=function(e,t,n,r,s,a){for(var i=s.length,o=[],u=0;u<i;u++){for(var l=[],c=0;c<4;c++)l[c]=n[4*s[u]+c];var h=l[0]*t,p=l[1]*e,d=l[2]*t,f=l[3]*e;o.push({class:a[s[u]],confidence:r[s[u]],bbox:{x:(p+f)/2,y:(h+d)/2,width:f-p,height:d-h}})}return o},e.prototype.calculateMaxScores=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+u]>i&&(i=e[a*n+u],o=u);r[a]=i,s[a]=o}return[r,s]},e.prototype.calculateMaxScoresYolov5=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+5*(a+1)+u]>i&&(i=e[a*n+5*(a+1)+u],o=u);r[a]=i,s[a]=o}return s},e.prototype.getConfidenceYoloV5=function(e,t,n){for(var r=[],s=0;s<t;s++)r[s]=e[s*(n+5)+4];return r},e.prototype.getBoxesYoloV5=function(e,t,n,r){for(var s=[],a=0;a<t;a++){var i=e[a*(n+5)+0],o=e[a*(n+5)+1],u=e[a*(n+5)+2],l=e[a*(n+5)+3],c=i-u/2,h=o-l/2,p=i+u/2,d=o+l/2;s[4*a]=h,s[4*a+1]=c,s[4*a+2]=d,s[4*a+3]=p}return new Float32Array(s)},e.prototype.detect=function(e,t,n,a,i,o){return void 0===n&&(n=20),void 0===a&&(a=.5),void 0===i&&(i=.5),void 0===o&&(o=640),r(this,void 0,Promise,(function(){return s(this,(function(r){return[2,this.infer(e,t,n,a,i,o)]}))}))},e.prototype.dispose=function(){null!=this.model&&this.model.dispose()},e}();t.ObjectDetection=l},401:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="2.1.0"},1541:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectDetection=t.load=t.version=void 0;var a=n(4618),i=n(1740),o=n(79);if(Object.defineProperty(t,"version",{enumerable:!0,get:function(){return o.version}}),void 0===u)var u={now:function(){return Date.now()}};t.load=function(e){return void 0===e&&(e={}),r(this,void 0,void 0,(function(){var t,n,r,a;return s(this,(function(s){switch(s.label){case 0:if(null==i)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");return t=e.base||"lite_mobilenet_v2",n=e.modelUrl,r=e.inputSize,[4,(a=new l(t,n)).load(t,r)];case 1:return s.sent(),[2,a]}}))}))};var l=function(){function e(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/"+this.getPrefix(e)+"/model.json"}return e.prototype.getPrefix=function(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e},e.prototype.load=function(e,t){return r(this,void 0,void 0,(function(){var n,r,o;return s(this,(function(s){switch(s.label){case 0:return n=this,[4,a.loadGraphModel(this.modelPath)];case 1:return n.model=s.sent(),r="yolov5s"===e||"yolov8"===e?i.zeros([1,3,t,t],"float32"):i.zeros([1,300,300,3],"int32"),[4,this.model.executeAsync(r)];case 2:return o=s.sent(),i.dispose(o),r.dispose(),[2]}}))}))},e.prototype.infer=function(e,t,n,a,o,l){return r(this,void 0,Promise,(function(){var r,c,h,p,d,f,m,g,y,b,x,v,w,k,S,I,N,T,C,_,E,$,A,R,D,F,O;return s(this,(function(s){switch(s.label){case 0:return"yolov8"!==e?[3,2]:(r=t.width||t.videoWidth||t.shape&&t.shape[1]||640,c=t.height||t.videoHeight||t.shape&&t.shape[0]||480,S=i.tidy((function(){var e;return e=t instanceof i.Tensor?t:i.browser.fromPixels(t),e=i.div(e.resizeNearestNeighbor([l,l]).asType("float32"),255),(e=i.transpose(e,[2,0,1])).expandDims(0)})),T=u.now(),[4,this.model.executeAsync(S)]);case 1:return p=s.sent(),h=u.now(),Math.round(1e3/(h-T)),d=i.transpose(p,[0,2,1]),f=d.dataSync(),m=d.shape[1],g=d.shape[2]-4,y=this.calculateMaxScoresYolov5(f,m,g),b=y.scores,x=y.classes,h=u.now(),T=u.now(),v=this.getBoxesYoloV5(f,m,g,l),S.dispose(),i.dispose(d),h=u.now(),T=u.now(),D=i.getBackend(),i.setBackend("cpu"),w=i.tidy((function(){var e=i.tensor2d(v,[m,4]);return i.image.nonMaxSuppression(e,b,n,a,o)})),k=w.dataSync(),w.dispose(),i.setBackend(D),[2,this.buildDetectedObjects(r,c,v,b,k,x)];case 2:return S=i.tidy((function(){return t instanceof i.Tensor||(t=i.browser.fromPixels(t)),t.expandDims(0)})),I=S.shape[1],N=S.shape[2],T=u.now(),C=this.model.execute(S),h=u.now(),_=C[0].dataSync(),E=C[1].dataSync(),S.dispose(),i.dispose(C),$=this.calculateMaxScores(_,C[0].shape[1],C[0].shape[2]),A=$[0],R=$[1],D=i.getBackend(),i.setBackend("cpu"),F=i.tidy((function(){var e=i.tensor2d(E,[C[1].shape[1],C[1].shape[3]]);return i.image.nonMaxSuppression(e,A,n,a,o)})),O=F.dataSync(),F.dispose(),i.setBackend(D),[2,this.buildDetectedObjects(N,I,E,A,O,R)]}}))}))},e.prototype.buildDetectedObjects=function(e,t,n,r,s,a){for(var i=s.length,o=[],u=0;u<i;u++){for(var l=[],c=0;c<4;c++)l[c]=n[4*s[u]+c];var h=l[0]*t,p=l[1]*e,d=l[2]*t,f=l[3]*e;o.push({class:a[s[u]],confidence:r[s[u]],bbox:{x:(p+f)/2,y:(h+d)/2,width:f-p,height:d-h}})}return o},e.prototype.calculateMaxScores=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+u]>i&&(i=e[a*n+u],o=u);r[a]=i,s[a]=o}return[r,s]},e.prototype.calculateMaxScoresYolov5=function(e,t,n){for(var r=[],s=[],a=0;a<t;a++){for(var i=Number.MIN_VALUE,o=-1,u=0;u<n;u++)e[a*n+4*(a+1)+u]>i&&(i=e[a*n+4*(a+1)+u],o=u);r[a]=i,s[a]=o}return{classes:s,scores:r}},e.prototype.getConfidenceYoloV5=function(e,t,n){for(var r=[],s=0;s<t;s++)r[s]=e[s*(n+5)+4];return r},e.prototype.getBoxesYoloV5=function(e,t,n,r){for(var s=[],a=0;a<t;a++){var i=e[a*(n+4)+0],o=e[a*(n+4)+1],u=e[a*(n+4)+2],l=e[a*(n+4)+3],c=i-u/2,h=o-l/2,p=i+u/2,d=o+l/2;s[4*a]=h/r,s[4*a+1]=c/r,s[4*a+2]=d/r,s[4*a+3]=p/r}return new Float32Array(s)},e.prototype.detect=function(e,t,n,a,i,o){return void 0===n&&(n=20),void 0===a&&(a=.5),void 0===i&&(i=.5),void 0===o&&(o=640),r(this,void 0,Promise,(function(){return s(this,(function(r){return[2,this.infer(e,t,n,a,i,o)]}))}))},e.prototype.dispose=function(){null!=this.model&&this.model.dispose()},e}();t.ObjectDetection=l},79:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="2.1.0"},6630:(e,t,n)=>{const r=n(6486).runInContext(),s=n(7664),a=n(9669),i=n(4749),o=n(6839),u=n(9100),l=n(310),c=n(3323),h=n(1541),p=n(3345),d=n(9111),{JSONHandler:f}=n(3602);var m,g,y=!1;console.log("initializing...");var b={};const x=function(e,t){return new Promise((function(r,s){const a=n(6192);"undefined"==typeof window&&i.existsSync("/cache/")&&i.existsSync("/cache/"+e+"/"+t)?a("/cache/"+e+"/"+t,(function(){r()})):r()}))},v=function(e,t,n){return new Promise((function(r,u){var l="/cache/"+e+"/"+t+"/";if("undefined"==typeof window&&i.existsSync(l)&&!n){console.log("loading from offline cache...");var c=JSON.parse(i.readFileSync(l+"tfjs.json"));c.u!=g||c.expirationTime<Date.now()?x(e,t).then((function(){v(e,t).then((function(e){r(e)}))})):c.expirationTime-6048e5<Date.now()?((!b[e+"/"+t]||b[e+"/"+t]<Date.now()-36e5)&&v(e,t,!0),c.expirationTime-5184e5<Date.now()&&(c.warn=!0),r(c)):r(c)}else{console.log("requesting from roboflow server...");var h=y?"https://api.roboflow.one/tfjs":"https://api.roboflow.com/tfjs";"undefined"==typeof window&&process&&process.env&&process.env.LICENSE_SERVER&&(h=(process.env.LICENSE_SERVER_SSL?"https://":"http://")+process.env.LICENSE_SERVER+"/tfjs"),a.get([h,e,t].join("/"),{params:{publishable_key:m,host:"undefined"!=typeof window?window.location.host:"node",u:g,v:"0.2.26"}}).then((function(l){if(l&&!l.error&&l.data&&l.data.tfjs){var c=l.data.tfjs;(function(e,t,n,r){return new Promise((function(r){if("undefined"==typeof window&&e.allowCache&&i.existsSync("/cache/")&&!i.existsSync("/cache/"+t+"/"+n+"/tfjs.json")){b[t+"/"+n]=Date.now();var u="/cache/"+t+"/"+n+"/";i.existsSync(u)||i.mkdirSync("/cache/"+t+"/"+n,{recursive:!0}),s.each(e.model.weightsManifest[0].paths,(function(e,t){var n=e;"undefined"!=typeof process&&process.env&&process.env.LICENSE_SERVER&&(e=(process.env.LICENSE_SERVER_SSL?"https://":"http://")+process.env.LICENSE_SERVER+"/proxy?url="+encodeURIComponent(e)),a({method:"get",url:e,responseType:"stream"}).then((function(e){var r=i.createWriteStream(u+o.basename(n));e.data.pipe(r),r.on("finish",(function(){t(null)}))}))}),(function(t){e.cached=!0,e.expirationTime=Date.now()+e.allowCache,i.writeFile(u+"tfjs.json",JSON.stringify(e),"utf8",(function(){r()}))}))}else r()}))})(c,e,t).then((function(){r(c)})).catch((function(r){n||x(e,t),u(r)}))}else u(l)})).catch((function(e){u(e)}))}}))};e.exports={auth:function(t){if(!t||"object"!=typeof t)throw new Error("You must pass an options object containing your `publishable_key` as the first argument.");if(!t.publishable_key)throw new Error("Your `publishable_key` is required.");if("string"!=typeof t.publishable_key)throw new Error("Your `publishable_key` is malformed.");return t.staging&&(y=!0),m=t.publishable_key,g=r.fp(),e.exports},load:function(e){return new Promise((function(t,s){if(!m)return s("You must call `auth` with your `publishable_key` before loading a model.");if(!e||"object"!=typeof e)return s("You must pass an object with the `model` and `version` you would like to load.");var a,i=e.model||e.dataset,u=parseInt(e.version);if(!i||!u||"string"!=typeof i||!r.isInteger(u))return s("Invalid options. You must pass an object with the `model` and `version` you would like to load.");v(i,u).then((function(s){if(s.cached){var m="http://localhost:9001/cache/"+i+"/"+u+"/";r.each(s.model.weightsManifest[0].paths,(function(e,t){s.model.weightsManifest[0].paths[t]=m+o.basename(e)}))}else"undefined"!=typeof process&&process.env&&process.env.LICENSE_SERVER&&r.each(s.model.weightsManifest[0].paths,(function(e,t){s.model.weightsManifest[0].paths[t]=(process.env.LICENSE_SERVER_SSL?"https://":"http://")+process.env.LICENSE_SERVER+"/proxy?url="+encodeURIComponent(e)}));a={name:s.name,type:s.type,icon:s.icon,annotation:s.iconHasAnnotation&&s.annotation,size:s.size,classes:s.classes},r.isFunction(e.onMetadata)&&e.onMetadata(a);const g=new f(s.model);"undefined"==typeof window&&(g.fetch=n(6786));const y=s.size,b=p(s.classes);var x,v;(s.modelType||"").startsWith("yolov5v6")?(x=c,v="yolov5s"):(s.modelType||"").startsWith("yolov8")?(x=h,v="yolov8"):(x=l,v="yolov5s"),x.load({base:v,modelUrl:g,inputSize:y}).then((function(e){var n=e,i=.5,o=.5,u=20,l=null,c=!1;const h={configure:function(e){if(c)return h;if(!e||"object"!=typeof e)throw new Error("You must pass a configuration object. It may contain any of the following keys: `threshold`, `overlap`, `max_objects`");return r.isFinite(parseFloat(e.threshold))&&(i=parseFloat(e.threshold)),r.isFinite(parseFloat(e.overlap))&&(o=parseFloat(e.overlap)),r.isFinite(parseInt(e.max_objects))&&(u=parseInt(e.max_objects)),r.isString(e.filter)&&(e.filter=[e.filter]),(r.isArray(e.filter)||null===e.filter)&&(l=e.filter),h},getConfiguration:function(){var e={threshold:i,nms_threshold:o,max_objects:u,filter:l};return s.expirationTime&&(e.expiration={value:(s.expirationTime-Date.now())/1e3/60/60/24,unit:"days"}),e},getMetadata:function(){return a},detect:function(t,n={}){if(c)throw new Error("This model has already been destroyed.");const s=t;var a=s.width||s.videoWidth||s.shape&&s.shape[1]||640,h=s.height||s.videoHeight||s.shape&&s.shape[0]||480;const p=n.staticCrop&&n.staticCrop.top||0,f=n.staticCrop&&n.staticCrop.left||0,m=n.staticCrop&&n.staticCrop.bottom||1,g=n.staticCrop&&n.staticCrop.right||1;var x=!1;return n&&n.staticCrop&&(x=!0,t=d.tidy((()=>(t instanceof d.Tensor||(t=d.browser.fromPixels(t)),d.cast(d.image.cropAndResize(t.expandDims(0),[[p,f,m,g]],[0],[y,y],"nearest").squeeze(0),"int32"))))),e.detect(v,t,u,o,i,y).then((function(e){return x&&t.dispose(),r.chain(e).map((function(e){var t=b(e.class);if(e.class=t.class,e.color=t.color,l&&!l.includes(e.class))return null;let r=Math.abs(g-f),s=Math.abs(m-p);return n&&n.staticCrop&&(r*=a/y,s*=h/y),e.bbox.x=e.bbox.x*r+f*a,e.bbox.y=e.bbox.y*s+p*h,e.bbox.width*=r,e.bbox.height*=s,e})).filter().value()}))},teardown:function(){n.dispose(),c=!0,n=null,e=null}};t(h)}))})).catch((function(e){e.response&&429==e.response.status&&("undefined"==typeof window?console.log:alert)("Roboflow development models are limited to 5 monthly devices. Please contact sales to upgrade to Pro and deploy your app."),s(e.response&&e.response.data||e)}))}))},tf:d,VERSION:"0.2.26"},r.mixin({fp:function(){var e,t;if("undefined"==typeof window){var s;const t=n(4749);try{t.readFileSync("/.dockerenv","utf-8"),s=!0}catch(e){s=!1}if(s){const t=(0,n(3129).execSync)("hostid",{encoding:"UTF-8"}).trim();if("11ac0200"==t)throw"Error: must run with Docker --net=host flag";e=t}if(!e){const t=n(2087),s=r.pickBy(t.networkInterfaces()||{},(function(e,t){return 0!==t.indexOf("lo")&&r.find(e,(function(e){return!e.internal&&e.mac&&e.address}))})),a=s.en0||s.eth0||r.values(s)[0];if(!a)throw"Error: no network connection present.";e=a[0].mac,e=Math.abs(r.hashCode(e)).toString(36)}var a="node-";return process.env.PRINT_FINGERPRINT&&console.log("FINGERPRINT",a+e),a+e}return(e=r.getItem("rf_tfjs_init"))||(e=Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(36),r.setItem("rf_tfjs_init",e)),t=u.default(),Math.abs(r.hashCode(t)).toString(36)+"-"+e},hashCode:function(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t&=t;return t},superClone:function(e){return JSON.parse(JSON.stringify(e))},getItem:function(e){try{return localStorage.getItem(e)}catch(e){}},setItem:function(e,t){try{localStorage.setItem(e,t)}catch(e){}},removeItem:function(e){try{localStorage.removeItem(e)}catch(e){}}})},3345:(e,t,n)=>{const r=n(6486);e.exports=function(e,t){var n={},s=["#4892EA","#00EEC3","#FE4EF0","#F4004E","#FA7200","#EEEE17","#90FF00","#78C1D2","#8C29FF"];return r.each(e,(function(e,t){n[t]=n[t]||s[t%s.length]})),r.isFunction(t)&&r.defer(t),function(t){return{class:e[t]||t,color:n[t]}}}},3129:e=>{"use strict";e.exports=require("child_process")},6786:e=>{"use strict";e.exports=node-fetch},2087:e=>{"use strict";e.exports=require("os")},6192:e=>{"use strict";e.exports=rimraf},4749:e=>{"use strict";e.exports=window.fs},6839:e=>{"use strict";e.exports=window.path},3906:()=>{},4589:()=>{},1758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}return n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(6630)})();
//# sourceMappingURL=roboflow.js.map
